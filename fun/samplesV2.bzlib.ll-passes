; ModuleID = './generated_data/samplesV2.bzlib.ll'
source_filename = "./data/samplesV2/bzlib.c"
target datalayout = "e-m:o-i64:64-i128:128-n32:64-S128-Fn32"
target triple = "arm64-apple-macosx14.0.0"

%struct.bz_stream = type { ptr, i32, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, ptr }
%struct.EState = type { ptr, i32, i32, i32, ptr, ptr, ptr, i32, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [256 x i8], [256 x i8], i32, i32, i32, i32, i32, i32, i32, i32, [258 x i32], [18002 x i8], [18002 x i8], [6 x [258 x i8]], [6 x [258 x i32]], [6 x [258 x i32]], [258 x [4 x i32]] }
%struct.DState = type { ptr, i32, i8, i32, i8, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, [256 x i32], i32, [257 x i32], [257 x i32], ptr, ptr, ptr, i32, i32, i32, i32, i32, [256 x i8], [16 x i8], [256 x i8], [4096 x i8], [16 x i32], [18002 x i8], [18002 x i8], [6 x [258 x i8]], [6 x [258 x i32]], [6 x [258 x i32]], [6 x [258 x i32]], [6 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, ptr }
%struct.bzFile = type { ptr, [5000 x i8], i32, i8, %struct.bz_stream, i32, i8 }

@__stderrp = external global ptr, align 8
@.str = private unnamed_addr constant [443 x i8] c"\0A\0Abzip2/libbzip2: internal error number %d.\0AThis is a bug in bzip2/libbzip2, %s.\0APlease report it to me at: jseward@bzip.org.  If this happened\0Awhen you were using some program which uses libbzip2 as a\0Acomponent, you should also report this bug to the author(s)\0Aof that program.  Please make an effort to report this bug;\0Atimely and accurate bug reports eventually lead to higher\0Aquality software.  Thanks.  Julian Seward, 15 February 2005.\0A\0A\00", align 1
@.str.1 = private unnamed_addr constant [1057 x i8] c"\0A*** A special note about internal error number 1007 ***\0A\0AExperience suggests that a common cause of i.e. 1007\0Ais unreliable memory or other hardware.  The 1007 assertion\0Ajust happens to cross-check the results of huge numbers of\0Amemory reads/writes, and so acts (unintendedly) as a stress\0Atest of your memory system.\0A\0AI suggest the following: try compressing the file again,\0Apossibly monitoring progress in detail with the -vv flag.\0A\0A* If the error cannot be reproduced, and/or happens at different\0A  points in compression, you may have a flaky memory system.\0A  Try a memory-test program.  I have used Memtest86\0A  (www.memtest86.com).  At the time of writing it is free (GPLd).\0A  Memtest86 tests memory much more thorougly than your BIOSs\0A  power-on test, and may find failures that the BIOS doesn't.\0A\0A* If the error can be repeatably reproduced, this is a bug in\0A  bzip2, and I would very much like to hear about it.  Please\0A  let me know, and, ideally, save a copy of the file causing the\0A  problem -- without which I will be unable to investigate it.\0A\0A\00", align 1
@.str.2 = private unnamed_addr constant [18 x i8] c" {0x%08x, 0x%08x}\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@.str.4 = private unnamed_addr constant [55 x i8] c"\0A    combined CRCs: stored = 0x%08x, computed = 0x%08x\00", align 1
@.str.5 = private unnamed_addr constant [19 x i8] c"1.0.4, 20-Dec-2006\00", align 1
@__stdinp = external global ptr, align 8
@__stdoutp = external global ptr, align 8
@bzerrorstrings = internal global [16 x ptr] [ptr @.str.10, ptr @.str.11, ptr @.str.12, ptr @.str.13, ptr @.str.14, ptr @.str.15, ptr @.str.16, ptr @.str.17, ptr @.str.18, ptr @.str.19, ptr @.str.20, ptr @.str.20, ptr @.str.20, ptr @.str.20, ptr @.str.20, ptr @.str.20], align 8
@BZ2_crc32Table = external global [256 x i32], align 4
@BZ2_rNums = external global [512 x i32], align 4
@.str.6 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@.str.9 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.10 = private unnamed_addr constant [3 x i8] c"OK\00", align 1
@.str.11 = private unnamed_addr constant [15 x i8] c"SEQUENCE_ERROR\00", align 1
@.str.12 = private unnamed_addr constant [12 x i8] c"PARAM_ERROR\00", align 1
@.str.13 = private unnamed_addr constant [10 x i8] c"MEM_ERROR\00", align 1
@.str.14 = private unnamed_addr constant [11 x i8] c"DATA_ERROR\00", align 1
@.str.15 = private unnamed_addr constant [17 x i8] c"DATA_ERROR_MAGIC\00", align 1
@.str.16 = private unnamed_addr constant [9 x i8] c"IO_ERROR\00", align 1
@.str.17 = private unnamed_addr constant [15 x i8] c"UNEXPECTED_EOF\00", align 1
@.str.18 = private unnamed_addr constant [13 x i8] c"OUTBUFF_FULL\00", align 1
@.str.19 = private unnamed_addr constant [13 x i8] c"CONFIG_ERROR\00", align 1
@.str.20 = private unnamed_addr constant [4 x i8] c"???\00", align 1

; Function Attrs: noinline nounwind ssp uwtable(sync)
define void @BZ2_bz__AssertH__fail(i32 noundef %0) #0 {
  %2 = alloca i32, align 4
  store i32 %0, ptr %2, align 4
  %3 = load ptr, ptr @__stderrp, align 8
  %4 = load i32, ptr %2, align 4
  %5 = tail call ptr @BZ2_bzlibVersion()
  %6 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %3, ptr noundef @.str, i32 noundef %4, ptr noundef %5) #7
  %7 = load i32, ptr %2, align 4
  %8 = icmp eq i32 %7, 1007
  br i1 %8, label %9, label %12

9:                                                ; preds = %1
  %10 = load ptr, ptr @__stderrp, align 8
  %11 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %10, ptr noundef @.str.1) #7
  br label %12

12:                                               ; preds = %9, %1
  tail call void @exit(i32 noundef 3) #8
  unreachable
}

; Function Attrs: nounwind
declare i32 @fprintf(ptr noundef, ptr noundef, ...) #1

; Function Attrs: noinline nounwind ssp uwtable(sync)
define ptr @BZ2_bzlibVersion() #0 {
  ret ptr @.str.5
}

; Function Attrs: noreturn
declare void @exit(i32 noundef) #2

; Function Attrs: noinline nounwind ssp uwtable(sync)
define i32 @BZ2_bzCompressInit(ptr noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca ptr, align 8
  store ptr %0, ptr %6, align 8
  store i32 %1, ptr %7, align 4
  store i32 %2, ptr %8, align 4
  store i32 %3, ptr %9, align 4
  %12 = tail call i32 @bz_config_ok()
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %4
  store i32 -9, ptr %5, align 4
  br label %234

15:                                               ; preds = %4
  %16 = load ptr, ptr %6, align 8
  %17 = icmp eq ptr %16, null
  br i1 %17, label %30, label %18

18:                                               ; preds = %15
  %19 = load i32, ptr %7, align 4
  %20 = icmp slt i32 %19, 1
  br i1 %20, label %30, label %21

21:                                               ; preds = %18
  %22 = load i32, ptr %7, align 4
  %23 = icmp sgt i32 %22, 9
  br i1 %23, label %30, label %24

24:                                               ; preds = %21
  %25 = load i32, ptr %9, align 4
  %26 = icmp slt i32 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = load i32, ptr %9, align 4
  %29 = icmp sgt i32 %28, 250
  br i1 %29, label %30, label %31

30:                                               ; preds = %27, %24, %21, %18, %15
  store i32 -2, ptr %5, align 4
  br label %234

31:                                               ; preds = %27
  %32 = load i32, ptr %9, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  store i32 30, ptr %9, align 4
  br label %35

35:                                               ; preds = %34, %31
  %36 = load ptr, ptr %6, align 8
  %37 = getelementptr inbounds %struct.bz_stream, ptr %36, i32 0, i32 9
  %38 = load ptr, ptr %37, align 8
  %39 = icmp eq ptr %38, null
  br i1 %39, label %40, label %43

40:                                               ; preds = %35
  %41 = load ptr, ptr %6, align 8
  %42 = getelementptr inbounds %struct.bz_stream, ptr %41, i32 0, i32 9
  store ptr @default_bzalloc, ptr %42, align 8
  br label %43

43:                                               ; preds = %40, %35
  %44 = load ptr, ptr %6, align 8
  %45 = getelementptr inbounds %struct.bz_stream, ptr %44, i32 0, i32 10
  %46 = load ptr, ptr %45, align 8
  %47 = icmp eq ptr %46, null
  br i1 %47, label %48, label %51

48:                                               ; preds = %43
  %49 = load ptr, ptr %6, align 8
  %50 = getelementptr inbounds %struct.bz_stream, ptr %49, i32 0, i32 10
  store ptr @default_bzfree, ptr %50, align 8
  br label %51

51:                                               ; preds = %48, %43
  %52 = load ptr, ptr %6, align 8
  %53 = getelementptr inbounds %struct.bz_stream, ptr %52, i32 0, i32 9
  %54 = load ptr, ptr %53, align 8
  %55 = load ptr, ptr %6, align 8
  %56 = getelementptr inbounds %struct.bz_stream, ptr %55, i32 0, i32 11
  %57 = load ptr, ptr %56, align 8
  %58 = tail call ptr %54(ptr noundef %57, i32 noundef 55768, i32 noundef 1)
  store ptr %58, ptr %11, align 8
  %59 = load ptr, ptr %11, align 8
  %60 = icmp eq ptr %59, null
  br i1 %60, label %61, label %62

61:                                               ; preds = %51
  store i32 -3, ptr %5, align 4
  br label %234

62:                                               ; preds = %51
  %63 = load ptr, ptr %6, align 8
  %64 = load ptr, ptr %11, align 8
  %65 = getelementptr inbounds %struct.EState, ptr %64, i32 0, i32 0
  store ptr %63, ptr %65, align 8
  %66 = load ptr, ptr %11, align 8
  %67 = getelementptr inbounds %struct.EState, ptr %66, i32 0, i32 4
  store ptr null, ptr %67, align 8
  %68 = load ptr, ptr %11, align 8
  %69 = getelementptr inbounds %struct.EState, ptr %68, i32 0, i32 5
  store ptr null, ptr %69, align 8
  %70 = load ptr, ptr %11, align 8
  %71 = getelementptr inbounds %struct.EState, ptr %70, i32 0, i32 6
  store ptr null, ptr %71, align 8
  %72 = load i32, ptr %7, align 4
  %73 = mul nsw i32 100000, %72
  store i32 %73, ptr %10, align 4
  %74 = load ptr, ptr %6, align 8
  %75 = getelementptr inbounds %struct.bz_stream, ptr %74, i32 0, i32 9
  %76 = load ptr, ptr %75, align 8
  %77 = load ptr, ptr %6, align 8
  %78 = getelementptr inbounds %struct.bz_stream, ptr %77, i32 0, i32 11
  %79 = load ptr, ptr %78, align 8
  %80 = load i32, ptr %10, align 4
  %81 = sext i32 %80 to i64
  %82 = mul i64 %81, 4
  %83 = trunc i64 %82 to i32
  %84 = tail call ptr %76(ptr noundef %79, i32 noundef %83, i32 noundef 1)
  %85 = load ptr, ptr %11, align 8
  %86 = getelementptr inbounds %struct.EState, ptr %85, i32 0, i32 4
  store ptr %84, ptr %86, align 8
  %87 = load ptr, ptr %6, align 8
  %88 = getelementptr inbounds %struct.bz_stream, ptr %87, i32 0, i32 9
  %89 = load ptr, ptr %88, align 8
  %90 = load ptr, ptr %6, align 8
  %91 = getelementptr inbounds %struct.bz_stream, ptr %90, i32 0, i32 11
  %92 = load ptr, ptr %91, align 8
  %93 = load i32, ptr %10, align 4
  %94 = add nsw i32 %93, 34
  %95 = sext i32 %94 to i64
  %96 = mul i64 %95, 4
  %97 = trunc i64 %96 to i32
  %98 = tail call ptr %89(ptr noundef %92, i32 noundef %97, i32 noundef 1)
  %99 = load ptr, ptr %11, align 8
  %100 = getelementptr inbounds %struct.EState, ptr %99, i32 0, i32 5
  store ptr %98, ptr %100, align 8
  %101 = load ptr, ptr %6, align 8
  %102 = getelementptr inbounds %struct.bz_stream, ptr %101, i32 0, i32 9
  %103 = load ptr, ptr %102, align 8
  %104 = load ptr, ptr %6, align 8
  %105 = getelementptr inbounds %struct.bz_stream, ptr %104, i32 0, i32 11
  %106 = load ptr, ptr %105, align 8
  %107 = tail call ptr %103(ptr noundef %106, i32 noundef 262148, i32 noundef 1)
  %108 = load ptr, ptr %11, align 8
  %109 = getelementptr inbounds %struct.EState, ptr %108, i32 0, i32 6
  store ptr %107, ptr %109, align 8
  %110 = load ptr, ptr %11, align 8
  %111 = getelementptr inbounds %struct.EState, ptr %110, i32 0, i32 4
  %112 = load ptr, ptr %111, align 8
  %113 = icmp eq ptr %112, null
  br i1 %113, label %124, label %114

114:                                              ; preds = %62
  %115 = load ptr, ptr %11, align 8
  %116 = getelementptr inbounds %struct.EState, ptr %115, i32 0, i32 5
  %117 = load ptr, ptr %116, align 8
  %118 = icmp eq ptr %117, null
  br i1 %118, label %124, label %119

119:                                              ; preds = %114
  %120 = load ptr, ptr %11, align 8
  %121 = getelementptr inbounds %struct.EState, ptr %120, i32 0, i32 6
  %122 = load ptr, ptr %121, align 8
  %123 = icmp eq ptr %122, null
  br i1 %123, label %124, label %181

124:                                              ; preds = %119, %114, %62
  %125 = load ptr, ptr %11, align 8
  %126 = getelementptr inbounds %struct.EState, ptr %125, i32 0, i32 4
  %127 = load ptr, ptr %126, align 8
  %128 = icmp ne ptr %127, null
  br i1 %128, label %129, label %139

129:                                              ; preds = %124
  %130 = load ptr, ptr %6, align 8
  %131 = getelementptr inbounds %struct.bz_stream, ptr %130, i32 0, i32 10
  %132 = load ptr, ptr %131, align 8
  %133 = load ptr, ptr %6, align 8
  %134 = getelementptr inbounds %struct.bz_stream, ptr %133, i32 0, i32 11
  %135 = load ptr, ptr %134, align 8
  %136 = load ptr, ptr %11, align 8
  %137 = getelementptr inbounds %struct.EState, ptr %136, i32 0, i32 4
  %138 = load ptr, ptr %137, align 8
  tail call void %132(ptr noundef %135, ptr noundef %138)
  br label %139

139:                                              ; preds = %129, %124
  %140 = load ptr, ptr %11, align 8
  %141 = getelementptr inbounds %struct.EState, ptr %140, i32 0, i32 5
  %142 = load ptr, ptr %141, align 8
  %143 = icmp ne ptr %142, null
  br i1 %143, label %144, label %154

144:                                              ; preds = %139
  %145 = load ptr, ptr %6, align 8
  %146 = getelementptr inbounds %struct.bz_stream, ptr %145, i32 0, i32 10
  %147 = load ptr, ptr %146, align 8
  %148 = load ptr, ptr %6, align 8
  %149 = getelementptr inbounds %struct.bz_stream, ptr %148, i32 0, i32 11
  %150 = load ptr, ptr %149, align 8
  %151 = load ptr, ptr %11, align 8
  %152 = getelementptr inbounds %struct.EState, ptr %151, i32 0, i32 5
  %153 = load ptr, ptr %152, align 8
  tail call void %147(ptr noundef %150, ptr noundef %153)
  br label %154

154:                                              ; preds = %144, %139
  %155 = load ptr, ptr %11, align 8
  %156 = getelementptr inbounds %struct.EState, ptr %155, i32 0, i32 6
  %157 = load ptr, ptr %156, align 8
  %158 = icmp ne ptr %157, null
  br i1 %158, label %159, label %169

159:                                              ; preds = %154
  %160 = load ptr, ptr %6, align 8
  %161 = getelementptr inbounds %struct.bz_stream, ptr %160, i32 0, i32 10
  %162 = load ptr, ptr %161, align 8
  %163 = load ptr, ptr %6, align 8
  %164 = getelementptr inbounds %struct.bz_stream, ptr %163, i32 0, i32 11
  %165 = load ptr, ptr %164, align 8
  %166 = load ptr, ptr %11, align 8
  %167 = getelementptr inbounds %struct.EState, ptr %166, i32 0, i32 6
  %168 = load ptr, ptr %167, align 8
  tail call void %162(ptr noundef %165, ptr noundef %168)
  br label %169

169:                                              ; preds = %159, %154
  %170 = load ptr, ptr %11, align 8
  %171 = icmp ne ptr %170, null
  br i1 %171, label %172, label %180

172:                                              ; preds = %169
  %173 = load ptr, ptr %6, align 8
  %174 = getelementptr inbounds %struct.bz_stream, ptr %173, i32 0, i32 10
  %175 = load ptr, ptr %174, align 8
  %176 = load ptr, ptr %6, align 8
  %177 = getelementptr inbounds %struct.bz_stream, ptr %176, i32 0, i32 11
  %178 = load ptr, ptr %177, align 8
  %179 = load ptr, ptr %11, align 8
  tail call void %175(ptr noundef %178, ptr noundef %179)
  br label %180

180:                                              ; preds = %172, %169
  store i32 -3, ptr %5, align 4
  br label %234

181:                                              ; preds = %119
  %182 = load ptr, ptr %11, align 8
  %183 = getelementptr inbounds %struct.EState, ptr %182, i32 0, i32 29
  store i32 0, ptr %183, align 4
  %184 = load ptr, ptr %11, align 8
  %185 = getelementptr inbounds %struct.EState, ptr %184, i32 0, i32 2
  store i32 2, ptr %185, align 4
  %186 = load ptr, ptr %11, align 8
  %187 = getelementptr inbounds %struct.EState, ptr %186, i32 0, i32 1
  store i32 2, ptr %187, align 8
  %188 = load ptr, ptr %11, align 8
  %189 = getelementptr inbounds %struct.EState, ptr %188, i32 0, i32 27
  store i32 0, ptr %189, align 4
  %190 = load i32, ptr %7, align 4
  %191 = load ptr, ptr %11, align 8
  %192 = getelementptr inbounds %struct.EState, ptr %191, i32 0, i32 30
  store i32 %190, ptr %192, align 8
  %193 = load i32, ptr %7, align 4
  %194 = mul nsw i32 100000, %193
  %195 = sub nsw i32 %194, 19
  %196 = load ptr, ptr %11, align 8
  %197 = getelementptr inbounds %struct.EState, ptr %196, i32 0, i32 18
  store i32 %195, ptr %197, align 8
  %198 = load i32, ptr %8, align 4
  %199 = load ptr, ptr %11, align 8
  %200 = getelementptr inbounds %struct.EState, ptr %199, i32 0, i32 28
  store i32 %198, ptr %200, align 8
  %201 = load i32, ptr %9, align 4
  %202 = load ptr, ptr %11, align 8
  %203 = getelementptr inbounds %struct.EState, ptr %202, i32 0, i32 12
  store i32 %201, ptr %203, align 8
  %204 = load ptr, ptr %11, align 8
  %205 = getelementptr inbounds %struct.EState, ptr %204, i32 0, i32 5
  %206 = load ptr, ptr %205, align 8
  %207 = load ptr, ptr %11, align 8
  %208 = getelementptr inbounds %struct.EState, ptr %207, i32 0, i32 9
  store ptr %206, ptr %208, align 8
  %209 = load ptr, ptr %11, align 8
  %210 = getelementptr inbounds %struct.EState, ptr %209, i32 0, i32 4
  %211 = load ptr, ptr %210, align 8
  %212 = load ptr, ptr %11, align 8
  %213 = getelementptr inbounds %struct.EState, ptr %212, i32 0, i32 10
  store ptr %211, ptr %213, align 8
  %214 = load ptr, ptr %11, align 8
  %215 = getelementptr inbounds %struct.EState, ptr %214, i32 0, i32 11
  store ptr null, ptr %215, align 8
  %216 = load ptr, ptr %11, align 8
  %217 = getelementptr inbounds %struct.EState, ptr %216, i32 0, i32 4
  %218 = load ptr, ptr %217, align 8
  %219 = load ptr, ptr %11, align 8
  %220 = getelementptr inbounds %struct.EState, ptr %219, i32 0, i32 8
  store ptr %218, ptr %220, align 8
  %221 = load ptr, ptr %11, align 8
  %222 = load ptr, ptr %6, align 8
  %223 = getelementptr inbounds %struct.bz_stream, ptr %222, i32 0, i32 8
  store ptr %221, ptr %223, align 8
  %224 = load ptr, ptr %6, align 8
  %225 = getelementptr inbounds %struct.bz_stream, ptr %224, i32 0, i32 2
  store i32 0, ptr %225, align 4
  %226 = load ptr, ptr %6, align 8
  %227 = getelementptr inbounds %struct.bz_stream, ptr %226, i32 0, i32 3
  store i32 0, ptr %227, align 8
  %228 = load ptr, ptr %6, align 8
  %229 = getelementptr inbounds %struct.bz_stream, ptr %228, i32 0, i32 6
  store i32 0, ptr %229, align 4
  %230 = load ptr, ptr %6, align 8
  %231 = getelementptr inbounds %struct.bz_stream, ptr %230, i32 0, i32 7
  store i32 0, ptr %231, align 8
  %232 = load ptr, ptr %11, align 8
  tail call void @init_RL(ptr noundef %232)
  %233 = load ptr, ptr %11, align 8
  tail call void @prepare_new_block(ptr noundef %233)
  store i32 0, ptr %5, align 4
  br label %234

234:                                              ; preds = %181, %180, %61, %30, %14
  %235 = load i32, ptr %5, align 4
  ret i32 %235
}

; Function Attrs: noinline nounwind ssp uwtable(sync)
define internal i32 @bz_config_ok() #0 {
  ret i32 1
}

; Function Attrs: noinline nounwind ssp uwtable(sync)
define internal ptr @default_bzalloc(ptr noundef %0, i32 noundef %1, i32 noundef %2) #0 {
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  store i32 %1, ptr %5, align 4
  store i32 %2, ptr %6, align 4
  %8 = load i32, ptr %5, align 4
  %9 = load i32, ptr %6, align 4
  %10 = mul nsw i32 %8, %9
  %11 = sext i32 %10 to i64
  %12 = tail call ptr @malloc(i64 noundef %11) #9
  store ptr %12, ptr %7, align 8
  %13 = load ptr, ptr %7, align 8
  ret ptr %13
}

; Function Attrs: noinline nounwind ssp uwtable(sync)
define internal void @default_bzfree(ptr noundef %0, ptr noundef %1) #0 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  store ptr %1, ptr %4, align 8
  %5 = load ptr, ptr %4, align 8
  %6 = icmp ne ptr %5, null
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = load ptr, ptr %4, align 8
  tail call void @free(ptr noundef %8)
  br label %9

9:                                                ; preds = %7, %2
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable(sync)
define internal void @init_RL(ptr noundef %0) #0 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds %struct.EState, ptr %3, i32 0, i32 13
  store i32 256, ptr %4, align 4
  %5 = load ptr, ptr %2, align 8
  %6 = getelementptr inbounds %struct.EState, ptr %5, i32 0, i32 14
  store i32 0, ptr %6, align 8
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable(sync)
define internal void @prepare_new_block(ptr noundef %0) #0 {
  %2 = alloca ptr, align 8
  %3 = alloca i32, align 4
  store ptr %0, ptr %2, align 8
  %4 = load ptr, ptr %2, align 8
  %5 = getelementptr inbounds %struct.EState, ptr %4, i32 0, i32 17
  store i32 0, ptr %5, align 4
  %6 = load ptr, ptr %2, align 8
  %7 = getelementptr inbounds %struct.EState, ptr %6, i32 0, i32 19
  store i32 0, ptr %7, align 4
  %8 = load ptr, ptr %2, align 8
  %9 = getelementptr inbounds %struct.EState, ptr %8, i32 0, i32 20
  store i32 0, ptr %9, align 8
  %10 = load ptr, ptr %2, align 8
  %11 = getelementptr inbounds %struct.EState, ptr %10, i32 0, i32 26
  store i32 -1, ptr %11, align 8
  store i32 0, ptr %3, align 4
  %12 = load i32, ptr %3, align 4
  %13 = icmp slt i32 %12, 256
  br i1 %13, label %.lr.ph, label %24

.lr.ph:                                           ; preds = %1
  br label %14

14:                                               ; preds = %.lr.ph, %14
  %15 = load ptr, ptr %2, align 8
  %16 = getelementptr inbounds %struct.EState, ptr %15, i32 0, i32 22
  %17 = load i32, ptr %3, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [256 x i8], ptr %16, i64 0, i64 %18
  store i8 0, ptr %19, align 1
  %20 = load i32, ptr %3, align 4
  %21 = add nsw i32 %20, 1
  store i32 %21, ptr %3, align 4
  %22 = load i32, ptr %3, align 4
  %23 = icmp slt i32 %22, 256
  br i1 %23, label %14, label %._crit_edge, !llvm.loop !5

._crit_edge:                                      ; preds = %14
  br label %24

24:                                               ; preds = %._crit_edge, %1
  %25 = load ptr, ptr %2, align 8
  %26 = getelementptr inbounds %struct.EState, ptr %25, i32 0, i32 29
  %27 = load i32, ptr %26, align 4
  %28 = add nsw i32 %27, 1
  store i32 %28, ptr %26, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable(sync)
define i32 @BZ2_bzCompress(ptr noundef %0, i32 noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  store i32 %1, ptr %5, align 4
  %8 = load ptr, ptr %4, align 8
  %9 = icmp eq ptr %8, null
  br i1 %9, label %10, label %11

10:                                               ; preds = %2
  store i32 -2, ptr %3, align 4
  br label %146

11:                                               ; preds = %2
  %12 = load ptr, ptr %4, align 8
  %13 = getelementptr inbounds %struct.bz_stream, ptr %12, i32 0, i32 8
  %14 = load ptr, ptr %13, align 8
  store ptr %14, ptr %7, align 8
  %15 = load ptr, ptr %7, align 8
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %18

17:                                               ; preds = %11
  store i32 -2, ptr %3, align 4
  br label %146

18:                                               ; preds = %11
  %19 = load ptr, ptr %7, align 8
  %20 = getelementptr inbounds %struct.EState, ptr %19, i32 0, i32 0
  %21 = load ptr, ptr %20, align 8
  %22 = load ptr, ptr %4, align 8
  %23 = icmp ne ptr %21, %22
  br i1 %23, label %24, label %25

24:                                               ; preds = %18
  store i32 -2, ptr %3, align 4
  br label %146

25:                                               ; preds = %18
  br label %26

26:                                               ; preds = %.backedge, %25
  %27 = load ptr, ptr %7, align 8
  %28 = getelementptr inbounds %struct.EState, ptr %27, i32 0, i32 1
  %29 = load i32, ptr %28, align 8
  switch i32 %29, label %145 [
    i32 1, label %30
    i32 2, label %31
    i32 3, label %65
    i32 4, label %103
  ]

30:                                               ; preds = %26
  store i32 -1, ptr %3, align 4
  br label %146

31:                                               ; preds = %26
  %32 = load i32, ptr %5, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %42

34:                                               ; preds = %31
  %35 = load ptr, ptr %4, align 8
  %36 = tail call zeroext i8 @handle_compress(ptr noundef %35)
  store i8 %36, ptr %6, align 1
  %37 = load i8, ptr %6, align 1
  %38 = zext i8 %37 to i32
  %39 = icmp ne i32 %38, 0
  %40 = zext i1 %39 to i64
  %41 = select i1 %39, i32 1, i32 -2
  store i32 %41, ptr %3, align 4
  br label %146

42:                                               ; preds = %31
  %43 = load i32, ptr %5, align 4
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %45, label %53

45:                                               ; preds = %42
  %46 = load ptr, ptr %4, align 8
  %47 = getelementptr inbounds %struct.bz_stream, ptr %46, i32 0, i32 1
  %48 = load i32, ptr %47, align 8
  %49 = load ptr, ptr %7, align 8
  %50 = getelementptr inbounds %struct.EState, ptr %49, i32 0, i32 3
  store i32 %48, ptr %50, align 8
  %51 = load ptr, ptr %7, align 8
  %52 = getelementptr inbounds %struct.EState, ptr %51, i32 0, i32 1
  store i32 3, ptr %52, align 8
  br label %.backedge

.backedge:                                        ; preds = %45, %56
  br label %26

53:                                               ; preds = %42
  %54 = load i32, ptr %5, align 4
  %55 = icmp eq i32 %54, 2
  br i1 %55, label %56, label %64

56:                                               ; preds = %53
  %57 = load ptr, ptr %4, align 8
  %58 = getelementptr inbounds %struct.bz_stream, ptr %57, i32 0, i32 1
  %59 = load i32, ptr %58, align 8
  %60 = load ptr, ptr %7, align 8
  %61 = getelementptr inbounds %struct.EState, ptr %60, i32 0, i32 3
  store i32 %59, ptr %61, align 8
  %62 = load ptr, ptr %7, align 8
  %63 = getelementptr inbounds %struct.EState, ptr %62, i32 0, i32 1
  store i32 4, ptr %63, align 8
  br label %.backedge

64:                                               ; preds = %53
  store i32 -2, ptr %3, align 4
  br label %146

65:                                               ; preds = %26
  %66 = load i32, ptr %5, align 4
  %67 = icmp ne i32 %66, 1
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  store i32 -1, ptr %3, align 4
  br label %146

69:                                               ; preds = %65
  %70 = load ptr, ptr %7, align 8
  %71 = getelementptr inbounds %struct.EState, ptr %70, i32 0, i32 3
  %72 = load i32, ptr %71, align 8
  %73 = load ptr, ptr %7, align 8
  %74 = getelementptr inbounds %struct.EState, ptr %73, i32 0, i32 0
  %75 = load ptr, ptr %74, align 8
  %76 = getelementptr inbounds %struct.bz_stream, ptr %75, i32 0, i32 1
  %77 = load i32, ptr %76, align 8
  %78 = icmp ne i32 %72, %77
  br i1 %78, label %79, label %80

79:                                               ; preds = %69
  store i32 -1, ptr %3, align 4
  br label %146

80:                                               ; preds = %69
  %81 = load ptr, ptr %4, align 8
  %82 = tail call zeroext i8 @handle_compress(ptr noundef %81)
  store i8 %82, ptr %6, align 1
  %83 = load ptr, ptr %7, align 8
  %84 = getelementptr inbounds %struct.EState, ptr %83, i32 0, i32 3
  %85 = load i32, ptr %84, align 8
  %86 = icmp ugt i32 %85, 0
  br i1 %86, label %99, label %87

87:                                               ; preds = %80
  %88 = load ptr, ptr %7, align 8
  %89 = tail call zeroext i8 @isempty_RL(ptr noundef %88)
  %90 = icmp ne i8 %89, 0
  br i1 %90, label %91, label %99

91:                                               ; preds = %87
  %92 = load ptr, ptr %7, align 8
  %93 = getelementptr inbounds %struct.EState, ptr %92, i32 0, i32 20
  %94 = load i32, ptr %93, align 8
  %95 = load ptr, ptr %7, align 8
  %96 = getelementptr inbounds %struct.EState, ptr %95, i32 0, i32 19
  %97 = load i32, ptr %96, align 4
  %98 = icmp slt i32 %94, %97
  br i1 %98, label %99, label %100

99:                                               ; preds = %91, %87, %80
  store i32 2, ptr %3, align 4
  br label %146

100:                                              ; preds = %91
  %101 = load ptr, ptr %7, align 8
  %102 = getelementptr inbounds %struct.EState, ptr %101, i32 0, i32 1
  store i32 2, ptr %102, align 8
  store i32 1, ptr %3, align 4
  br label %146

103:                                              ; preds = %26
  %104 = load i32, ptr %5, align 4
  %105 = icmp ne i32 %104, 2
  br i1 %105, label %106, label %107

106:                                              ; preds = %103
  store i32 -1, ptr %3, align 4
  br label %146

107:                                              ; preds = %103
  %108 = load ptr, ptr %7, align 8
  %109 = getelementptr inbounds %struct.EState, ptr %108, i32 0, i32 3
  %110 = load i32, ptr %109, align 8
  %111 = load ptr, ptr %7, align 8
  %112 = getelementptr inbounds %struct.EState, ptr %111, i32 0, i32 0
  %113 = load ptr, ptr %112, align 8
  %114 = getelementptr inbounds %struct.bz_stream, ptr %113, i32 0, i32 1
  %115 = load i32, ptr %114, align 8
  %116 = icmp ne i32 %110, %115
  br i1 %116, label %117, label %118

117:                                              ; preds = %107
  store i32 -1, ptr %3, align 4
  br label %146

118:                                              ; preds = %107
  %119 = load ptr, ptr %4, align 8
  %120 = tail call zeroext i8 @handle_compress(ptr noundef %119)
  store i8 %120, ptr %6, align 1
  %121 = load i8, ptr %6, align 1
  %122 = icmp ne i8 %121, 0
  br i1 %122, label %124, label %123

123:                                              ; preds = %118
  store i32 -1, ptr %3, align 4
  br label %146

124:                                              ; preds = %118
  %125 = load ptr, ptr %7, align 8
  %126 = getelementptr inbounds %struct.EState, ptr %125, i32 0, i32 3
  %127 = load i32, ptr %126, align 8
  %128 = icmp ugt i32 %127, 0
  br i1 %128, label %141, label %129

129:                                              ; preds = %124
  %130 = load ptr, ptr %7, align 8
  %131 = tail call zeroext i8 @isempty_RL(ptr noundef %130)
  %132 = icmp ne i8 %131, 0
  br i1 %132, label %133, label %141

133:                                              ; preds = %129
  %134 = load ptr, ptr %7, align 8
  %135 = getelementptr inbounds %struct.EState, ptr %134, i32 0, i32 20
  %136 = load i32, ptr %135, align 8
  %137 = load ptr, ptr %7, align 8
  %138 = getelementptr inbounds %struct.EState, ptr %137, i32 0, i32 19
  %139 = load i32, ptr %138, align 4
  %140 = icmp slt i32 %136, %139
  br i1 %140, label %141, label %142

141:                                              ; preds = %133, %129, %124
  store i32 3, ptr %3, align 4
  br label %146

142:                                              ; preds = %133
  %143 = load ptr, ptr %7, align 8
  %144 = getelementptr inbounds %struct.EState, ptr %143, i32 0, i32 1
  store i32 1, ptr %144, align 8
  store i32 4, ptr %3, align 4
  br label %146

145:                                              ; preds = %26
  store i32 0, ptr %3, align 4
  br label %146

146:                                              ; preds = %145, %142, %141, %123, %117, %106, %100, %99, %79, %68, %64, %34, %30, %24, %17, %10
  %147 = load i32, ptr %3, align 4
  ret i32 %147
}

; Function Attrs: noinline nounwind ssp uwtable(sync)
define internal zeroext i8 @handle_compress(ptr noundef %0) #0 {
  %2 = alloca ptr, align 8
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  %5 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  store i8 0, ptr %3, align 1
  store i8 0, ptr %4, align 1
  %6 = load ptr, ptr %2, align 8
  %7 = getelementptr inbounds %struct.bz_stream, ptr %6, i32 0, i32 8
  %8 = load ptr, ptr %7, align 8
  store ptr %8, ptr %5, align 8
  br label %9

9:                                                ; preds = %121, %1
  %10 = load ptr, ptr %5, align 8
  %11 = getelementptr inbounds %struct.EState, ptr %10, i32 0, i32 2
  %12 = load i32, ptr %11, align 4
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %66

14:                                               ; preds = %9
  %15 = load ptr, ptr %5, align 8
  %16 = tail call zeroext i8 @copy_output_until_stop(ptr noundef %15)
  %17 = zext i8 %16 to i32
  %18 = load i8, ptr %4, align 1
  %19 = zext i8 %18 to i32
  %20 = or i32 %19, %17
  %21 = trunc i32 %20 to i8
  store i8 %21, ptr %4, align 1
  %22 = load ptr, ptr %5, align 8
  %23 = getelementptr inbounds %struct.EState, ptr %22, i32 0, i32 20
  %24 = load i32, ptr %23, align 8
  %25 = load ptr, ptr %5, align 8
  %26 = getelementptr inbounds %struct.EState, ptr %25, i32 0, i32 19
  %27 = load i32, ptr %26, align 4
  %28 = icmp slt i32 %24, %27
  br i1 %28, label %29, label %30

29:                                               ; preds = %14
  br label %122

30:                                               ; preds = %14
  %31 = load ptr, ptr %5, align 8
  %32 = getelementptr inbounds %struct.EState, ptr %31, i32 0, i32 1
  %33 = load i32, ptr %32, align 8
  %34 = icmp eq i32 %33, 4
  br i1 %34, label %35, label %46

35:                                               ; preds = %30
  %36 = load ptr, ptr %5, align 8
  %37 = getelementptr inbounds %struct.EState, ptr %36, i32 0, i32 3
  %38 = load i32, ptr %37, align 8
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %46

40:                                               ; preds = %35
  %41 = load ptr, ptr %5, align 8
  %42 = tail call zeroext i8 @isempty_RL(ptr noundef %41)
  %43 = zext i8 %42 to i32
  %44 = icmp ne i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %40
  br label %122

46:                                               ; preds = %40, %35, %30
  %47 = load ptr, ptr %5, align 8
  tail call void @prepare_new_block(ptr noundef %47)
  %48 = load ptr, ptr %5, align 8
  %49 = getelementptr inbounds %struct.EState, ptr %48, i32 0, i32 2
  store i32 2, ptr %49, align 4
  %50 = load ptr, ptr %5, align 8
  %51 = getelementptr inbounds %struct.EState, ptr %50, i32 0, i32 1
  %52 = load i32, ptr %51, align 8
  %53 = icmp eq i32 %52, 3
  br i1 %53, label %54, label %65

54:                                               ; preds = %46
  %55 = load ptr, ptr %5, align 8
  %56 = getelementptr inbounds %struct.EState, ptr %55, i32 0, i32 3
  %57 = load i32, ptr %56, align 8
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %65

59:                                               ; preds = %54
  %60 = load ptr, ptr %5, align 8
  %61 = tail call zeroext i8 @isempty_RL(ptr noundef %60)
  %62 = zext i8 %61 to i32
  %63 = icmp ne i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %59
  br label %122

65:                                               ; preds = %59, %54, %46
  br label %66

66:                                               ; preds = %65, %9
  %67 = load ptr, ptr %5, align 8
  %68 = getelementptr inbounds %struct.EState, ptr %67, i32 0, i32 2
  %69 = load i32, ptr %68, align 4
  %70 = icmp eq i32 %69, 2
  br i1 %70, label %71, label %121

71:                                               ; preds = %66
  %72 = load ptr, ptr %5, align 8
  %73 = tail call zeroext i8 @copy_input_until_stop(ptr noundef %72)
  %74 = zext i8 %73 to i32
  %75 = load i8, ptr %3, align 1
  %76 = zext i8 %75 to i32
  %77 = or i32 %76, %74
  %78 = trunc i32 %77 to i8
  store i8 %78, ptr %3, align 1
  %79 = load ptr, ptr %5, align 8
  %80 = getelementptr inbounds %struct.EState, ptr %79, i32 0, i32 1
  %81 = load i32, ptr %80, align 8
  %82 = icmp ne i32 %81, 2
  br i1 %82, label %83, label %99

83:                                               ; preds = %71
  %84 = load ptr, ptr %5, align 8
  %85 = getelementptr inbounds %struct.EState, ptr %84, i32 0, i32 3
  %86 = load i32, ptr %85, align 8
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %99

88:                                               ; preds = %83
  %89 = load ptr, ptr %5, align 8
  tail call void @flush_RL(ptr noundef %89)
  %90 = load ptr, ptr %5, align 8
  %91 = load ptr, ptr %5, align 8
  %92 = getelementptr inbounds %struct.EState, ptr %91, i32 0, i32 1
  %93 = load i32, ptr %92, align 8
  %94 = icmp eq i32 %93, 4
  %95 = zext i1 %94 to i32
  %96 = trunc i32 %95 to i8
  tail call void @BZ2_compressBlock(ptr noundef %90, i8 noundef zeroext %96)
  %97 = load ptr, ptr %5, align 8
  %98 = getelementptr inbounds %struct.EState, ptr %97, i32 0, i32 2
  store i32 1, ptr %98, align 4
  br label %120

99:                                               ; preds = %83, %71
  %100 = load ptr, ptr %5, align 8
  %101 = getelementptr inbounds %struct.EState, ptr %100, i32 0, i32 17
  %102 = load i32, ptr %101, align 4
  %103 = load ptr, ptr %5, align 8
  %104 = getelementptr inbounds %struct.EState, ptr %103, i32 0, i32 18
  %105 = load i32, ptr %104, align 8
  %106 = icmp sge i32 %102, %105
  br i1 %106, label %107, label %111

107:                                              ; preds = %99
  %108 = load ptr, ptr %5, align 8
  tail call void @BZ2_compressBlock(ptr noundef %108, i8 noundef zeroext 0)
  %109 = load ptr, ptr %5, align 8
  %110 = getelementptr inbounds %struct.EState, ptr %109, i32 0, i32 2
  store i32 1, ptr %110, align 4
  br label %119

111:                                              ; preds = %99
  %112 = load ptr, ptr %5, align 8
  %113 = load ptr, ptr %112, align 8
  %114 = getelementptr inbounds %struct.bz_stream, ptr %113, i32 0, i32 1
  %115 = load i32, ptr %114, align 8
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %111
  br label %122

118:                                              ; preds = %111
  br label %119

119:                                              ; preds = %118, %107
  br label %120

120:                                              ; preds = %119, %88
  br label %121

121:                                              ; preds = %120, %66
  br label %9

122:                                              ; preds = %117, %64, %45, %29
  %123 = load i8, ptr %3, align 1
  %124 = zext i8 %123 to i32
  %125 = icmp ne i32 %124, 0
  br i1 %125, label %130, label %126

126:                                              ; preds = %122
  %127 = load i8, ptr %4, align 1
  %128 = zext i8 %127 to i32
  %129 = icmp ne i32 %128, 0
  br label %130

130:                                              ; preds = %126, %122
  %131 = phi i1 [ true, %122 ], [ %129, %126 ]
  %132 = zext i1 %131 to i32
  %133 = trunc i32 %132 to i8
  ret i8 %133
}

; Function Attrs: noinline nounwind ssp uwtable(sync)
define internal zeroext i8 @isempty_RL(ptr noundef %0) #0 {
  %2 = alloca i8, align 1
  %3 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr inbounds %struct.EState, ptr %4, i32 0, i32 13
  %6 = load i32, ptr %5, align 4
  %7 = icmp ult i32 %6, 256
  br i1 %7, label %8, label %14

8:                                                ; preds = %1
  %9 = load ptr, ptr %3, align 8
  %10 = getelementptr inbounds %struct.EState, ptr %9, i32 0, i32 14
  %11 = load i32, ptr %10, align 8
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %8
  store i8 0, ptr %2, align 1
  br label %15

14:                                               ; preds = %8, %1
  store i8 1, ptr %2, align 1
  br label %15

15:                                               ; preds = %14, %13
  %16 = load i8, ptr %2, align 1
  ret i8 %16
}

; Function Attrs: noinline nounwind ssp uwtable(sync)
define i32 @BZ2_bzCompressEnd(ptr noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  %5 = load ptr, ptr %3, align 8
  %6 = icmp eq ptr %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %1
  store i32 -2, ptr %2, align 4
  br label %79

8:                                                ; preds = %1
  %9 = load ptr, ptr %3, align 8
  %10 = getelementptr inbounds %struct.bz_stream, ptr %9, i32 0, i32 8
  %11 = load ptr, ptr %10, align 8
  store ptr %11, ptr %4, align 8
  %12 = load ptr, ptr %4, align 8
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %8
  store i32 -2, ptr %2, align 4
  br label %79

15:                                               ; preds = %8
  %16 = load ptr, ptr %4, align 8
  %17 = getelementptr inbounds %struct.EState, ptr %16, i32 0, i32 0
  %18 = load ptr, ptr %17, align 8
  %19 = load ptr, ptr %3, align 8
  %20 = icmp ne ptr %18, %19
  br i1 %20, label %21, label %22

21:                                               ; preds = %15
  store i32 -2, ptr %2, align 4
  br label %79

22:                                               ; preds = %15
  %23 = load ptr, ptr %4, align 8
  %24 = getelementptr inbounds %struct.EState, ptr %23, i32 0, i32 4
  %25 = load ptr, ptr %24, align 8
  %26 = icmp ne ptr %25, null
  br i1 %26, label %27, label %37

27:                                               ; preds = %22
  %28 = load ptr, ptr %3, align 8
  %29 = getelementptr inbounds %struct.bz_stream, ptr %28, i32 0, i32 10
  %30 = load ptr, ptr %29, align 8
  %31 = load ptr, ptr %3, align 8
  %32 = getelementptr inbounds %struct.bz_stream, ptr %31, i32 0, i32 11
  %33 = load ptr, ptr %32, align 8
  %34 = load ptr, ptr %4, align 8
  %35 = getelementptr inbounds %struct.EState, ptr %34, i32 0, i32 4
  %36 = load ptr, ptr %35, align 8
  tail call void %30(ptr noundef %33, ptr noundef %36)
  br label %37

37:                                               ; preds = %27, %22
  %38 = load ptr, ptr %4, align 8
  %39 = getelementptr inbounds %struct.EState, ptr %38, i32 0, i32 5
  %40 = load ptr, ptr %39, align 8
  %41 = icmp ne ptr %40, null
  br i1 %41, label %42, label %52

42:                                               ; preds = %37
  %43 = load ptr, ptr %3, align 8
  %44 = getelementptr inbounds %struct.bz_stream, ptr %43, i32 0, i32 10
  %45 = load ptr, ptr %44, align 8
  %46 = load ptr, ptr %3, align 8
  %47 = getelementptr inbounds %struct.bz_stream, ptr %46, i32 0, i32 11
  %48 = load ptr, ptr %47, align 8
  %49 = load ptr, ptr %4, align 8
  %50 = getelementptr inbounds %struct.EState, ptr %49, i32 0, i32 5
  %51 = load ptr, ptr %50, align 8
  tail call void %45(ptr noundef %48, ptr noundef %51)
  br label %52

52:                                               ; preds = %42, %37
  %53 = load ptr, ptr %4, align 8
  %54 = getelementptr inbounds %struct.EState, ptr %53, i32 0, i32 6
  %55 = load ptr, ptr %54, align 8
  %56 = icmp ne ptr %55, null
  br i1 %56, label %57, label %67

57:                                               ; preds = %52
  %58 = load ptr, ptr %3, align 8
  %59 = getelementptr inbounds %struct.bz_stream, ptr %58, i32 0, i32 10
  %60 = load ptr, ptr %59, align 8
  %61 = load ptr, ptr %3, align 8
  %62 = getelementptr inbounds %struct.bz_stream, ptr %61, i32 0, i32 11
  %63 = load ptr, ptr %62, align 8
  %64 = load ptr, ptr %4, align 8
  %65 = getelementptr inbounds %struct.EState, ptr %64, i32 0, i32 6
  %66 = load ptr, ptr %65, align 8
  tail call void %60(ptr noundef %63, ptr noundef %66)
  br label %67

67:                                               ; preds = %57, %52
  %68 = load ptr, ptr %3, align 8
  %69 = getelementptr inbounds %struct.bz_stream, ptr %68, i32 0, i32 10
  %70 = load ptr, ptr %69, align 8
  %71 = load ptr, ptr %3, align 8
  %72 = getelementptr inbounds %struct.bz_stream, ptr %71, i32 0, i32 11
  %73 = load ptr, ptr %72, align 8
  %74 = load ptr, ptr %3, align 8
  %75 = getelementptr inbounds %struct.bz_stream, ptr %74, i32 0, i32 8
  %76 = load ptr, ptr %75, align 8
  tail call void %70(ptr noundef %73, ptr noundef %76)
  %77 = load ptr, ptr %3, align 8
  %78 = getelementptr inbounds %struct.bz_stream, ptr %77, i32 0, i32 8
  store ptr null, ptr %78, align 8
  store i32 0, ptr %2, align 4
  br label %79

79:                                               ; preds = %67, %21, %14, %7
  %80 = load i32, ptr %2, align 4
  ret i32 %80
}

; Function Attrs: noinline nounwind ssp uwtable(sync)
define i32 @BZ2_bzDecompressInit(ptr noundef %0, i32 noundef %1, i32 noundef %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca ptr, align 8
  store ptr %0, ptr %5, align 8
  store i32 %1, ptr %6, align 4
  store i32 %2, ptr %7, align 4
  %9 = tail call i32 @bz_config_ok()
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %3
  store i32 -9, ptr %4, align 4
  br label %95

12:                                               ; preds = %3
  %13 = load ptr, ptr %5, align 8
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %12
  store i32 -2, ptr %4, align 4
  br label %95

16:                                               ; preds = %12
  %17 = load i32, ptr %7, align 4
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %19, label %23

19:                                               ; preds = %16
  %20 = load i32, ptr %7, align 4
  %21 = icmp ne i32 %20, 1
  br i1 %21, label %22, label %23

22:                                               ; preds = %19
  store i32 -2, ptr %4, align 4
  br label %95

23:                                               ; preds = %19, %16
  %24 = load i32, ptr %6, align 4
  %25 = icmp slt i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %23
  %27 = load i32, ptr %6, align 4
  %28 = icmp sgt i32 %27, 4
  br i1 %28, label %29, label %30

29:                                               ; preds = %26, %23
  store i32 -2, ptr %4, align 4
  br label %95

30:                                               ; preds = %26
  %31 = load ptr, ptr %5, align 8
  %32 = getelementptr inbounds %struct.bz_stream, ptr %31, i32 0, i32 9
  %33 = load ptr, ptr %32, align 8
  %34 = icmp eq ptr %33, null
  br i1 %34, label %35, label %38

35:                                               ; preds = %30
  %36 = load ptr, ptr %5, align 8
  %37 = getelementptr inbounds %struct.bz_stream, ptr %36, i32 0, i32 9
  store ptr @default_bzalloc, ptr %37, align 8
  br label %38

38:                                               ; preds = %35, %30
  %39 = load ptr, ptr %5, align 8
  %40 = getelementptr inbounds %struct.bz_stream, ptr %39, i32 0, i32 10
  %41 = load ptr, ptr %40, align 8
  %42 = icmp eq ptr %41, null
  br i1 %42, label %43, label %46

43:                                               ; preds = %38
  %44 = load ptr, ptr %5, align 8
  %45 = getelementptr inbounds %struct.bz_stream, ptr %44, i32 0, i32 10
  store ptr @default_bzfree, ptr %45, align 8
  br label %46

46:                                               ; preds = %43, %38
  %47 = load ptr, ptr %5, align 8
  %48 = getelementptr inbounds %struct.bz_stream, ptr %47, i32 0, i32 9
  %49 = load ptr, ptr %48, align 8
  %50 = load ptr, ptr %5, align 8
  %51 = getelementptr inbounds %struct.bz_stream, ptr %50, i32 0, i32 11
  %52 = load ptr, ptr %51, align 8
  %53 = tail call ptr %49(ptr noundef %52, i32 noundef 64144, i32 noundef 1)
  store ptr %53, ptr %8, align 8
  %54 = load ptr, ptr %8, align 8
  %55 = icmp eq ptr %54, null
  br i1 %55, label %56, label %57

56:                                               ; preds = %46
  store i32 -3, ptr %4, align 4
  br label %95

57:                                               ; preds = %46
  %58 = load ptr, ptr %5, align 8
  %59 = load ptr, ptr %8, align 8
  %60 = getelementptr inbounds %struct.DState, ptr %59, i32 0, i32 0
  store ptr %58, ptr %60, align 8
  %61 = load ptr, ptr %8, align 8
  %62 = load ptr, ptr %5, align 8
  %63 = getelementptr inbounds %struct.bz_stream, ptr %62, i32 0, i32 8
  store ptr %61, ptr %63, align 8
  %64 = load ptr, ptr %8, align 8
  %65 = getelementptr inbounds %struct.DState, ptr %64, i32 0, i32 1
  store i32 10, ptr %65, align 8
  %66 = load ptr, ptr %8, align 8
  %67 = getelementptr inbounds %struct.DState, ptr %66, i32 0, i32 8
  store i32 0, ptr %67, align 4
  %68 = load ptr, ptr %8, align 8
  %69 = getelementptr inbounds %struct.DState, ptr %68, i32 0, i32 7
  store i32 0, ptr %69, align 8
  %70 = load ptr, ptr %8, align 8
  %71 = getelementptr inbounds %struct.DState, ptr %70, i32 0, i32 26
  store i32 0, ptr %71, align 4
  %72 = load ptr, ptr %5, align 8
  %73 = getelementptr inbounds %struct.bz_stream, ptr %72, i32 0, i32 2
  store i32 0, ptr %73, align 4
  %74 = load ptr, ptr %5, align 8
  %75 = getelementptr inbounds %struct.bz_stream, ptr %74, i32 0, i32 3
  store i32 0, ptr %75, align 8
  %76 = load ptr, ptr %5, align 8
  %77 = getelementptr inbounds %struct.bz_stream, ptr %76, i32 0, i32 6
  store i32 0, ptr %77, align 4
  %78 = load ptr, ptr %5, align 8
  %79 = getelementptr inbounds %struct.bz_stream, ptr %78, i32 0, i32 7
  store i32 0, ptr %79, align 8
  %80 = load i32, ptr %7, align 4
  %81 = trunc i32 %80 to i8
  %82 = load ptr, ptr %8, align 8
  %83 = getelementptr inbounds %struct.DState, ptr %82, i32 0, i32 10
  store i8 %81, ptr %83, align 4
  %84 = load ptr, ptr %8, align 8
  %85 = getelementptr inbounds %struct.DState, ptr %84, i32 0, i32 22
  store ptr null, ptr %85, align 8
  %86 = load ptr, ptr %8, align 8
  %87 = getelementptr inbounds %struct.DState, ptr %86, i32 0, i32 21
  store ptr null, ptr %87, align 8
  %88 = load ptr, ptr %8, align 8
  %89 = getelementptr inbounds %struct.DState, ptr %88, i32 0, i32 20
  store ptr null, ptr %89, align 8
  %90 = load ptr, ptr %8, align 8
  %91 = getelementptr inbounds %struct.DState, ptr %90, i32 0, i32 11
  store i32 0, ptr %91, align 8
  %92 = load i32, ptr %6, align 4
  %93 = load ptr, ptr %8, align 8
  %94 = getelementptr inbounds %struct.DState, ptr %93, i32 0, i32 12
  store i32 %92, ptr %94, align 4
  store i32 0, ptr %4, align 4
  br label %95

95:                                               ; preds = %57, %56, %29, %22, %15, %11
  %96 = load i32, ptr %4, align 4
  ret i32 %96
}

; Function Attrs: noinline nounwind ssp uwtable(sync)
define i32 @BZ2_indexIntoF(i32 noundef %0, ptr noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i32 %0, ptr %3, align 4
  store ptr %1, ptr %4, align 8
  store i32 0, ptr %5, align 4
  store i32 256, ptr %6, align 4
  br label %8

8:                                                ; preds = %24, %2
  %9 = load i32, ptr %5, align 4
  %10 = load i32, ptr %6, align 4
  %11 = add nsw i32 %9, %10
  %12 = ashr i32 %11, 1
  store i32 %12, ptr %7, align 4
  %13 = load i32, ptr %3, align 4
  %14 = load ptr, ptr %4, align 8
  %15 = load i32, ptr %7, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds i32, ptr %14, i64 %16
  %18 = load i32, ptr %17, align 4
  %19 = icmp sge i32 %13, %18
  br i1 %19, label %20, label %22

20:                                               ; preds = %8
  %21 = load i32, ptr %7, align 4
  store i32 %21, ptr %5, align 4
  br label %24

22:                                               ; preds = %8
  %23 = load i32, ptr %7, align 4
  store i32 %23, ptr %6, align 4
  br label %24

24:                                               ; preds = %22, %20
  %25 = load i32, ptr %6, align 4
  %26 = load i32, ptr %5, align 4
  %27 = sub nsw i32 %25, %26
  %28 = icmp ne i32 %27, 1
  br i1 %28, label %8, label %29, !llvm.loop !7

29:                                               ; preds = %24
  %30 = load i32, ptr %5, align 4
  ret i32 %30
}

; Function Attrs: noinline nounwind ssp uwtable(sync)
define i32 @BZ2_bzDecompress(ptr noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca ptr, align 8
  %4 = alloca i8, align 1
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  store ptr %0, ptr %3, align 8
  %7 = load ptr, ptr %3, align 8
  %8 = icmp eq ptr %7, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %1
  store i32 -2, ptr %2, align 4
  br label %171

10:                                               ; preds = %1
  %11 = load ptr, ptr %3, align 8
  %12 = getelementptr inbounds %struct.bz_stream, ptr %11, i32 0, i32 8
  %13 = load ptr, ptr %12, align 8
  store ptr %13, ptr %5, align 8
  %14 = load ptr, ptr %5, align 8
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %17

16:                                               ; preds = %10
  store i32 -2, ptr %2, align 4
  br label %171

17:                                               ; preds = %10
  %18 = load ptr, ptr %5, align 8
  %19 = getelementptr inbounds %struct.DState, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = load ptr, ptr %3, align 8
  %22 = icmp ne ptr %20, %21
  br i1 %22, label %23, label %24

23:                                               ; preds = %17
  store i32 -2, ptr %2, align 4
  br label %171

24:                                               ; preds = %17
  %25 = load ptr, ptr %5, align 8
  %26 = getelementptr inbounds %struct.DState, ptr %25, i32 0, i32 1
  %27 = load i32, ptr %26, align 8
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %.lr.ph

.lr.ph:                                           ; preds = %24
  br label %30

._crit_edge:                                      ; preds = %166
  br label %29

29:                                               ; preds = %._crit_edge, %24
  store i32 -1, ptr %2, align 4
  br label %171

30:                                               ; preds = %.lr.ph, %166
  %31 = load ptr, ptr %5, align 8
  %32 = getelementptr inbounds %struct.DState, ptr %31, i32 0, i32 1
  %33 = load i32, ptr %32, align 8
  %34 = icmp eq i32 %33, 2
  br i1 %34, label %35, label %123

35:                                               ; preds = %30
  %36 = load ptr, ptr %5, align 8
  %37 = getelementptr inbounds %struct.DState, ptr %36, i32 0, i32 10
  %38 = load i8, ptr %37, align 4
  %39 = icmp ne i8 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %35
  %41 = load ptr, ptr %5, align 8
  %42 = tail call zeroext i8 @unRLE_obuf_to_output_SMALL(ptr noundef %41)
  store i8 %42, ptr %4, align 1
  br label %46

43:                                               ; preds = %35
  %44 = load ptr, ptr %5, align 8
  %45 = tail call zeroext i8 @unRLE_obuf_to_output_FAST(ptr noundef %44)
  store i8 %45, ptr %4, align 1
  br label %46

46:                                               ; preds = %43, %40
  %47 = load i8, ptr %4, align 1
  %48 = icmp ne i8 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %46
  store i32 -4, ptr %2, align 4
  br label %171

50:                                               ; preds = %46
  %51 = load ptr, ptr %5, align 8
  %52 = getelementptr inbounds %struct.DState, ptr %51, i32 0, i32 17
  %53 = load i32, ptr %52, align 4
  %54 = load ptr, ptr %5, align 8
  %55 = getelementptr inbounds %struct.DState, ptr %54, i32 0, i32 51
  %56 = load i32, ptr %55, align 8
  %57 = add nsw i32 %56, 1
  %58 = icmp eq i32 %53, %57
  br i1 %58, label %59, label %122

59:                                               ; preds = %50
  %60 = load ptr, ptr %5, align 8
  %61 = getelementptr inbounds %struct.DState, ptr %60, i32 0, i32 3
  %62 = load i32, ptr %61, align 8
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %122

64:                                               ; preds = %59
  %65 = load ptr, ptr %5, align 8
  %66 = getelementptr inbounds %struct.DState, ptr %65, i32 0, i32 25
  %67 = load i32, ptr %66, align 8
  %68 = xor i32 %67, -1
  %69 = load ptr, ptr %5, align 8
  %70 = getelementptr inbounds %struct.DState, ptr %69, i32 0, i32 25
  store i32 %68, ptr %70, align 8
  %71 = load ptr, ptr %5, align 8
  %72 = getelementptr inbounds %struct.DState, ptr %71, i32 0, i32 12
  %73 = load i32, ptr %72, align 4
  %74 = icmp sge i32 %73, 3
  br i1 %74, label %75, label %84

75:                                               ; preds = %64
  %76 = load ptr, ptr @__stderrp, align 8
  %77 = load ptr, ptr %5, align 8
  %78 = getelementptr inbounds %struct.DState, ptr %77, i32 0, i32 23
  %79 = load i32, ptr %78, align 8
  %80 = load ptr, ptr %5, align 8
  %81 = getelementptr inbounds %struct.DState, ptr %80, i32 0, i32 25
  %82 = load i32, ptr %81, align 8
  %83 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %76, ptr noundef @.str.2, i32 noundef %79, i32 noundef %82) #7
  br label %84

84:                                               ; preds = %75, %64
  %85 = load ptr, ptr %5, align 8
  %86 = getelementptr inbounds %struct.DState, ptr %85, i32 0, i32 12
  %87 = load i32, ptr %86, align 4
  %88 = icmp sge i32 %87, 2
  br i1 %88, label %89, label %92

89:                                               ; preds = %84
  %90 = load ptr, ptr @__stderrp, align 8
  %91 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %90, ptr noundef @.str.3) #7
  br label %92

92:                                               ; preds = %89, %84
  %93 = load ptr, ptr %5, align 8
  %94 = getelementptr inbounds %struct.DState, ptr %93, i32 0, i32 25
  %95 = load i32, ptr %94, align 8
  %96 = load ptr, ptr %5, align 8
  %97 = getelementptr inbounds %struct.DState, ptr %96, i32 0, i32 23
  %98 = load i32, ptr %97, align 8
  %99 = icmp ne i32 %95, %98
  br i1 %99, label %100, label %101

100:                                              ; preds = %92
  store i32 -4, ptr %2, align 4
  br label %171

101:                                              ; preds = %92
  %102 = load ptr, ptr %5, align 8
  %103 = getelementptr inbounds %struct.DState, ptr %102, i32 0, i32 26
  %104 = load i32, ptr %103, align 4
  %105 = shl i32 %104, 1
  %106 = load ptr, ptr %5, align 8
  %107 = getelementptr inbounds %struct.DState, ptr %106, i32 0, i32 26
  %108 = load i32, ptr %107, align 4
  %109 = lshr i32 %108, 31
  %110 = or i32 %105, %109
  %111 = load ptr, ptr %5, align 8
  %112 = getelementptr inbounds %struct.DState, ptr %111, i32 0, i32 26
  store i32 %110, ptr %112, align 4
  %113 = load ptr, ptr %5, align 8
  %114 = getelementptr inbounds %struct.DState, ptr %113, i32 0, i32 25
  %115 = load i32, ptr %114, align 8
  %116 = load ptr, ptr %5, align 8
  %117 = getelementptr inbounds %struct.DState, ptr %116, i32 0, i32 26
  %118 = load i32, ptr %117, align 4
  %119 = xor i32 %118, %115
  store i32 %119, ptr %117, align 4
  %120 = load ptr, ptr %5, align 8
  %121 = getelementptr inbounds %struct.DState, ptr %120, i32 0, i32 1
  store i32 14, ptr %121, align 8
  br label %123

122:                                              ; preds = %59, %50
  store i32 0, ptr %2, align 4
  br label %171

123:                                              ; preds = %101, %30
  %124 = load ptr, ptr %5, align 8
  %125 = getelementptr inbounds %struct.DState, ptr %124, i32 0, i32 1
  %126 = load i32, ptr %125, align 8
  %127 = icmp sge i32 %126, 10
  br i1 %127, label %128, label %166

128:                                              ; preds = %123
  %129 = load ptr, ptr %5, align 8
  %130 = tail call i32 @BZ2_decompress(ptr noundef %129)
  store i32 %130, ptr %6, align 4
  %131 = load i32, ptr %6, align 4
  %132 = icmp eq i32 %131, 4
  br i1 %132, label %133, label %158

133:                                              ; preds = %128
  %134 = load ptr, ptr %5, align 8
  %135 = getelementptr inbounds %struct.DState, ptr %134, i32 0, i32 12
  %136 = load i32, ptr %135, align 4
  %137 = icmp sge i32 %136, 3
  br i1 %137, label %138, label %147

138:                                              ; preds = %133
  %139 = load ptr, ptr @__stderrp, align 8
  %140 = load ptr, ptr %5, align 8
  %141 = getelementptr inbounds %struct.DState, ptr %140, i32 0, i32 24
  %142 = load i32, ptr %141, align 4
  %143 = load ptr, ptr %5, align 8
  %144 = getelementptr inbounds %struct.DState, ptr %143, i32 0, i32 26
  %145 = load i32, ptr %144, align 4
  %146 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %139, ptr noundef @.str.4, i32 noundef %142, i32 noundef %145) #7
  br label %147

147:                                              ; preds = %138, %133
  %148 = load ptr, ptr %5, align 8
  %149 = getelementptr inbounds %struct.DState, ptr %148, i32 0, i32 26
  %150 = load i32, ptr %149, align 4
  %151 = load ptr, ptr %5, align 8
  %152 = getelementptr inbounds %struct.DState, ptr %151, i32 0, i32 24
  %153 = load i32, ptr %152, align 4
  %154 = icmp ne i32 %150, %153
  br i1 %154, label %155, label %156

155:                                              ; preds = %147
  store i32 -4, ptr %2, align 4
  br label %171

156:                                              ; preds = %147
  %157 = load i32, ptr %6, align 4
  store i32 %157, ptr %2, align 4
  br label %171

158:                                              ; preds = %128
  %159 = load ptr, ptr %5, align 8
  %160 = getelementptr inbounds %struct.DState, ptr %159, i32 0, i32 1
  %161 = load i32, ptr %160, align 8
  %162 = icmp ne i32 %161, 2
  br i1 %162, label %163, label %165

163:                                              ; preds = %158
  %164 = load i32, ptr %6, align 4
  store i32 %164, ptr %2, align 4
  br label %171

165:                                              ; preds = %158
  br label %166

166:                                              ; preds = %165, %123
  %167 = load ptr, ptr %5, align 8
  %168 = getelementptr inbounds %struct.DState, ptr %167, i32 0, i32 1
  %169 = load i32, ptr %168, align 8
  %170 = icmp eq i32 %169, 1
  br i1 %170, label %._crit_edge, label %30

171:                                              ; preds = %163, %156, %155, %122, %100, %49, %29, %23, %16, %9
  %172 = load i32, ptr %2, align 4
  ret i32 %172
}

; Function Attrs: noinline nounwind ssp uwtable(sync)
define internal zeroext i8 @unRLE_obuf_to_output_SMALL(ptr noundef %0) #0 {
  %2 = alloca i8, align 1
  %3 = alloca ptr, align 8
  %4 = alloca i8, align 1
  store ptr %0, ptr %3, align 8
  %5 = load ptr, ptr %3, align 8
  %6 = getelementptr inbounds %struct.DState, ptr %5, i32 0, i32 4
  %7 = load i8, ptr %6, align 4
  %8 = icmp ne i8 %7, 0
  br i1 %8, label %9, label %604

9:                                                ; preds = %1
  %10 = load ptr, ptr %3, align 8
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds %struct.bz_stream, ptr %11, i32 0, i32 5
  %13 = load i32, ptr %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %._crit_edge5, label %.lr.ph4.lr.ph

.lr.ph4.lr.ph:                                    ; preds = %9
  br label %.lr.ph4

.lr.ph4:                                          ; preds = %.lr.ph4.lr.ph, %.backedge
  br label %16

.._crit_edge5_crit_edge:                          ; preds = %.backedge
  br label %._crit_edge5

._crit_edge5:                                     ; preds = %.._crit_edge5_crit_edge, %9
  br label %15

._crit_edge6:                                     ; preds = %87
  br label %15

15:                                               ; preds = %._crit_edge6, %._crit_edge5
  store i8 0, ptr %2, align 1
  br label %1004

16:                                               ; preds = %.lr.ph4, %87
  %17 = load ptr, ptr %3, align 8
  %18 = getelementptr inbounds %struct.DState, ptr %17, i32 0, i32 3
  %19 = load i32, ptr %18, align 8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %30

21:                                               ; preds = %16
  %22 = load ptr, ptr %3, align 8
  %23 = getelementptr inbounds %struct.DState, ptr %22, i32 0, i32 17
  %24 = load i32, ptr %23, align 4
  %25 = load ptr, ptr %3, align 8
  %26 = getelementptr inbounds %struct.DState, ptr %25, i32 0, i32 51
  %27 = load i32, ptr %26, align 8
  %28 = add nsw i32 %27, 1
  %29 = icmp eq i32 %24, %28
  br i1 %29, label %93, label %94

30:                                               ; preds = %16
  %31 = load ptr, ptr %3, align 8
  %32 = getelementptr inbounds %struct.DState, ptr %31, i32 0, i32 2
  %33 = load i8, ptr %32, align 4
  %34 = load ptr, ptr %3, align 8
  %35 = load ptr, ptr %34, align 8
  %36 = getelementptr inbounds %struct.bz_stream, ptr %35, i32 0, i32 4
  %37 = load ptr, ptr %36, align 8
  store i8 %33, ptr %37, align 1
  %38 = load ptr, ptr %3, align 8
  %39 = getelementptr inbounds %struct.DState, ptr %38, i32 0, i32 25
  %40 = load i32, ptr %39, align 8
  %41 = shl i32 %40, 8
  %42 = load ptr, ptr %3, align 8
  %43 = getelementptr inbounds %struct.DState, ptr %42, i32 0, i32 25
  %44 = load i32, ptr %43, align 8
  %45 = lshr i32 %44, 24
  %46 = load ptr, ptr %3, align 8
  %47 = getelementptr inbounds %struct.DState, ptr %46, i32 0, i32 2
  %48 = load i8, ptr %47, align 4
  %49 = zext i8 %48 to i32
  %50 = xor i32 %45, %49
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds [256 x i32], ptr @BZ2_crc32Table, i64 0, i64 %51
  %53 = load i32, ptr %52, align 4
  %54 = xor i32 %41, %53
  %55 = load ptr, ptr %3, align 8
  %56 = getelementptr inbounds %struct.DState, ptr %55, i32 0, i32 25
  store i32 %54, ptr %56, align 8
  %57 = load ptr, ptr %3, align 8
  %58 = getelementptr inbounds %struct.DState, ptr %57, i32 0, i32 3
  %59 = load i32, ptr %58, align 8
  %60 = add nsw i32 %59, -1
  store i32 %60, ptr %58, align 8
  %61 = load ptr, ptr %3, align 8
  %62 = load ptr, ptr %61, align 8
  %63 = getelementptr inbounds %struct.bz_stream, ptr %62, i32 0, i32 4
  %64 = load ptr, ptr %63, align 8
  %65 = getelementptr inbounds i8, ptr %64, i32 1
  store ptr %65, ptr %63, align 8
  %66 = load ptr, ptr %3, align 8
  %67 = load ptr, ptr %66, align 8
  %68 = getelementptr inbounds %struct.bz_stream, ptr %67, i32 0, i32 5
  %69 = load i32, ptr %68, align 8
  %70 = add i32 %69, -1
  store i32 %70, ptr %68, align 8
  %71 = load ptr, ptr %3, align 8
  %72 = load ptr, ptr %71, align 8
  %73 = getelementptr inbounds %struct.bz_stream, ptr %72, i32 0, i32 6
  %74 = load i32, ptr %73, align 4
  %75 = add i32 %74, 1
  store i32 %75, ptr %73, align 4
  %76 = load ptr, ptr %3, align 8
  %77 = load ptr, ptr %76, align 8
  %78 = getelementptr inbounds %struct.bz_stream, ptr %77, i32 0, i32 6
  %79 = load i32, ptr %78, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %87

81:                                               ; preds = %30
  %82 = load ptr, ptr %3, align 8
  %83 = load ptr, ptr %82, align 8
  %84 = getelementptr inbounds %struct.bz_stream, ptr %83, i32 0, i32 7
  %85 = load i32, ptr %84, align 8
  %86 = add i32 %85, 1
  store i32 %86, ptr %84, align 8
  br label %87

87:                                               ; preds = %81, %30
  %88 = load ptr, ptr %3, align 8
  %89 = load ptr, ptr %88, align 8
  %90 = getelementptr inbounds %struct.bz_stream, ptr %89, i32 0, i32 5
  %91 = load i32, ptr %90, align 8
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %._crit_edge6, label %16

93:                                               ; preds = %21
  store i8 0, ptr %2, align 1
  br label %1004

94:                                               ; preds = %21
  %95 = load ptr, ptr %3, align 8
  %96 = getelementptr inbounds %struct.DState, ptr %95, i32 0, i32 17
  %97 = load i32, ptr %96, align 4
  %98 = load ptr, ptr %3, align 8
  %99 = getelementptr inbounds %struct.DState, ptr %98, i32 0, i32 51
  %100 = load i32, ptr %99, align 8
  %101 = add nsw i32 %100, 1
  %102 = icmp sgt i32 %97, %101
  br i1 %102, label %103, label %104

103:                                              ; preds = %94
  store i8 1, ptr %2, align 1
  br label %1004

104:                                              ; preds = %94
  %105 = load ptr, ptr %3, align 8
  %106 = getelementptr inbounds %struct.DState, ptr %105, i32 0, i32 3
  store i32 1, ptr %106, align 8
  %107 = load ptr, ptr %3, align 8
  %108 = getelementptr inbounds %struct.DState, ptr %107, i32 0, i32 15
  %109 = load i32, ptr %108, align 8
  %110 = trunc i32 %109 to i8
  %111 = load ptr, ptr %3, align 8
  %112 = getelementptr inbounds %struct.DState, ptr %111, i32 0, i32 2
  store i8 %110, ptr %112, align 4
  %113 = load ptr, ptr %3, align 8
  %114 = getelementptr inbounds %struct.DState, ptr %113, i32 0, i32 14
  %115 = load i32, ptr %114, align 4
  %116 = load ptr, ptr %3, align 8
  %117 = getelementptr inbounds %struct.DState, ptr %116, i32 0, i32 18
  %118 = tail call i32 @BZ2_indexIntoF(i32 noundef %115, ptr noundef %117)
  %119 = trunc i32 %118 to i8
  store i8 %119, ptr %4, align 1
  %120 = load ptr, ptr %3, align 8
  %121 = getelementptr inbounds %struct.DState, ptr %120, i32 0, i32 21
  %122 = load ptr, ptr %121, align 8
  %123 = load ptr, ptr %3, align 8
  %124 = getelementptr inbounds %struct.DState, ptr %123, i32 0, i32 14
  %125 = load i32, ptr %124, align 4
  %126 = zext i32 %125 to i64
  %127 = getelementptr inbounds i16, ptr %122, i64 %126
  %128 = load i16, ptr %127, align 2
  %129 = zext i16 %128 to i32
  %130 = load ptr, ptr %3, align 8
  %131 = getelementptr inbounds %struct.DState, ptr %130, i32 0, i32 22
  %132 = load ptr, ptr %131, align 8
  %133 = load ptr, ptr %3, align 8
  %134 = getelementptr inbounds %struct.DState, ptr %133, i32 0, i32 14
  %135 = load i32, ptr %134, align 4
  %136 = lshr i32 %135, 1
  %137 = zext i32 %136 to i64
  %138 = getelementptr inbounds i8, ptr %132, i64 %137
  %139 = load i8, ptr %138, align 1
  %140 = zext i8 %139 to i32
  %141 = load ptr, ptr %3, align 8
  %142 = getelementptr inbounds %struct.DState, ptr %141, i32 0, i32 14
  %143 = load i32, ptr %142, align 4
  %144 = shl i32 %143, 2
  %145 = and i32 %144, 4
  %146 = lshr i32 %140, %145
  %147 = and i32 %146, 15
  %148 = shl i32 %147, 16
  %149 = or i32 %129, %148
  %150 = load ptr, ptr %3, align 8
  %151 = getelementptr inbounds %struct.DState, ptr %150, i32 0, i32 14
  store i32 %149, ptr %151, align 4
  %152 = load ptr, ptr %3, align 8
  %153 = getelementptr inbounds %struct.DState, ptr %152, i32 0, i32 5
  %154 = load i32, ptr %153, align 8
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %177

156:                                              ; preds = %104
  %157 = load ptr, ptr %3, align 8
  %158 = getelementptr inbounds %struct.DState, ptr %157, i32 0, i32 6
  %159 = load i32, ptr %158, align 4
  %160 = sext i32 %159 to i64
  %161 = getelementptr inbounds [512 x i32], ptr @BZ2_rNums, i64 0, i64 %160
  %162 = load i32, ptr %161, align 4
  %163 = load ptr, ptr %3, align 8
  %164 = getelementptr inbounds %struct.DState, ptr %163, i32 0, i32 5
  store i32 %162, ptr %164, align 8
  %165 = load ptr, ptr %3, align 8
  %166 = getelementptr inbounds %struct.DState, ptr %165, i32 0, i32 6
  %167 = load i32, ptr %166, align 4
  %168 = add nsw i32 %167, 1
  store i32 %168, ptr %166, align 4
  %169 = load ptr, ptr %3, align 8
  %170 = getelementptr inbounds %struct.DState, ptr %169, i32 0, i32 6
  %171 = load i32, ptr %170, align 4
  %172 = icmp eq i32 %171, 512
  br i1 %172, label %173, label %176

173:                                              ; preds = %156
  %174 = load ptr, ptr %3, align 8
  %175 = getelementptr inbounds %struct.DState, ptr %174, i32 0, i32 6
  store i32 0, ptr %175, align 4
  br label %176

176:                                              ; preds = %173, %156
  br label %177

177:                                              ; preds = %176, %104
  %178 = load ptr, ptr %3, align 8
  %179 = getelementptr inbounds %struct.DState, ptr %178, i32 0, i32 5
  %180 = load i32, ptr %179, align 8
  %181 = add nsw i32 %180, -1
  store i32 %181, ptr %179, align 8
  %182 = load ptr, ptr %3, align 8
  %183 = getelementptr inbounds %struct.DState, ptr %182, i32 0, i32 5
  %184 = load i32, ptr %183, align 8
  %185 = icmp eq i32 %184, 1
  %186 = select i1 %185, i32 1, i32 0
  %187 = load i8, ptr %4, align 1
  %188 = zext i8 %187 to i32
  %189 = xor i32 %188, %186
  %190 = trunc i32 %189 to i8
  store i8 %190, ptr %4, align 1
  %191 = load ptr, ptr %3, align 8
  %192 = getelementptr inbounds %struct.DState, ptr %191, i32 0, i32 17
  %193 = load i32, ptr %192, align 4
  %194 = add nsw i32 %193, 1
  store i32 %194, ptr %192, align 4
  %195 = load ptr, ptr %3, align 8
  %196 = getelementptr inbounds %struct.DState, ptr %195, i32 0, i32 17
  %197 = load i32, ptr %196, align 4
  %198 = load ptr, ptr %3, align 8
  %199 = getelementptr inbounds %struct.DState, ptr %198, i32 0, i32 51
  %200 = load i32, ptr %199, align 8
  %201 = add nsw i32 %200, 1
  %202 = icmp eq i32 %197, %201
  br i1 %202, label %203, label %209

203:                                              ; preds = %177
  br label %.backedge

.backedge:                                        ; preds = %203, %216, %314, %322, %420, %428, %586
  %204 = load ptr, ptr %3, align 8
  %205 = load ptr, ptr %204, align 8
  %206 = getelementptr inbounds %struct.bz_stream, ptr %205, i32 0, i32 5
  %207 = load i32, ptr %206, align 8
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %.._crit_edge5_crit_edge, label %.lr.ph4

209:                                              ; preds = %177
  %210 = load i8, ptr %4, align 1
  %211 = zext i8 %210 to i32
  %212 = load ptr, ptr %3, align 8
  %213 = getelementptr inbounds %struct.DState, ptr %212, i32 0, i32 15
  %214 = load i32, ptr %213, align 8
  %215 = icmp ne i32 %211, %214
  br i1 %215, label %216, label %221

216:                                              ; preds = %209
  %217 = load i8, ptr %4, align 1
  %218 = zext i8 %217 to i32
  %219 = load ptr, ptr %3, align 8
  %220 = getelementptr inbounds %struct.DState, ptr %219, i32 0, i32 15
  store i32 %218, ptr %220, align 8
  br label %.backedge

221:                                              ; preds = %209
  %222 = load ptr, ptr %3, align 8
  %223 = getelementptr inbounds %struct.DState, ptr %222, i32 0, i32 3
  store i32 2, ptr %223, align 8
  %224 = load ptr, ptr %3, align 8
  %225 = getelementptr inbounds %struct.DState, ptr %224, i32 0, i32 14
  %226 = load i32, ptr %225, align 4
  %227 = load ptr, ptr %3, align 8
  %228 = getelementptr inbounds %struct.DState, ptr %227, i32 0, i32 18
  %229 = tail call i32 @BZ2_indexIntoF(i32 noundef %226, ptr noundef %228)
  %230 = trunc i32 %229 to i8
  store i8 %230, ptr %4, align 1
  %231 = load ptr, ptr %3, align 8
  %232 = getelementptr inbounds %struct.DState, ptr %231, i32 0, i32 21
  %233 = load ptr, ptr %232, align 8
  %234 = load ptr, ptr %3, align 8
  %235 = getelementptr inbounds %struct.DState, ptr %234, i32 0, i32 14
  %236 = load i32, ptr %235, align 4
  %237 = zext i32 %236 to i64
  %238 = getelementptr inbounds i16, ptr %233, i64 %237
  %239 = load i16, ptr %238, align 2
  %240 = zext i16 %239 to i32
  %241 = load ptr, ptr %3, align 8
  %242 = getelementptr inbounds %struct.DState, ptr %241, i32 0, i32 22
  %243 = load ptr, ptr %242, align 8
  %244 = load ptr, ptr %3, align 8
  %245 = getelementptr inbounds %struct.DState, ptr %244, i32 0, i32 14
  %246 = load i32, ptr %245, align 4
  %247 = lshr i32 %246, 1
  %248 = zext i32 %247 to i64
  %249 = getelementptr inbounds i8, ptr %243, i64 %248
  %250 = load i8, ptr %249, align 1
  %251 = zext i8 %250 to i32
  %252 = load ptr, ptr %3, align 8
  %253 = getelementptr inbounds %struct.DState, ptr %252, i32 0, i32 14
  %254 = load i32, ptr %253, align 4
  %255 = shl i32 %254, 2
  %256 = and i32 %255, 4
  %257 = lshr i32 %251, %256
  %258 = and i32 %257, 15
  %259 = shl i32 %258, 16
  %260 = or i32 %240, %259
  %261 = load ptr, ptr %3, align 8
  %262 = getelementptr inbounds %struct.DState, ptr %261, i32 0, i32 14
  store i32 %260, ptr %262, align 4
  %263 = load ptr, ptr %3, align 8
  %264 = getelementptr inbounds %struct.DState, ptr %263, i32 0, i32 5
  %265 = load i32, ptr %264, align 8
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %267, label %288

267:                                              ; preds = %221
  %268 = load ptr, ptr %3, align 8
  %269 = getelementptr inbounds %struct.DState, ptr %268, i32 0, i32 6
  %270 = load i32, ptr %269, align 4
  %271 = sext i32 %270 to i64
  %272 = getelementptr inbounds [512 x i32], ptr @BZ2_rNums, i64 0, i64 %271
  %273 = load i32, ptr %272, align 4
  %274 = load ptr, ptr %3, align 8
  %275 = getelementptr inbounds %struct.DState, ptr %274, i32 0, i32 5
  store i32 %273, ptr %275, align 8
  %276 = load ptr, ptr %3, align 8
  %277 = getelementptr inbounds %struct.DState, ptr %276, i32 0, i32 6
  %278 = load i32, ptr %277, align 4
  %279 = add nsw i32 %278, 1
  store i32 %279, ptr %277, align 4
  %280 = load ptr, ptr %3, align 8
  %281 = getelementptr inbounds %struct.DState, ptr %280, i32 0, i32 6
  %282 = load i32, ptr %281, align 4
  %283 = icmp eq i32 %282, 512
  br i1 %283, label %284, label %287

284:                                              ; preds = %267
  %285 = load ptr, ptr %3, align 8
  %286 = getelementptr inbounds %struct.DState, ptr %285, i32 0, i32 6
  store i32 0, ptr %286, align 4
  br label %287

287:                                              ; preds = %284, %267
  br label %288

288:                                              ; preds = %287, %221
  %289 = load ptr, ptr %3, align 8
  %290 = getelementptr inbounds %struct.DState, ptr %289, i32 0, i32 5
  %291 = load i32, ptr %290, align 8
  %292 = add nsw i32 %291, -1
  store i32 %292, ptr %290, align 8
  %293 = load ptr, ptr %3, align 8
  %294 = getelementptr inbounds %struct.DState, ptr %293, i32 0, i32 5
  %295 = load i32, ptr %294, align 8
  %296 = icmp eq i32 %295, 1
  %297 = select i1 %296, i32 1, i32 0
  %298 = load i8, ptr %4, align 1
  %299 = zext i8 %298 to i32
  %300 = xor i32 %299, %297
  %301 = trunc i32 %300 to i8
  store i8 %301, ptr %4, align 1
  %302 = load ptr, ptr %3, align 8
  %303 = getelementptr inbounds %struct.DState, ptr %302, i32 0, i32 17
  %304 = load i32, ptr %303, align 4
  %305 = add nsw i32 %304, 1
  store i32 %305, ptr %303, align 4
  %306 = load ptr, ptr %3, align 8
  %307 = getelementptr inbounds %struct.DState, ptr %306, i32 0, i32 17
  %308 = load i32, ptr %307, align 4
  %309 = load ptr, ptr %3, align 8
  %310 = getelementptr inbounds %struct.DState, ptr %309, i32 0, i32 51
  %311 = load i32, ptr %310, align 8
  %312 = add nsw i32 %311, 1
  %313 = icmp eq i32 %308, %312
  br i1 %313, label %314, label %315

314:                                              ; preds = %288
  br label %.backedge

315:                                              ; preds = %288
  %316 = load i8, ptr %4, align 1
  %317 = zext i8 %316 to i32
  %318 = load ptr, ptr %3, align 8
  %319 = getelementptr inbounds %struct.DState, ptr %318, i32 0, i32 15
  %320 = load i32, ptr %319, align 8
  %321 = icmp ne i32 %317, %320
  br i1 %321, label %322, label %327

322:                                              ; preds = %315
  %323 = load i8, ptr %4, align 1
  %324 = zext i8 %323 to i32
  %325 = load ptr, ptr %3, align 8
  %326 = getelementptr inbounds %struct.DState, ptr %325, i32 0, i32 15
  store i32 %324, ptr %326, align 8
  br label %.backedge

327:                                              ; preds = %315
  %328 = load ptr, ptr %3, align 8
  %329 = getelementptr inbounds %struct.DState, ptr %328, i32 0, i32 3
  store i32 3, ptr %329, align 8
  %330 = load ptr, ptr %3, align 8
  %331 = getelementptr inbounds %struct.DState, ptr %330, i32 0, i32 14
  %332 = load i32, ptr %331, align 4
  %333 = load ptr, ptr %3, align 8
  %334 = getelementptr inbounds %struct.DState, ptr %333, i32 0, i32 18
  %335 = tail call i32 @BZ2_indexIntoF(i32 noundef %332, ptr noundef %334)
  %336 = trunc i32 %335 to i8
  store i8 %336, ptr %4, align 1
  %337 = load ptr, ptr %3, align 8
  %338 = getelementptr inbounds %struct.DState, ptr %337, i32 0, i32 21
  %339 = load ptr, ptr %338, align 8
  %340 = load ptr, ptr %3, align 8
  %341 = getelementptr inbounds %struct.DState, ptr %340, i32 0, i32 14
  %342 = load i32, ptr %341, align 4
  %343 = zext i32 %342 to i64
  %344 = getelementptr inbounds i16, ptr %339, i64 %343
  %345 = load i16, ptr %344, align 2
  %346 = zext i16 %345 to i32
  %347 = load ptr, ptr %3, align 8
  %348 = getelementptr inbounds %struct.DState, ptr %347, i32 0, i32 22
  %349 = load ptr, ptr %348, align 8
  %350 = load ptr, ptr %3, align 8
  %351 = getelementptr inbounds %struct.DState, ptr %350, i32 0, i32 14
  %352 = load i32, ptr %351, align 4
  %353 = lshr i32 %352, 1
  %354 = zext i32 %353 to i64
  %355 = getelementptr inbounds i8, ptr %349, i64 %354
  %356 = load i8, ptr %355, align 1
  %357 = zext i8 %356 to i32
  %358 = load ptr, ptr %3, align 8
  %359 = getelementptr inbounds %struct.DState, ptr %358, i32 0, i32 14
  %360 = load i32, ptr %359, align 4
  %361 = shl i32 %360, 2
  %362 = and i32 %361, 4
  %363 = lshr i32 %357, %362
  %364 = and i32 %363, 15
  %365 = shl i32 %364, 16
  %366 = or i32 %346, %365
  %367 = load ptr, ptr %3, align 8
  %368 = getelementptr inbounds %struct.DState, ptr %367, i32 0, i32 14
  store i32 %366, ptr %368, align 4
  %369 = load ptr, ptr %3, align 8
  %370 = getelementptr inbounds %struct.DState, ptr %369, i32 0, i32 5
  %371 = load i32, ptr %370, align 8
  %372 = icmp eq i32 %371, 0
  br i1 %372, label %373, label %394

373:                                              ; preds = %327
  %374 = load ptr, ptr %3, align 8
  %375 = getelementptr inbounds %struct.DState, ptr %374, i32 0, i32 6
  %376 = load i32, ptr %375, align 4
  %377 = sext i32 %376 to i64
  %378 = getelementptr inbounds [512 x i32], ptr @BZ2_rNums, i64 0, i64 %377
  %379 = load i32, ptr %378, align 4
  %380 = load ptr, ptr %3, align 8
  %381 = getelementptr inbounds %struct.DState, ptr %380, i32 0, i32 5
  store i32 %379, ptr %381, align 8
  %382 = load ptr, ptr %3, align 8
  %383 = getelementptr inbounds %struct.DState, ptr %382, i32 0, i32 6
  %384 = load i32, ptr %383, align 4
  %385 = add nsw i32 %384, 1
  store i32 %385, ptr %383, align 4
  %386 = load ptr, ptr %3, align 8
  %387 = getelementptr inbounds %struct.DState, ptr %386, i32 0, i32 6
  %388 = load i32, ptr %387, align 4
  %389 = icmp eq i32 %388, 512
  br i1 %389, label %390, label %393

390:                                              ; preds = %373
  %391 = load ptr, ptr %3, align 8
  %392 = getelementptr inbounds %struct.DState, ptr %391, i32 0, i32 6
  store i32 0, ptr %392, align 4
  br label %393

393:                                              ; preds = %390, %373
  br label %394

394:                                              ; preds = %393, %327
  %395 = load ptr, ptr %3, align 8
  %396 = getelementptr inbounds %struct.DState, ptr %395, i32 0, i32 5
  %397 = load i32, ptr %396, align 8
  %398 = add nsw i32 %397, -1
  store i32 %398, ptr %396, align 8
  %399 = load ptr, ptr %3, align 8
  %400 = getelementptr inbounds %struct.DState, ptr %399, i32 0, i32 5
  %401 = load i32, ptr %400, align 8
  %402 = icmp eq i32 %401, 1
  %403 = select i1 %402, i32 1, i32 0
  %404 = load i8, ptr %4, align 1
  %405 = zext i8 %404 to i32
  %406 = xor i32 %405, %403
  %407 = trunc i32 %406 to i8
  store i8 %407, ptr %4, align 1
  %408 = load ptr, ptr %3, align 8
  %409 = getelementptr inbounds %struct.DState, ptr %408, i32 0, i32 17
  %410 = load i32, ptr %409, align 4
  %411 = add nsw i32 %410, 1
  store i32 %411, ptr %409, align 4
  %412 = load ptr, ptr %3, align 8
  %413 = getelementptr inbounds %struct.DState, ptr %412, i32 0, i32 17
  %414 = load i32, ptr %413, align 4
  %415 = load ptr, ptr %3, align 8
  %416 = getelementptr inbounds %struct.DState, ptr %415, i32 0, i32 51
  %417 = load i32, ptr %416, align 8
  %418 = add nsw i32 %417, 1
  %419 = icmp eq i32 %414, %418
  br i1 %419, label %420, label %421

420:                                              ; preds = %394
  br label %.backedge

421:                                              ; preds = %394
  %422 = load i8, ptr %4, align 1
  %423 = zext i8 %422 to i32
  %424 = load ptr, ptr %3, align 8
  %425 = getelementptr inbounds %struct.DState, ptr %424, i32 0, i32 15
  %426 = load i32, ptr %425, align 8
  %427 = icmp ne i32 %423, %426
  br i1 %427, label %428, label %433

428:                                              ; preds = %421
  %429 = load i8, ptr %4, align 1
  %430 = zext i8 %429 to i32
  %431 = load ptr, ptr %3, align 8
  %432 = getelementptr inbounds %struct.DState, ptr %431, i32 0, i32 15
  store i32 %430, ptr %432, align 8
  br label %.backedge

433:                                              ; preds = %421
  %434 = load ptr, ptr %3, align 8
  %435 = getelementptr inbounds %struct.DState, ptr %434, i32 0, i32 14
  %436 = load i32, ptr %435, align 4
  %437 = load ptr, ptr %3, align 8
  %438 = getelementptr inbounds %struct.DState, ptr %437, i32 0, i32 18
  %439 = tail call i32 @BZ2_indexIntoF(i32 noundef %436, ptr noundef %438)
  %440 = trunc i32 %439 to i8
  store i8 %440, ptr %4, align 1
  %441 = load ptr, ptr %3, align 8
  %442 = getelementptr inbounds %struct.DState, ptr %441, i32 0, i32 21
  %443 = load ptr, ptr %442, align 8
  %444 = load ptr, ptr %3, align 8
  %445 = getelementptr inbounds %struct.DState, ptr %444, i32 0, i32 14
  %446 = load i32, ptr %445, align 4
  %447 = zext i32 %446 to i64
  %448 = getelementptr inbounds i16, ptr %443, i64 %447
  %449 = load i16, ptr %448, align 2
  %450 = zext i16 %449 to i32
  %451 = load ptr, ptr %3, align 8
  %452 = getelementptr inbounds %struct.DState, ptr %451, i32 0, i32 22
  %453 = load ptr, ptr %452, align 8
  %454 = load ptr, ptr %3, align 8
  %455 = getelementptr inbounds %struct.DState, ptr %454, i32 0, i32 14
  %456 = load i32, ptr %455, align 4
  %457 = lshr i32 %456, 1
  %458 = zext i32 %457 to i64
  %459 = getelementptr inbounds i8, ptr %453, i64 %458
  %460 = load i8, ptr %459, align 1
  %461 = zext i8 %460 to i32
  %462 = load ptr, ptr %3, align 8
  %463 = getelementptr inbounds %struct.DState, ptr %462, i32 0, i32 14
  %464 = load i32, ptr %463, align 4
  %465 = shl i32 %464, 2
  %466 = and i32 %465, 4
  %467 = lshr i32 %461, %466
  %468 = and i32 %467, 15
  %469 = shl i32 %468, 16
  %470 = or i32 %450, %469
  %471 = load ptr, ptr %3, align 8
  %472 = getelementptr inbounds %struct.DState, ptr %471, i32 0, i32 14
  store i32 %470, ptr %472, align 4
  %473 = load ptr, ptr %3, align 8
  %474 = getelementptr inbounds %struct.DState, ptr %473, i32 0, i32 5
  %475 = load i32, ptr %474, align 8
  %476 = icmp eq i32 %475, 0
  br i1 %476, label %477, label %498

477:                                              ; preds = %433
  %478 = load ptr, ptr %3, align 8
  %479 = getelementptr inbounds %struct.DState, ptr %478, i32 0, i32 6
  %480 = load i32, ptr %479, align 4
  %481 = sext i32 %480 to i64
  %482 = getelementptr inbounds [512 x i32], ptr @BZ2_rNums, i64 0, i64 %481
  %483 = load i32, ptr %482, align 4
  %484 = load ptr, ptr %3, align 8
  %485 = getelementptr inbounds %struct.DState, ptr %484, i32 0, i32 5
  store i32 %483, ptr %485, align 8
  %486 = load ptr, ptr %3, align 8
  %487 = getelementptr inbounds %struct.DState, ptr %486, i32 0, i32 6
  %488 = load i32, ptr %487, align 4
  %489 = add nsw i32 %488, 1
  store i32 %489, ptr %487, align 4
  %490 = load ptr, ptr %3, align 8
  %491 = getelementptr inbounds %struct.DState, ptr %490, i32 0, i32 6
  %492 = load i32, ptr %491, align 4
  %493 = icmp eq i32 %492, 512
  br i1 %493, label %494, label %497

494:                                              ; preds = %477
  %495 = load ptr, ptr %3, align 8
  %496 = getelementptr inbounds %struct.DState, ptr %495, i32 0, i32 6
  store i32 0, ptr %496, align 4
  br label %497

497:                                              ; preds = %494, %477
  br label %498

498:                                              ; preds = %497, %433
  %499 = load ptr, ptr %3, align 8
  %500 = getelementptr inbounds %struct.DState, ptr %499, i32 0, i32 5
  %501 = load i32, ptr %500, align 8
  %502 = add nsw i32 %501, -1
  store i32 %502, ptr %500, align 8
  %503 = load ptr, ptr %3, align 8
  %504 = getelementptr inbounds %struct.DState, ptr %503, i32 0, i32 5
  %505 = load i32, ptr %504, align 8
  %506 = icmp eq i32 %505, 1
  %507 = select i1 %506, i32 1, i32 0
  %508 = load i8, ptr %4, align 1
  %509 = zext i8 %508 to i32
  %510 = xor i32 %509, %507
  %511 = trunc i32 %510 to i8
  store i8 %511, ptr %4, align 1
  %512 = load ptr, ptr %3, align 8
  %513 = getelementptr inbounds %struct.DState, ptr %512, i32 0, i32 17
  %514 = load i32, ptr %513, align 4
  %515 = add nsw i32 %514, 1
  store i32 %515, ptr %513, align 4
  %516 = load i8, ptr %4, align 1
  %517 = zext i8 %516 to i32
  %518 = add nsw i32 %517, 4
  %519 = load ptr, ptr %3, align 8
  %520 = getelementptr inbounds %struct.DState, ptr %519, i32 0, i32 3
  store i32 %518, ptr %520, align 8
  %521 = load ptr, ptr %3, align 8
  %522 = getelementptr inbounds %struct.DState, ptr %521, i32 0, i32 14
  %523 = load i32, ptr %522, align 4
  %524 = load ptr, ptr %3, align 8
  %525 = getelementptr inbounds %struct.DState, ptr %524, i32 0, i32 18
  %526 = tail call i32 @BZ2_indexIntoF(i32 noundef %523, ptr noundef %525)
  %527 = load ptr, ptr %3, align 8
  %528 = getelementptr inbounds %struct.DState, ptr %527, i32 0, i32 15
  store i32 %526, ptr %528, align 8
  %529 = load ptr, ptr %3, align 8
  %530 = getelementptr inbounds %struct.DState, ptr %529, i32 0, i32 21
  %531 = load ptr, ptr %530, align 8
  %532 = load ptr, ptr %3, align 8
  %533 = getelementptr inbounds %struct.DState, ptr %532, i32 0, i32 14
  %534 = load i32, ptr %533, align 4
  %535 = zext i32 %534 to i64
  %536 = getelementptr inbounds i16, ptr %531, i64 %535
  %537 = load i16, ptr %536, align 2
  %538 = zext i16 %537 to i32
  %539 = load ptr, ptr %3, align 8
  %540 = getelementptr inbounds %struct.DState, ptr %539, i32 0, i32 22
  %541 = load ptr, ptr %540, align 8
  %542 = load ptr, ptr %3, align 8
  %543 = getelementptr inbounds %struct.DState, ptr %542, i32 0, i32 14
  %544 = load i32, ptr %543, align 4
  %545 = lshr i32 %544, 1
  %546 = zext i32 %545 to i64
  %547 = getelementptr inbounds i8, ptr %541, i64 %546
  %548 = load i8, ptr %547, align 1
  %549 = zext i8 %548 to i32
  %550 = load ptr, ptr %3, align 8
  %551 = getelementptr inbounds %struct.DState, ptr %550, i32 0, i32 14
  %552 = load i32, ptr %551, align 4
  %553 = shl i32 %552, 2
  %554 = and i32 %553, 4
  %555 = lshr i32 %549, %554
  %556 = and i32 %555, 15
  %557 = shl i32 %556, 16
  %558 = or i32 %538, %557
  %559 = load ptr, ptr %3, align 8
  %560 = getelementptr inbounds %struct.DState, ptr %559, i32 0, i32 14
  store i32 %558, ptr %560, align 4
  %561 = load ptr, ptr %3, align 8
  %562 = getelementptr inbounds %struct.DState, ptr %561, i32 0, i32 5
  %563 = load i32, ptr %562, align 8
  %564 = icmp eq i32 %563, 0
  br i1 %564, label %565, label %586

565:                                              ; preds = %498
  %566 = load ptr, ptr %3, align 8
  %567 = getelementptr inbounds %struct.DState, ptr %566, i32 0, i32 6
  %568 = load i32, ptr %567, align 4
  %569 = sext i32 %568 to i64
  %570 = getelementptr inbounds [512 x i32], ptr @BZ2_rNums, i64 0, i64 %569
  %571 = load i32, ptr %570, align 4
  %572 = load ptr, ptr %3, align 8
  %573 = getelementptr inbounds %struct.DState, ptr %572, i32 0, i32 5
  store i32 %571, ptr %573, align 8
  %574 = load ptr, ptr %3, align 8
  %575 = getelementptr inbounds %struct.DState, ptr %574, i32 0, i32 6
  %576 = load i32, ptr %575, align 4
  %577 = add nsw i32 %576, 1
  store i32 %577, ptr %575, align 4
  %578 = load ptr, ptr %3, align 8
  %579 = getelementptr inbounds %struct.DState, ptr %578, i32 0, i32 6
  %580 = load i32, ptr %579, align 4
  %581 = icmp eq i32 %580, 512
  br i1 %581, label %582, label %585

582:                                              ; preds = %565
  %583 = load ptr, ptr %3, align 8
  %584 = getelementptr inbounds %struct.DState, ptr %583, i32 0, i32 6
  store i32 0, ptr %584, align 4
  br label %585

585:                                              ; preds = %582, %565
  br label %586

586:                                              ; preds = %585, %498
  %587 = load ptr, ptr %3, align 8
  %588 = getelementptr inbounds %struct.DState, ptr %587, i32 0, i32 5
  %589 = load i32, ptr %588, align 8
  %590 = add nsw i32 %589, -1
  store i32 %590, ptr %588, align 8
  %591 = load ptr, ptr %3, align 8
  %592 = getelementptr inbounds %struct.DState, ptr %591, i32 0, i32 5
  %593 = load i32, ptr %592, align 8
  %594 = icmp eq i32 %593, 1
  %595 = select i1 %594, i32 1, i32 0
  %596 = load ptr, ptr %3, align 8
  %597 = getelementptr inbounds %struct.DState, ptr %596, i32 0, i32 15
  %598 = load i32, ptr %597, align 8
  %599 = xor i32 %598, %595
  store i32 %599, ptr %597, align 8
  %600 = load ptr, ptr %3, align 8
  %601 = getelementptr inbounds %struct.DState, ptr %600, i32 0, i32 17
  %602 = load i32, ptr %601, align 4
  %603 = add nsw i32 %602, 1
  store i32 %603, ptr %601, align 4
  br label %.backedge

604:                                              ; preds = %1
  %605 = load ptr, ptr %3, align 8
  %606 = load ptr, ptr %605, align 8
  %607 = getelementptr inbounds %struct.bz_stream, ptr %606, i32 0, i32 5
  %608 = load i32, ptr %607, align 8
  %609 = icmp eq i32 %608, 0
  br i1 %609, label %._crit_edge, label %.lr.ph.lr.ph

.lr.ph.lr.ph:                                     ; preds = %604
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.lr.ph, %.backedge1
  br label %611

.._crit_edge_crit_edge:                           ; preds = %.backedge1
  br label %._crit_edge

._crit_edge:                                      ; preds = %.._crit_edge_crit_edge, %604
  br label %610

._crit_edge2:                                     ; preds = %682
  br label %610

610:                                              ; preds = %._crit_edge2, %._crit_edge
  store i8 0, ptr %2, align 1
  br label %1004

611:                                              ; preds = %.lr.ph, %682
  %612 = load ptr, ptr %3, align 8
  %613 = getelementptr inbounds %struct.DState, ptr %612, i32 0, i32 3
  %614 = load i32, ptr %613, align 8
  %615 = icmp eq i32 %614, 0
  br i1 %615, label %616, label %625

616:                                              ; preds = %611
  %617 = load ptr, ptr %3, align 8
  %618 = getelementptr inbounds %struct.DState, ptr %617, i32 0, i32 17
  %619 = load i32, ptr %618, align 4
  %620 = load ptr, ptr %3, align 8
  %621 = getelementptr inbounds %struct.DState, ptr %620, i32 0, i32 51
  %622 = load i32, ptr %621, align 8
  %623 = add nsw i32 %622, 1
  %624 = icmp eq i32 %619, %623
  br i1 %624, label %688, label %689

625:                                              ; preds = %611
  %626 = load ptr, ptr %3, align 8
  %627 = getelementptr inbounds %struct.DState, ptr %626, i32 0, i32 2
  %628 = load i8, ptr %627, align 4
  %629 = load ptr, ptr %3, align 8
  %630 = load ptr, ptr %629, align 8
  %631 = getelementptr inbounds %struct.bz_stream, ptr %630, i32 0, i32 4
  %632 = load ptr, ptr %631, align 8
  store i8 %628, ptr %632, align 1
  %633 = load ptr, ptr %3, align 8
  %634 = getelementptr inbounds %struct.DState, ptr %633, i32 0, i32 25
  %635 = load i32, ptr %634, align 8
  %636 = shl i32 %635, 8
  %637 = load ptr, ptr %3, align 8
  %638 = getelementptr inbounds %struct.DState, ptr %637, i32 0, i32 25
  %639 = load i32, ptr %638, align 8
  %640 = lshr i32 %639, 24
  %641 = load ptr, ptr %3, align 8
  %642 = getelementptr inbounds %struct.DState, ptr %641, i32 0, i32 2
  %643 = load i8, ptr %642, align 4
  %644 = zext i8 %643 to i32
  %645 = xor i32 %640, %644
  %646 = zext i32 %645 to i64
  %647 = getelementptr inbounds [256 x i32], ptr @BZ2_crc32Table, i64 0, i64 %646
  %648 = load i32, ptr %647, align 4
  %649 = xor i32 %636, %648
  %650 = load ptr, ptr %3, align 8
  %651 = getelementptr inbounds %struct.DState, ptr %650, i32 0, i32 25
  store i32 %649, ptr %651, align 8
  %652 = load ptr, ptr %3, align 8
  %653 = getelementptr inbounds %struct.DState, ptr %652, i32 0, i32 3
  %654 = load i32, ptr %653, align 8
  %655 = add nsw i32 %654, -1
  store i32 %655, ptr %653, align 8
  %656 = load ptr, ptr %3, align 8
  %657 = load ptr, ptr %656, align 8
  %658 = getelementptr inbounds %struct.bz_stream, ptr %657, i32 0, i32 4
  %659 = load ptr, ptr %658, align 8
  %660 = getelementptr inbounds i8, ptr %659, i32 1
  store ptr %660, ptr %658, align 8
  %661 = load ptr, ptr %3, align 8
  %662 = load ptr, ptr %661, align 8
  %663 = getelementptr inbounds %struct.bz_stream, ptr %662, i32 0, i32 5
  %664 = load i32, ptr %663, align 8
  %665 = add i32 %664, -1
  store i32 %665, ptr %663, align 8
  %666 = load ptr, ptr %3, align 8
  %667 = load ptr, ptr %666, align 8
  %668 = getelementptr inbounds %struct.bz_stream, ptr %667, i32 0, i32 6
  %669 = load i32, ptr %668, align 4
  %670 = add i32 %669, 1
  store i32 %670, ptr %668, align 4
  %671 = load ptr, ptr %3, align 8
  %672 = load ptr, ptr %671, align 8
  %673 = getelementptr inbounds %struct.bz_stream, ptr %672, i32 0, i32 6
  %674 = load i32, ptr %673, align 4
  %675 = icmp eq i32 %674, 0
  br i1 %675, label %676, label %682

676:                                              ; preds = %625
  %677 = load ptr, ptr %3, align 8
  %678 = load ptr, ptr %677, align 8
  %679 = getelementptr inbounds %struct.bz_stream, ptr %678, i32 0, i32 7
  %680 = load i32, ptr %679, align 8
  %681 = add i32 %680, 1
  store i32 %681, ptr %679, align 8
  br label %682

682:                                              ; preds = %676, %625
  %683 = load ptr, ptr %3, align 8
  %684 = load ptr, ptr %683, align 8
  %685 = getelementptr inbounds %struct.bz_stream, ptr %684, i32 0, i32 5
  %686 = load i32, ptr %685, align 8
  %687 = icmp eq i32 %686, 0
  br i1 %687, label %._crit_edge2, label %611

688:                                              ; preds = %616
  store i8 0, ptr %2, align 1
  br label %1004

689:                                              ; preds = %616
  %690 = load ptr, ptr %3, align 8
  %691 = getelementptr inbounds %struct.DState, ptr %690, i32 0, i32 17
  %692 = load i32, ptr %691, align 4
  %693 = load ptr, ptr %3, align 8
  %694 = getelementptr inbounds %struct.DState, ptr %693, i32 0, i32 51
  %695 = load i32, ptr %694, align 8
  %696 = add nsw i32 %695, 1
  %697 = icmp sgt i32 %692, %696
  br i1 %697, label %698, label %699

698:                                              ; preds = %689
  store i8 1, ptr %2, align 1
  br label %1004

699:                                              ; preds = %689
  %700 = load ptr, ptr %3, align 8
  %701 = getelementptr inbounds %struct.DState, ptr %700, i32 0, i32 3
  store i32 1, ptr %701, align 8
  %702 = load ptr, ptr %3, align 8
  %703 = getelementptr inbounds %struct.DState, ptr %702, i32 0, i32 15
  %704 = load i32, ptr %703, align 8
  %705 = trunc i32 %704 to i8
  %706 = load ptr, ptr %3, align 8
  %707 = getelementptr inbounds %struct.DState, ptr %706, i32 0, i32 2
  store i8 %705, ptr %707, align 4
  %708 = load ptr, ptr %3, align 8
  %709 = getelementptr inbounds %struct.DState, ptr %708, i32 0, i32 14
  %710 = load i32, ptr %709, align 4
  %711 = load ptr, ptr %3, align 8
  %712 = getelementptr inbounds %struct.DState, ptr %711, i32 0, i32 18
  %713 = tail call i32 @BZ2_indexIntoF(i32 noundef %710, ptr noundef %712)
  %714 = trunc i32 %713 to i8
  store i8 %714, ptr %4, align 1
  %715 = load ptr, ptr %3, align 8
  %716 = getelementptr inbounds %struct.DState, ptr %715, i32 0, i32 21
  %717 = load ptr, ptr %716, align 8
  %718 = load ptr, ptr %3, align 8
  %719 = getelementptr inbounds %struct.DState, ptr %718, i32 0, i32 14
  %720 = load i32, ptr %719, align 4
  %721 = zext i32 %720 to i64
  %722 = getelementptr inbounds i16, ptr %717, i64 %721
  %723 = load i16, ptr %722, align 2
  %724 = zext i16 %723 to i32
  %725 = load ptr, ptr %3, align 8
  %726 = getelementptr inbounds %struct.DState, ptr %725, i32 0, i32 22
  %727 = load ptr, ptr %726, align 8
  %728 = load ptr, ptr %3, align 8
  %729 = getelementptr inbounds %struct.DState, ptr %728, i32 0, i32 14
  %730 = load i32, ptr %729, align 4
  %731 = lshr i32 %730, 1
  %732 = zext i32 %731 to i64
  %733 = getelementptr inbounds i8, ptr %727, i64 %732
  %734 = load i8, ptr %733, align 1
  %735 = zext i8 %734 to i32
  %736 = load ptr, ptr %3, align 8
  %737 = getelementptr inbounds %struct.DState, ptr %736, i32 0, i32 14
  %738 = load i32, ptr %737, align 4
  %739 = shl i32 %738, 2
  %740 = and i32 %739, 4
  %741 = lshr i32 %735, %740
  %742 = and i32 %741, 15
  %743 = shl i32 %742, 16
  %744 = or i32 %724, %743
  %745 = load ptr, ptr %3, align 8
  %746 = getelementptr inbounds %struct.DState, ptr %745, i32 0, i32 14
  store i32 %744, ptr %746, align 4
  %747 = load ptr, ptr %3, align 8
  %748 = getelementptr inbounds %struct.DState, ptr %747, i32 0, i32 17
  %749 = load i32, ptr %748, align 4
  %750 = add nsw i32 %749, 1
  store i32 %750, ptr %748, align 4
  %751 = load ptr, ptr %3, align 8
  %752 = getelementptr inbounds %struct.DState, ptr %751, i32 0, i32 17
  %753 = load i32, ptr %752, align 4
  %754 = load ptr, ptr %3, align 8
  %755 = getelementptr inbounds %struct.DState, ptr %754, i32 0, i32 51
  %756 = load i32, ptr %755, align 8
  %757 = add nsw i32 %756, 1
  %758 = icmp eq i32 %753, %757
  br i1 %758, label %759, label %765

759:                                              ; preds = %699
  br label %.backedge1

.backedge1:                                       ; preds = %759, %772, %831, %839, %898, %906, %911
  %760 = load ptr, ptr %3, align 8
  %761 = load ptr, ptr %760, align 8
  %762 = getelementptr inbounds %struct.bz_stream, ptr %761, i32 0, i32 5
  %763 = load i32, ptr %762, align 8
  %764 = icmp eq i32 %763, 0
  br i1 %764, label %.._crit_edge_crit_edge, label %.lr.ph

765:                                              ; preds = %699
  %766 = load i8, ptr %4, align 1
  %767 = zext i8 %766 to i32
  %768 = load ptr, ptr %3, align 8
  %769 = getelementptr inbounds %struct.DState, ptr %768, i32 0, i32 15
  %770 = load i32, ptr %769, align 8
  %771 = icmp ne i32 %767, %770
  br i1 %771, label %772, label %777

772:                                              ; preds = %765
  %773 = load i8, ptr %4, align 1
  %774 = zext i8 %773 to i32
  %775 = load ptr, ptr %3, align 8
  %776 = getelementptr inbounds %struct.DState, ptr %775, i32 0, i32 15
  store i32 %774, ptr %776, align 8
  br label %.backedge1

777:                                              ; preds = %765
  %778 = load ptr, ptr %3, align 8
  %779 = getelementptr inbounds %struct.DState, ptr %778, i32 0, i32 3
  store i32 2, ptr %779, align 8
  %780 = load ptr, ptr %3, align 8
  %781 = getelementptr inbounds %struct.DState, ptr %780, i32 0, i32 14
  %782 = load i32, ptr %781, align 4
  %783 = load ptr, ptr %3, align 8
  %784 = getelementptr inbounds %struct.DState, ptr %783, i32 0, i32 18
  %785 = tail call i32 @BZ2_indexIntoF(i32 noundef %782, ptr noundef %784)
  %786 = trunc i32 %785 to i8
  store i8 %786, ptr %4, align 1
  %787 = load ptr, ptr %3, align 8
  %788 = getelementptr inbounds %struct.DState, ptr %787, i32 0, i32 21
  %789 = load ptr, ptr %788, align 8
  %790 = load ptr, ptr %3, align 8
  %791 = getelementptr inbounds %struct.DState, ptr %790, i32 0, i32 14
  %792 = load i32, ptr %791, align 4
  %793 = zext i32 %792 to i64
  %794 = getelementptr inbounds i16, ptr %789, i64 %793
  %795 = load i16, ptr %794, align 2
  %796 = zext i16 %795 to i32
  %797 = load ptr, ptr %3, align 8
  %798 = getelementptr inbounds %struct.DState, ptr %797, i32 0, i32 22
  %799 = load ptr, ptr %798, align 8
  %800 = load ptr, ptr %3, align 8
  %801 = getelementptr inbounds %struct.DState, ptr %800, i32 0, i32 14
  %802 = load i32, ptr %801, align 4
  %803 = lshr i32 %802, 1
  %804 = zext i32 %803 to i64
  %805 = getelementptr inbounds i8, ptr %799, i64 %804
  %806 = load i8, ptr %805, align 1
  %807 = zext i8 %806 to i32
  %808 = load ptr, ptr %3, align 8
  %809 = getelementptr inbounds %struct.DState, ptr %808, i32 0, i32 14
  %810 = load i32, ptr %809, align 4
  %811 = shl i32 %810, 2
  %812 = and i32 %811, 4
  %813 = lshr i32 %807, %812
  %814 = and i32 %813, 15
  %815 = shl i32 %814, 16
  %816 = or i32 %796, %815
  %817 = load ptr, ptr %3, align 8
  %818 = getelementptr inbounds %struct.DState, ptr %817, i32 0, i32 14
  store i32 %816, ptr %818, align 4
  %819 = load ptr, ptr %3, align 8
  %820 = getelementptr inbounds %struct.DState, ptr %819, i32 0, i32 17
  %821 = load i32, ptr %820, align 4
  %822 = add nsw i32 %821, 1
  store i32 %822, ptr %820, align 4
  %823 = load ptr, ptr %3, align 8
  %824 = getelementptr inbounds %struct.DState, ptr %823, i32 0, i32 17
  %825 = load i32, ptr %824, align 4
  %826 = load ptr, ptr %3, align 8
  %827 = getelementptr inbounds %struct.DState, ptr %826, i32 0, i32 51
  %828 = load i32, ptr %827, align 8
  %829 = add nsw i32 %828, 1
  %830 = icmp eq i32 %825, %829
  br i1 %830, label %831, label %832

831:                                              ; preds = %777
  br label %.backedge1

832:                                              ; preds = %777
  %833 = load i8, ptr %4, align 1
  %834 = zext i8 %833 to i32
  %835 = load ptr, ptr %3, align 8
  %836 = getelementptr inbounds %struct.DState, ptr %835, i32 0, i32 15
  %837 = load i32, ptr %836, align 8
  %838 = icmp ne i32 %834, %837
  br i1 %838, label %839, label %844

839:                                              ; preds = %832
  %840 = load i8, ptr %4, align 1
  %841 = zext i8 %840 to i32
  %842 = load ptr, ptr %3, align 8
  %843 = getelementptr inbounds %struct.DState, ptr %842, i32 0, i32 15
  store i32 %841, ptr %843, align 8
  br label %.backedge1

844:                                              ; preds = %832
  %845 = load ptr, ptr %3, align 8
  %846 = getelementptr inbounds %struct.DState, ptr %845, i32 0, i32 3
  store i32 3, ptr %846, align 8
  %847 = load ptr, ptr %3, align 8
  %848 = getelementptr inbounds %struct.DState, ptr %847, i32 0, i32 14
  %849 = load i32, ptr %848, align 4
  %850 = load ptr, ptr %3, align 8
  %851 = getelementptr inbounds %struct.DState, ptr %850, i32 0, i32 18
  %852 = tail call i32 @BZ2_indexIntoF(i32 noundef %849, ptr noundef %851)
  %853 = trunc i32 %852 to i8
  store i8 %853, ptr %4, align 1
  %854 = load ptr, ptr %3, align 8
  %855 = getelementptr inbounds %struct.DState, ptr %854, i32 0, i32 21
  %856 = load ptr, ptr %855, align 8
  %857 = load ptr, ptr %3, align 8
  %858 = getelementptr inbounds %struct.DState, ptr %857, i32 0, i32 14
  %859 = load i32, ptr %858, align 4
  %860 = zext i32 %859 to i64
  %861 = getelementptr inbounds i16, ptr %856, i64 %860
  %862 = load i16, ptr %861, align 2
  %863 = zext i16 %862 to i32
  %864 = load ptr, ptr %3, align 8
  %865 = getelementptr inbounds %struct.DState, ptr %864, i32 0, i32 22
  %866 = load ptr, ptr %865, align 8
  %867 = load ptr, ptr %3, align 8
  %868 = getelementptr inbounds %struct.DState, ptr %867, i32 0, i32 14
  %869 = load i32, ptr %868, align 4
  %870 = lshr i32 %869, 1
  %871 = zext i32 %870 to i64
  %872 = getelementptr inbounds i8, ptr %866, i64 %871
  %873 = load i8, ptr %872, align 1
  %874 = zext i8 %873 to i32
  %875 = load ptr, ptr %3, align 8
  %876 = getelementptr inbounds %struct.DState, ptr %875, i32 0, i32 14
  %877 = load i32, ptr %876, align 4
  %878 = shl i32 %877, 2
  %879 = and i32 %878, 4
  %880 = lshr i32 %874, %879
  %881 = and i32 %880, 15
  %882 = shl i32 %881, 16
  %883 = or i32 %863, %882
  %884 = load ptr, ptr %3, align 8
  %885 = getelementptr inbounds %struct.DState, ptr %884, i32 0, i32 14
  store i32 %883, ptr %885, align 4
  %886 = load ptr, ptr %3, align 8
  %887 = getelementptr inbounds %struct.DState, ptr %886, i32 0, i32 17
  %888 = load i32, ptr %887, align 4
  %889 = add nsw i32 %888, 1
  store i32 %889, ptr %887, align 4
  %890 = load ptr, ptr %3, align 8
  %891 = getelementptr inbounds %struct.DState, ptr %890, i32 0, i32 17
  %892 = load i32, ptr %891, align 4
  %893 = load ptr, ptr %3, align 8
  %894 = getelementptr inbounds %struct.DState, ptr %893, i32 0, i32 51
  %895 = load i32, ptr %894, align 8
  %896 = add nsw i32 %895, 1
  %897 = icmp eq i32 %892, %896
  br i1 %897, label %898, label %899

898:                                              ; preds = %844
  br label %.backedge1

899:                                              ; preds = %844
  %900 = load i8, ptr %4, align 1
  %901 = zext i8 %900 to i32
  %902 = load ptr, ptr %3, align 8
  %903 = getelementptr inbounds %struct.DState, ptr %902, i32 0, i32 15
  %904 = load i32, ptr %903, align 8
  %905 = icmp ne i32 %901, %904
  br i1 %905, label %906, label %911

906:                                              ; preds = %899
  %907 = load i8, ptr %4, align 1
  %908 = zext i8 %907 to i32
  %909 = load ptr, ptr %3, align 8
  %910 = getelementptr inbounds %struct.DState, ptr %909, i32 0, i32 15
  store i32 %908, ptr %910, align 8
  br label %.backedge1

911:                                              ; preds = %899
  %912 = load ptr, ptr %3, align 8
  %913 = getelementptr inbounds %struct.DState, ptr %912, i32 0, i32 14
  %914 = load i32, ptr %913, align 4
  %915 = load ptr, ptr %3, align 8
  %916 = getelementptr inbounds %struct.DState, ptr %915, i32 0, i32 18
  %917 = tail call i32 @BZ2_indexIntoF(i32 noundef %914, ptr noundef %916)
  %918 = trunc i32 %917 to i8
  store i8 %918, ptr %4, align 1
  %919 = load ptr, ptr %3, align 8
  %920 = getelementptr inbounds %struct.DState, ptr %919, i32 0, i32 21
  %921 = load ptr, ptr %920, align 8
  %922 = load ptr, ptr %3, align 8
  %923 = getelementptr inbounds %struct.DState, ptr %922, i32 0, i32 14
  %924 = load i32, ptr %923, align 4
  %925 = zext i32 %924 to i64
  %926 = getelementptr inbounds i16, ptr %921, i64 %925
  %927 = load i16, ptr %926, align 2
  %928 = zext i16 %927 to i32
  %929 = load ptr, ptr %3, align 8
  %930 = getelementptr inbounds %struct.DState, ptr %929, i32 0, i32 22
  %931 = load ptr, ptr %930, align 8
  %932 = load ptr, ptr %3, align 8
  %933 = getelementptr inbounds %struct.DState, ptr %932, i32 0, i32 14
  %934 = load i32, ptr %933, align 4
  %935 = lshr i32 %934, 1
  %936 = zext i32 %935 to i64
  %937 = getelementptr inbounds i8, ptr %931, i64 %936
  %938 = load i8, ptr %937, align 1
  %939 = zext i8 %938 to i32
  %940 = load ptr, ptr %3, align 8
  %941 = getelementptr inbounds %struct.DState, ptr %940, i32 0, i32 14
  %942 = load i32, ptr %941, align 4
  %943 = shl i32 %942, 2
  %944 = and i32 %943, 4
  %945 = lshr i32 %939, %944
  %946 = and i32 %945, 15
  %947 = shl i32 %946, 16
  %948 = or i32 %928, %947
  %949 = load ptr, ptr %3, align 8
  %950 = getelementptr inbounds %struct.DState, ptr %949, i32 0, i32 14
  store i32 %948, ptr %950, align 4
  %951 = load ptr, ptr %3, align 8
  %952 = getelementptr inbounds %struct.DState, ptr %951, i32 0, i32 17
  %953 = load i32, ptr %952, align 4
  %954 = add nsw i32 %953, 1
  store i32 %954, ptr %952, align 4
  %955 = load i8, ptr %4, align 1
  %956 = zext i8 %955 to i32
  %957 = add nsw i32 %956, 4
  %958 = load ptr, ptr %3, align 8
  %959 = getelementptr inbounds %struct.DState, ptr %958, i32 0, i32 3
  store i32 %957, ptr %959, align 8
  %960 = load ptr, ptr %3, align 8
  %961 = getelementptr inbounds %struct.DState, ptr %960, i32 0, i32 14
  %962 = load i32, ptr %961, align 4
  %963 = load ptr, ptr %3, align 8
  %964 = getelementptr inbounds %struct.DState, ptr %963, i32 0, i32 18
  %965 = tail call i32 @BZ2_indexIntoF(i32 noundef %962, ptr noundef %964)
  %966 = load ptr, ptr %3, align 8
  %967 = getelementptr inbounds %struct.DState, ptr %966, i32 0, i32 15
  store i32 %965, ptr %967, align 8
  %968 = load ptr, ptr %3, align 8
  %969 = getelementptr inbounds %struct.DState, ptr %968, i32 0, i32 21
  %970 = load ptr, ptr %969, align 8
  %971 = load ptr, ptr %3, align 8
  %972 = getelementptr inbounds %struct.DState, ptr %971, i32 0, i32 14
  %973 = load i32, ptr %972, align 4
  %974 = zext i32 %973 to i64
  %975 = getelementptr inbounds i16, ptr %970, i64 %974
  %976 = load i16, ptr %975, align 2
  %977 = zext i16 %976 to i32
  %978 = load ptr, ptr %3, align 8
  %979 = getelementptr inbounds %struct.DState, ptr %978, i32 0, i32 22
  %980 = load ptr, ptr %979, align 8
  %981 = load ptr, ptr %3, align 8
  %982 = getelementptr inbounds %struct.DState, ptr %981, i32 0, i32 14
  %983 = load i32, ptr %982, align 4
  %984 = lshr i32 %983, 1
  %985 = zext i32 %984 to i64
  %986 = getelementptr inbounds i8, ptr %980, i64 %985
  %987 = load i8, ptr %986, align 1
  %988 = zext i8 %987 to i32
  %989 = load ptr, ptr %3, align 8
  %990 = getelementptr inbounds %struct.DState, ptr %989, i32 0, i32 14
  %991 = load i32, ptr %990, align 4
  %992 = shl i32 %991, 2
  %993 = and i32 %992, 4
  %994 = lshr i32 %988, %993
  %995 = and i32 %994, 15
  %996 = shl i32 %995, 16
  %997 = or i32 %977, %996
  %998 = load ptr, ptr %3, align 8
  %999 = getelementptr inbounds %struct.DState, ptr %998, i32 0, i32 14
  store i32 %997, ptr %999, align 4
  %1000 = load ptr, ptr %3, align 8
  %1001 = getelementptr inbounds %struct.DState, ptr %1000, i32 0, i32 17
  %1002 = load i32, ptr %1001, align 4
  %1003 = add nsw i32 %1002, 1
  store i32 %1003, ptr %1001, align 4
  br label %.backedge1

1004:                                             ; preds = %698, %688, %610, %103, %93, %15
  %1005 = load i8, ptr %2, align 1
  ret i8 %1005
}

; Function Attrs: noinline nounwind ssp uwtable(sync)
define internal zeroext i8 @unRLE_obuf_to_output_FAST(ptr noundef %0) #0 {
  %2 = alloca i8, align 1
  %3 = alloca ptr, align 8
  %4 = alloca i8, align 1
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca ptr, align 8
  %11 = alloca i32, align 4
  %12 = alloca ptr, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  store ptr %0, ptr %3, align 8
  %17 = load ptr, ptr %3, align 8
  %18 = getelementptr inbounds %struct.DState, ptr %17, i32 0, i32 4
  %19 = load i8, ptr %18, align 4
  %20 = icmp ne i8 %19, 0
  br i1 %20, label %21, label %523

21:                                               ; preds = %1
  %22 = load ptr, ptr %3, align 8
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds %struct.bz_stream, ptr %23, i32 0, i32 5
  %25 = load i32, ptr %24, align 8
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %._crit_edge5, label %.lr.ph4.lr.ph

.lr.ph4.lr.ph:                                    ; preds = %21
  br label %.lr.ph4

.lr.ph4:                                          ; preds = %.lr.ph4.lr.ph, %.backedge
  br label %28

.._crit_edge5_crit_edge:                          ; preds = %.backedge
  br label %._crit_edge5

._crit_edge5:                                     ; preds = %.._crit_edge5_crit_edge, %21
  br label %27

._crit_edge6:                                     ; preds = %99
  br label %27

27:                                               ; preds = %._crit_edge6, %._crit_edge5
  store i8 0, ptr %2, align 1
  br label %793

28:                                               ; preds = %.lr.ph4, %99
  %29 = load ptr, ptr %3, align 8
  %30 = getelementptr inbounds %struct.DState, ptr %29, i32 0, i32 3
  %31 = load i32, ptr %30, align 8
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %42

33:                                               ; preds = %28
  %34 = load ptr, ptr %3, align 8
  %35 = getelementptr inbounds %struct.DState, ptr %34, i32 0, i32 17
  %36 = load i32, ptr %35, align 4
  %37 = load ptr, ptr %3, align 8
  %38 = getelementptr inbounds %struct.DState, ptr %37, i32 0, i32 51
  %39 = load i32, ptr %38, align 8
  %40 = add nsw i32 %39, 1
  %41 = icmp eq i32 %36, %40
  br i1 %41, label %105, label %106

42:                                               ; preds = %28
  %43 = load ptr, ptr %3, align 8
  %44 = getelementptr inbounds %struct.DState, ptr %43, i32 0, i32 2
  %45 = load i8, ptr %44, align 4
  %46 = load ptr, ptr %3, align 8
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %struct.bz_stream, ptr %47, i32 0, i32 4
  %49 = load ptr, ptr %48, align 8
  store i8 %45, ptr %49, align 1
  %50 = load ptr, ptr %3, align 8
  %51 = getelementptr inbounds %struct.DState, ptr %50, i32 0, i32 25
  %52 = load i32, ptr %51, align 8
  %53 = shl i32 %52, 8
  %54 = load ptr, ptr %3, align 8
  %55 = getelementptr inbounds %struct.DState, ptr %54, i32 0, i32 25
  %56 = load i32, ptr %55, align 8
  %57 = lshr i32 %56, 24
  %58 = load ptr, ptr %3, align 8
  %59 = getelementptr inbounds %struct.DState, ptr %58, i32 0, i32 2
  %60 = load i8, ptr %59, align 4
  %61 = zext i8 %60 to i32
  %62 = xor i32 %57, %61
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds [256 x i32], ptr @BZ2_crc32Table, i64 0, i64 %63
  %65 = load i32, ptr %64, align 4
  %66 = xor i32 %53, %65
  %67 = load ptr, ptr %3, align 8
  %68 = getelementptr inbounds %struct.DState, ptr %67, i32 0, i32 25
  store i32 %66, ptr %68, align 8
  %69 = load ptr, ptr %3, align 8
  %70 = getelementptr inbounds %struct.DState, ptr %69, i32 0, i32 3
  %71 = load i32, ptr %70, align 8
  %72 = add nsw i32 %71, -1
  store i32 %72, ptr %70, align 8
  %73 = load ptr, ptr %3, align 8
  %74 = load ptr, ptr %73, align 8
  %75 = getelementptr inbounds %struct.bz_stream, ptr %74, i32 0, i32 4
  %76 = load ptr, ptr %75, align 8
  %77 = getelementptr inbounds i8, ptr %76, i32 1
  store ptr %77, ptr %75, align 8
  %78 = load ptr, ptr %3, align 8
  %79 = load ptr, ptr %78, align 8
  %80 = getelementptr inbounds %struct.bz_stream, ptr %79, i32 0, i32 5
  %81 = load i32, ptr %80, align 8
  %82 = add i32 %81, -1
  store i32 %82, ptr %80, align 8
  %83 = load ptr, ptr %3, align 8
  %84 = load ptr, ptr %83, align 8
  %85 = getelementptr inbounds %struct.bz_stream, ptr %84, i32 0, i32 6
  %86 = load i32, ptr %85, align 4
  %87 = add i32 %86, 1
  store i32 %87, ptr %85, align 4
  %88 = load ptr, ptr %3, align 8
  %89 = load ptr, ptr %88, align 8
  %90 = getelementptr inbounds %struct.bz_stream, ptr %89, i32 0, i32 6
  %91 = load i32, ptr %90, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %99

93:                                               ; preds = %42
  %94 = load ptr, ptr %3, align 8
  %95 = load ptr, ptr %94, align 8
  %96 = getelementptr inbounds %struct.bz_stream, ptr %95, i32 0, i32 7
  %97 = load i32, ptr %96, align 8
  %98 = add i32 %97, 1
  store i32 %98, ptr %96, align 8
  br label %99

99:                                               ; preds = %93, %42
  %100 = load ptr, ptr %3, align 8
  %101 = load ptr, ptr %100, align 8
  %102 = getelementptr inbounds %struct.bz_stream, ptr %101, i32 0, i32 5
  %103 = load i32, ptr %102, align 8
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %._crit_edge6, label %28

105:                                              ; preds = %33
  store i8 0, ptr %2, align 1
  br label %793

106:                                              ; preds = %33
  %107 = load ptr, ptr %3, align 8
  %108 = getelementptr inbounds %struct.DState, ptr %107, i32 0, i32 17
  %109 = load i32, ptr %108, align 4
  %110 = load ptr, ptr %3, align 8
  %111 = getelementptr inbounds %struct.DState, ptr %110, i32 0, i32 51
  %112 = load i32, ptr %111, align 8
  %113 = add nsw i32 %112, 1
  %114 = icmp sgt i32 %109, %113
  br i1 %114, label %115, label %116

115:                                              ; preds = %106
  store i8 1, ptr %2, align 1
  br label %793

116:                                              ; preds = %106
  %117 = load ptr, ptr %3, align 8
  %118 = getelementptr inbounds %struct.DState, ptr %117, i32 0, i32 3
  store i32 1, ptr %118, align 8
  %119 = load ptr, ptr %3, align 8
  %120 = getelementptr inbounds %struct.DState, ptr %119, i32 0, i32 15
  %121 = load i32, ptr %120, align 8
  %122 = trunc i32 %121 to i8
  %123 = load ptr, ptr %3, align 8
  %124 = getelementptr inbounds %struct.DState, ptr %123, i32 0, i32 2
  store i8 %122, ptr %124, align 4
  %125 = load ptr, ptr %3, align 8
  %126 = getelementptr inbounds %struct.DState, ptr %125, i32 0, i32 20
  %127 = load ptr, ptr %126, align 8
  %128 = load ptr, ptr %3, align 8
  %129 = getelementptr inbounds %struct.DState, ptr %128, i32 0, i32 14
  %130 = load i32, ptr %129, align 4
  %131 = zext i32 %130 to i64
  %132 = getelementptr inbounds i32, ptr %127, i64 %131
  %133 = load i32, ptr %132, align 4
  %134 = load ptr, ptr %3, align 8
  %135 = getelementptr inbounds %struct.DState, ptr %134, i32 0, i32 14
  store i32 %133, ptr %135, align 4
  %136 = load ptr, ptr %3, align 8
  %137 = getelementptr inbounds %struct.DState, ptr %136, i32 0, i32 14
  %138 = load i32, ptr %137, align 4
  %139 = and i32 %138, 255
  %140 = trunc i32 %139 to i8
  store i8 %140, ptr %4, align 1
  %141 = load ptr, ptr %3, align 8
  %142 = getelementptr inbounds %struct.DState, ptr %141, i32 0, i32 14
  %143 = load i32, ptr %142, align 4
  %144 = lshr i32 %143, 8
  store i32 %144, ptr %142, align 4
  %145 = load ptr, ptr %3, align 8
  %146 = getelementptr inbounds %struct.DState, ptr %145, i32 0, i32 5
  %147 = load i32, ptr %146, align 8
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %170

149:                                              ; preds = %116
  %150 = load ptr, ptr %3, align 8
  %151 = getelementptr inbounds %struct.DState, ptr %150, i32 0, i32 6
  %152 = load i32, ptr %151, align 4
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds [512 x i32], ptr @BZ2_rNums, i64 0, i64 %153
  %155 = load i32, ptr %154, align 4
  %156 = load ptr, ptr %3, align 8
  %157 = getelementptr inbounds %struct.DState, ptr %156, i32 0, i32 5
  store i32 %155, ptr %157, align 8
  %158 = load ptr, ptr %3, align 8
  %159 = getelementptr inbounds %struct.DState, ptr %158, i32 0, i32 6
  %160 = load i32, ptr %159, align 4
  %161 = add nsw i32 %160, 1
  store i32 %161, ptr %159, align 4
  %162 = load ptr, ptr %3, align 8
  %163 = getelementptr inbounds %struct.DState, ptr %162, i32 0, i32 6
  %164 = load i32, ptr %163, align 4
  %165 = icmp eq i32 %164, 512
  br i1 %165, label %166, label %169

166:                                              ; preds = %149
  %167 = load ptr, ptr %3, align 8
  %168 = getelementptr inbounds %struct.DState, ptr %167, i32 0, i32 6
  store i32 0, ptr %168, align 4
  br label %169

169:                                              ; preds = %166, %149
  br label %170

170:                                              ; preds = %169, %116
  %171 = load ptr, ptr %3, align 8
  %172 = getelementptr inbounds %struct.DState, ptr %171, i32 0, i32 5
  %173 = load i32, ptr %172, align 8
  %174 = add nsw i32 %173, -1
  store i32 %174, ptr %172, align 8
  %175 = load ptr, ptr %3, align 8
  %176 = getelementptr inbounds %struct.DState, ptr %175, i32 0, i32 5
  %177 = load i32, ptr %176, align 8
  %178 = icmp eq i32 %177, 1
  %179 = select i1 %178, i32 1, i32 0
  %180 = load i8, ptr %4, align 1
  %181 = zext i8 %180 to i32
  %182 = xor i32 %181, %179
  %183 = trunc i32 %182 to i8
  store i8 %183, ptr %4, align 1
  %184 = load ptr, ptr %3, align 8
  %185 = getelementptr inbounds %struct.DState, ptr %184, i32 0, i32 17
  %186 = load i32, ptr %185, align 4
  %187 = add nsw i32 %186, 1
  store i32 %187, ptr %185, align 4
  %188 = load ptr, ptr %3, align 8
  %189 = getelementptr inbounds %struct.DState, ptr %188, i32 0, i32 17
  %190 = load i32, ptr %189, align 4
  %191 = load ptr, ptr %3, align 8
  %192 = getelementptr inbounds %struct.DState, ptr %191, i32 0, i32 51
  %193 = load i32, ptr %192, align 8
  %194 = add nsw i32 %193, 1
  %195 = icmp eq i32 %190, %194
  br i1 %195, label %196, label %202

196:                                              ; preds = %170
  br label %.backedge

.backedge:                                        ; preds = %196, %209, %288, %296, %375, %383, %505
  %197 = load ptr, ptr %3, align 8
  %198 = load ptr, ptr %197, align 8
  %199 = getelementptr inbounds %struct.bz_stream, ptr %198, i32 0, i32 5
  %200 = load i32, ptr %199, align 8
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %.._crit_edge5_crit_edge, label %.lr.ph4

202:                                              ; preds = %170
  %203 = load i8, ptr %4, align 1
  %204 = zext i8 %203 to i32
  %205 = load ptr, ptr %3, align 8
  %206 = getelementptr inbounds %struct.DState, ptr %205, i32 0, i32 15
  %207 = load i32, ptr %206, align 8
  %208 = icmp ne i32 %204, %207
  br i1 %208, label %209, label %214

209:                                              ; preds = %202
  %210 = load i8, ptr %4, align 1
  %211 = zext i8 %210 to i32
  %212 = load ptr, ptr %3, align 8
  %213 = getelementptr inbounds %struct.DState, ptr %212, i32 0, i32 15
  store i32 %211, ptr %213, align 8
  br label %.backedge

214:                                              ; preds = %202
  %215 = load ptr, ptr %3, align 8
  %216 = getelementptr inbounds %struct.DState, ptr %215, i32 0, i32 3
  store i32 2, ptr %216, align 8
  %217 = load ptr, ptr %3, align 8
  %218 = getelementptr inbounds %struct.DState, ptr %217, i32 0, i32 20
  %219 = load ptr, ptr %218, align 8
  %220 = load ptr, ptr %3, align 8
  %221 = getelementptr inbounds %struct.DState, ptr %220, i32 0, i32 14
  %222 = load i32, ptr %221, align 4
  %223 = zext i32 %222 to i64
  %224 = getelementptr inbounds i32, ptr %219, i64 %223
  %225 = load i32, ptr %224, align 4
  %226 = load ptr, ptr %3, align 8
  %227 = getelementptr inbounds %struct.DState, ptr %226, i32 0, i32 14
  store i32 %225, ptr %227, align 4
  %228 = load ptr, ptr %3, align 8
  %229 = getelementptr inbounds %struct.DState, ptr %228, i32 0, i32 14
  %230 = load i32, ptr %229, align 4
  %231 = and i32 %230, 255
  %232 = trunc i32 %231 to i8
  store i8 %232, ptr %4, align 1
  %233 = load ptr, ptr %3, align 8
  %234 = getelementptr inbounds %struct.DState, ptr %233, i32 0, i32 14
  %235 = load i32, ptr %234, align 4
  %236 = lshr i32 %235, 8
  store i32 %236, ptr %234, align 4
  %237 = load ptr, ptr %3, align 8
  %238 = getelementptr inbounds %struct.DState, ptr %237, i32 0, i32 5
  %239 = load i32, ptr %238, align 8
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %262

241:                                              ; preds = %214
  %242 = load ptr, ptr %3, align 8
  %243 = getelementptr inbounds %struct.DState, ptr %242, i32 0, i32 6
  %244 = load i32, ptr %243, align 4
  %245 = sext i32 %244 to i64
  %246 = getelementptr inbounds [512 x i32], ptr @BZ2_rNums, i64 0, i64 %245
  %247 = load i32, ptr %246, align 4
  %248 = load ptr, ptr %3, align 8
  %249 = getelementptr inbounds %struct.DState, ptr %248, i32 0, i32 5
  store i32 %247, ptr %249, align 8
  %250 = load ptr, ptr %3, align 8
  %251 = getelementptr inbounds %struct.DState, ptr %250, i32 0, i32 6
  %252 = load i32, ptr %251, align 4
  %253 = add nsw i32 %252, 1
  store i32 %253, ptr %251, align 4
  %254 = load ptr, ptr %3, align 8
  %255 = getelementptr inbounds %struct.DState, ptr %254, i32 0, i32 6
  %256 = load i32, ptr %255, align 4
  %257 = icmp eq i32 %256, 512
  br i1 %257, label %258, label %261

258:                                              ; preds = %241
  %259 = load ptr, ptr %3, align 8
  %260 = getelementptr inbounds %struct.DState, ptr %259, i32 0, i32 6
  store i32 0, ptr %260, align 4
  br label %261

261:                                              ; preds = %258, %241
  br label %262

262:                                              ; preds = %261, %214
  %263 = load ptr, ptr %3, align 8
  %264 = getelementptr inbounds %struct.DState, ptr %263, i32 0, i32 5
  %265 = load i32, ptr %264, align 8
  %266 = add nsw i32 %265, -1
  store i32 %266, ptr %264, align 8
  %267 = load ptr, ptr %3, align 8
  %268 = getelementptr inbounds %struct.DState, ptr %267, i32 0, i32 5
  %269 = load i32, ptr %268, align 8
  %270 = icmp eq i32 %269, 1
  %271 = select i1 %270, i32 1, i32 0
  %272 = load i8, ptr %4, align 1
  %273 = zext i8 %272 to i32
  %274 = xor i32 %273, %271
  %275 = trunc i32 %274 to i8
  store i8 %275, ptr %4, align 1
  %276 = load ptr, ptr %3, align 8
  %277 = getelementptr inbounds %struct.DState, ptr %276, i32 0, i32 17
  %278 = load i32, ptr %277, align 4
  %279 = add nsw i32 %278, 1
  store i32 %279, ptr %277, align 4
  %280 = load ptr, ptr %3, align 8
  %281 = getelementptr inbounds %struct.DState, ptr %280, i32 0, i32 17
  %282 = load i32, ptr %281, align 4
  %283 = load ptr, ptr %3, align 8
  %284 = getelementptr inbounds %struct.DState, ptr %283, i32 0, i32 51
  %285 = load i32, ptr %284, align 8
  %286 = add nsw i32 %285, 1
  %287 = icmp eq i32 %282, %286
  br i1 %287, label %288, label %289

288:                                              ; preds = %262
  br label %.backedge

289:                                              ; preds = %262
  %290 = load i8, ptr %4, align 1
  %291 = zext i8 %290 to i32
  %292 = load ptr, ptr %3, align 8
  %293 = getelementptr inbounds %struct.DState, ptr %292, i32 0, i32 15
  %294 = load i32, ptr %293, align 8
  %295 = icmp ne i32 %291, %294
  br i1 %295, label %296, label %301

296:                                              ; preds = %289
  %297 = load i8, ptr %4, align 1
  %298 = zext i8 %297 to i32
  %299 = load ptr, ptr %3, align 8
  %300 = getelementptr inbounds %struct.DState, ptr %299, i32 0, i32 15
  store i32 %298, ptr %300, align 8
  br label %.backedge

301:                                              ; preds = %289
  %302 = load ptr, ptr %3, align 8
  %303 = getelementptr inbounds %struct.DState, ptr %302, i32 0, i32 3
  store i32 3, ptr %303, align 8
  %304 = load ptr, ptr %3, align 8
  %305 = getelementptr inbounds %struct.DState, ptr %304, i32 0, i32 20
  %306 = load ptr, ptr %305, align 8
  %307 = load ptr, ptr %3, align 8
  %308 = getelementptr inbounds %struct.DState, ptr %307, i32 0, i32 14
  %309 = load i32, ptr %308, align 4
  %310 = zext i32 %309 to i64
  %311 = getelementptr inbounds i32, ptr %306, i64 %310
  %312 = load i32, ptr %311, align 4
  %313 = load ptr, ptr %3, align 8
  %314 = getelementptr inbounds %struct.DState, ptr %313, i32 0, i32 14
  store i32 %312, ptr %314, align 4
  %315 = load ptr, ptr %3, align 8
  %316 = getelementptr inbounds %struct.DState, ptr %315, i32 0, i32 14
  %317 = load i32, ptr %316, align 4
  %318 = and i32 %317, 255
  %319 = trunc i32 %318 to i8
  store i8 %319, ptr %4, align 1
  %320 = load ptr, ptr %3, align 8
  %321 = getelementptr inbounds %struct.DState, ptr %320, i32 0, i32 14
  %322 = load i32, ptr %321, align 4
  %323 = lshr i32 %322, 8
  store i32 %323, ptr %321, align 4
  %324 = load ptr, ptr %3, align 8
  %325 = getelementptr inbounds %struct.DState, ptr %324, i32 0, i32 5
  %326 = load i32, ptr %325, align 8
  %327 = icmp eq i32 %326, 0
  br i1 %327, label %328, label %349

328:                                              ; preds = %301
  %329 = load ptr, ptr %3, align 8
  %330 = getelementptr inbounds %struct.DState, ptr %329, i32 0, i32 6
  %331 = load i32, ptr %330, align 4
  %332 = sext i32 %331 to i64
  %333 = getelementptr inbounds [512 x i32], ptr @BZ2_rNums, i64 0, i64 %332
  %334 = load i32, ptr %333, align 4
  %335 = load ptr, ptr %3, align 8
  %336 = getelementptr inbounds %struct.DState, ptr %335, i32 0, i32 5
  store i32 %334, ptr %336, align 8
  %337 = load ptr, ptr %3, align 8
  %338 = getelementptr inbounds %struct.DState, ptr %337, i32 0, i32 6
  %339 = load i32, ptr %338, align 4
  %340 = add nsw i32 %339, 1
  store i32 %340, ptr %338, align 4
  %341 = load ptr, ptr %3, align 8
  %342 = getelementptr inbounds %struct.DState, ptr %341, i32 0, i32 6
  %343 = load i32, ptr %342, align 4
  %344 = icmp eq i32 %343, 512
  br i1 %344, label %345, label %348

345:                                              ; preds = %328
  %346 = load ptr, ptr %3, align 8
  %347 = getelementptr inbounds %struct.DState, ptr %346, i32 0, i32 6
  store i32 0, ptr %347, align 4
  br label %348

348:                                              ; preds = %345, %328
  br label %349

349:                                              ; preds = %348, %301
  %350 = load ptr, ptr %3, align 8
  %351 = getelementptr inbounds %struct.DState, ptr %350, i32 0, i32 5
  %352 = load i32, ptr %351, align 8
  %353 = add nsw i32 %352, -1
  store i32 %353, ptr %351, align 8
  %354 = load ptr, ptr %3, align 8
  %355 = getelementptr inbounds %struct.DState, ptr %354, i32 0, i32 5
  %356 = load i32, ptr %355, align 8
  %357 = icmp eq i32 %356, 1
  %358 = select i1 %357, i32 1, i32 0
  %359 = load i8, ptr %4, align 1
  %360 = zext i8 %359 to i32
  %361 = xor i32 %360, %358
  %362 = trunc i32 %361 to i8
  store i8 %362, ptr %4, align 1
  %363 = load ptr, ptr %3, align 8
  %364 = getelementptr inbounds %struct.DState, ptr %363, i32 0, i32 17
  %365 = load i32, ptr %364, align 4
  %366 = add nsw i32 %365, 1
  store i32 %366, ptr %364, align 4
  %367 = load ptr, ptr %3, align 8
  %368 = getelementptr inbounds %struct.DState, ptr %367, i32 0, i32 17
  %369 = load i32, ptr %368, align 4
  %370 = load ptr, ptr %3, align 8
  %371 = getelementptr inbounds %struct.DState, ptr %370, i32 0, i32 51
  %372 = load i32, ptr %371, align 8
  %373 = add nsw i32 %372, 1
  %374 = icmp eq i32 %369, %373
  br i1 %374, label %375, label %376

375:                                              ; preds = %349
  br label %.backedge

376:                                              ; preds = %349
  %377 = load i8, ptr %4, align 1
  %378 = zext i8 %377 to i32
  %379 = load ptr, ptr %3, align 8
  %380 = getelementptr inbounds %struct.DState, ptr %379, i32 0, i32 15
  %381 = load i32, ptr %380, align 8
  %382 = icmp ne i32 %378, %381
  br i1 %382, label %383, label %388

383:                                              ; preds = %376
  %384 = load i8, ptr %4, align 1
  %385 = zext i8 %384 to i32
  %386 = load ptr, ptr %3, align 8
  %387 = getelementptr inbounds %struct.DState, ptr %386, i32 0, i32 15
  store i32 %385, ptr %387, align 8
  br label %.backedge

388:                                              ; preds = %376
  %389 = load ptr, ptr %3, align 8
  %390 = getelementptr inbounds %struct.DState, ptr %389, i32 0, i32 20
  %391 = load ptr, ptr %390, align 8
  %392 = load ptr, ptr %3, align 8
  %393 = getelementptr inbounds %struct.DState, ptr %392, i32 0, i32 14
  %394 = load i32, ptr %393, align 4
  %395 = zext i32 %394 to i64
  %396 = getelementptr inbounds i32, ptr %391, i64 %395
  %397 = load i32, ptr %396, align 4
  %398 = load ptr, ptr %3, align 8
  %399 = getelementptr inbounds %struct.DState, ptr %398, i32 0, i32 14
  store i32 %397, ptr %399, align 4
  %400 = load ptr, ptr %3, align 8
  %401 = getelementptr inbounds %struct.DState, ptr %400, i32 0, i32 14
  %402 = load i32, ptr %401, align 4
  %403 = and i32 %402, 255
  %404 = trunc i32 %403 to i8
  store i8 %404, ptr %4, align 1
  %405 = load ptr, ptr %3, align 8
  %406 = getelementptr inbounds %struct.DState, ptr %405, i32 0, i32 14
  %407 = load i32, ptr %406, align 4
  %408 = lshr i32 %407, 8
  store i32 %408, ptr %406, align 4
  %409 = load ptr, ptr %3, align 8
  %410 = getelementptr inbounds %struct.DState, ptr %409, i32 0, i32 5
  %411 = load i32, ptr %410, align 8
  %412 = icmp eq i32 %411, 0
  br i1 %412, label %413, label %434

413:                                              ; preds = %388
  %414 = load ptr, ptr %3, align 8
  %415 = getelementptr inbounds %struct.DState, ptr %414, i32 0, i32 6
  %416 = load i32, ptr %415, align 4
  %417 = sext i32 %416 to i64
  %418 = getelementptr inbounds [512 x i32], ptr @BZ2_rNums, i64 0, i64 %417
  %419 = load i32, ptr %418, align 4
  %420 = load ptr, ptr %3, align 8
  %421 = getelementptr inbounds %struct.DState, ptr %420, i32 0, i32 5
  store i32 %419, ptr %421, align 8
  %422 = load ptr, ptr %3, align 8
  %423 = getelementptr inbounds %struct.DState, ptr %422, i32 0, i32 6
  %424 = load i32, ptr %423, align 4
  %425 = add nsw i32 %424, 1
  store i32 %425, ptr %423, align 4
  %426 = load ptr, ptr %3, align 8
  %427 = getelementptr inbounds %struct.DState, ptr %426, i32 0, i32 6
  %428 = load i32, ptr %427, align 4
  %429 = icmp eq i32 %428, 512
  br i1 %429, label %430, label %433

430:                                              ; preds = %413
  %431 = load ptr, ptr %3, align 8
  %432 = getelementptr inbounds %struct.DState, ptr %431, i32 0, i32 6
  store i32 0, ptr %432, align 4
  br label %433

433:                                              ; preds = %430, %413
  br label %434

434:                                              ; preds = %433, %388
  %435 = load ptr, ptr %3, align 8
  %436 = getelementptr inbounds %struct.DState, ptr %435, i32 0, i32 5
  %437 = load i32, ptr %436, align 8
  %438 = add nsw i32 %437, -1
  store i32 %438, ptr %436, align 8
  %439 = load ptr, ptr %3, align 8
  %440 = getelementptr inbounds %struct.DState, ptr %439, i32 0, i32 5
  %441 = load i32, ptr %440, align 8
  %442 = icmp eq i32 %441, 1
  %443 = select i1 %442, i32 1, i32 0
  %444 = load i8, ptr %4, align 1
  %445 = zext i8 %444 to i32
  %446 = xor i32 %445, %443
  %447 = trunc i32 %446 to i8
  store i8 %447, ptr %4, align 1
  %448 = load ptr, ptr %3, align 8
  %449 = getelementptr inbounds %struct.DState, ptr %448, i32 0, i32 17
  %450 = load i32, ptr %449, align 4
  %451 = add nsw i32 %450, 1
  store i32 %451, ptr %449, align 4
  %452 = load i8, ptr %4, align 1
  %453 = zext i8 %452 to i32
  %454 = add nsw i32 %453, 4
  %455 = load ptr, ptr %3, align 8
  %456 = getelementptr inbounds %struct.DState, ptr %455, i32 0, i32 3
  store i32 %454, ptr %456, align 8
  %457 = load ptr, ptr %3, align 8
  %458 = getelementptr inbounds %struct.DState, ptr %457, i32 0, i32 20
  %459 = load ptr, ptr %458, align 8
  %460 = load ptr, ptr %3, align 8
  %461 = getelementptr inbounds %struct.DState, ptr %460, i32 0, i32 14
  %462 = load i32, ptr %461, align 4
  %463 = zext i32 %462 to i64
  %464 = getelementptr inbounds i32, ptr %459, i64 %463
  %465 = load i32, ptr %464, align 4
  %466 = load ptr, ptr %3, align 8
  %467 = getelementptr inbounds %struct.DState, ptr %466, i32 0, i32 14
  store i32 %465, ptr %467, align 4
  %468 = load ptr, ptr %3, align 8
  %469 = getelementptr inbounds %struct.DState, ptr %468, i32 0, i32 14
  %470 = load i32, ptr %469, align 4
  %471 = and i32 %470, 255
  %472 = trunc i32 %471 to i8
  %473 = zext i8 %472 to i32
  %474 = load ptr, ptr %3, align 8
  %475 = getelementptr inbounds %struct.DState, ptr %474, i32 0, i32 15
  store i32 %473, ptr %475, align 8
  %476 = load ptr, ptr %3, align 8
  %477 = getelementptr inbounds %struct.DState, ptr %476, i32 0, i32 14
  %478 = load i32, ptr %477, align 4
  %479 = lshr i32 %478, 8
  store i32 %479, ptr %477, align 4
  %480 = load ptr, ptr %3, align 8
  %481 = getelementptr inbounds %struct.DState, ptr %480, i32 0, i32 5
  %482 = load i32, ptr %481, align 8
  %483 = icmp eq i32 %482, 0
  br i1 %483, label %484, label %505

484:                                              ; preds = %434
  %485 = load ptr, ptr %3, align 8
  %486 = getelementptr inbounds %struct.DState, ptr %485, i32 0, i32 6
  %487 = load i32, ptr %486, align 4
  %488 = sext i32 %487 to i64
  %489 = getelementptr inbounds [512 x i32], ptr @BZ2_rNums, i64 0, i64 %488
  %490 = load i32, ptr %489, align 4
  %491 = load ptr, ptr %3, align 8
  %492 = getelementptr inbounds %struct.DState, ptr %491, i32 0, i32 5
  store i32 %490, ptr %492, align 8
  %493 = load ptr, ptr %3, align 8
  %494 = getelementptr inbounds %struct.DState, ptr %493, i32 0, i32 6
  %495 = load i32, ptr %494, align 4
  %496 = add nsw i32 %495, 1
  store i32 %496, ptr %494, align 4
  %497 = load ptr, ptr %3, align 8
  %498 = getelementptr inbounds %struct.DState, ptr %497, i32 0, i32 6
  %499 = load i32, ptr %498, align 4
  %500 = icmp eq i32 %499, 512
  br i1 %500, label %501, label %504

501:                                              ; preds = %484
  %502 = load ptr, ptr %3, align 8
  %503 = getelementptr inbounds %struct.DState, ptr %502, i32 0, i32 6
  store i32 0, ptr %503, align 4
  br label %504

504:                                              ; preds = %501, %484
  br label %505

505:                                              ; preds = %504, %434
  %506 = load ptr, ptr %3, align 8
  %507 = getelementptr inbounds %struct.DState, ptr %506, i32 0, i32 5
  %508 = load i32, ptr %507, align 8
  %509 = add nsw i32 %508, -1
  store i32 %509, ptr %507, align 8
  %510 = load ptr, ptr %3, align 8
  %511 = getelementptr inbounds %struct.DState, ptr %510, i32 0, i32 5
  %512 = load i32, ptr %511, align 8
  %513 = icmp eq i32 %512, 1
  %514 = select i1 %513, i32 1, i32 0
  %515 = load ptr, ptr %3, align 8
  %516 = getelementptr inbounds %struct.DState, ptr %515, i32 0, i32 15
  %517 = load i32, ptr %516, align 8
  %518 = xor i32 %517, %514
  store i32 %518, ptr %516, align 8
  %519 = load ptr, ptr %3, align 8
  %520 = getelementptr inbounds %struct.DState, ptr %519, i32 0, i32 17
  %521 = load i32, ptr %520, align 4
  %522 = add nsw i32 %521, 1
  store i32 %522, ptr %520, align 4
  br label %.backedge

523:                                              ; preds = %1
  %524 = load ptr, ptr %3, align 8
  %525 = getelementptr inbounds %struct.DState, ptr %524, i32 0, i32 25
  %526 = load i32, ptr %525, align 8
  store i32 %526, ptr %5, align 4
  %527 = load ptr, ptr %3, align 8
  %528 = getelementptr inbounds %struct.DState, ptr %527, i32 0, i32 2
  %529 = load i8, ptr %528, align 4
  store i8 %529, ptr %6, align 1
  %530 = load ptr, ptr %3, align 8
  %531 = getelementptr inbounds %struct.DState, ptr %530, i32 0, i32 3
  %532 = load i32, ptr %531, align 8
  store i32 %532, ptr %7, align 4
  %533 = load ptr, ptr %3, align 8
  %534 = getelementptr inbounds %struct.DState, ptr %533, i32 0, i32 17
  %535 = load i32, ptr %534, align 4
  store i32 %535, ptr %8, align 4
  %536 = load ptr, ptr %3, align 8
  %537 = getelementptr inbounds %struct.DState, ptr %536, i32 0, i32 15
  %538 = load i32, ptr %537, align 8
  store i32 %538, ptr %9, align 4
  %539 = load ptr, ptr %3, align 8
  %540 = getelementptr inbounds %struct.DState, ptr %539, i32 0, i32 20
  %541 = load ptr, ptr %540, align 8
  store ptr %541, ptr %10, align 8
  %542 = load ptr, ptr %3, align 8
  %543 = getelementptr inbounds %struct.DState, ptr %542, i32 0, i32 14
  %544 = load i32, ptr %543, align 4
  store i32 %544, ptr %11, align 4
  %545 = load ptr, ptr %3, align 8
  %546 = getelementptr inbounds %struct.DState, ptr %545, i32 0, i32 0
  %547 = load ptr, ptr %546, align 8
  %548 = getelementptr inbounds %struct.bz_stream, ptr %547, i32 0, i32 4
  %549 = load ptr, ptr %548, align 8
  store ptr %549, ptr %12, align 8
  %550 = load ptr, ptr %3, align 8
  %551 = getelementptr inbounds %struct.DState, ptr %550, i32 0, i32 0
  %552 = load ptr, ptr %551, align 8
  %553 = getelementptr inbounds %struct.bz_stream, ptr %552, i32 0, i32 5
  %554 = load i32, ptr %553, align 8
  store i32 %554, ptr %13, align 4
  %555 = load i32, ptr %13, align 4
  store i32 %555, ptr %14, align 4
  %556 = load ptr, ptr %3, align 8
  %557 = getelementptr inbounds %struct.DState, ptr %556, i32 0, i32 51
  %558 = load i32, ptr %557, align 8
  %559 = add nsw i32 %558, 1
  store i32 %559, ptr %15, align 4
  br label %560

560:                                              ; preds = %.backedge1, %523
  %561 = load i32, ptr %7, align 4
  %562 = icmp sgt i32 %561, 0
  br i1 %562, label %563, label %615

563:                                              ; preds = %560
  %564 = load i32, ptr %13, align 4
  %565 = icmp eq i32 %564, 0
  br i1 %565, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %563
  br label %567

._crit_edge:                                      ; preds = %563
  br label %566

._crit_edge2:                                     ; preds = %571
  br label %566

566:                                              ; preds = %._crit_edge2, %._crit_edge
  br label %731

567:                                              ; preds = %.lr.ph, %571
  %568 = load i32, ptr %7, align 4
  %569 = icmp eq i32 %568, 1
  br i1 %569, label %570, label %571

570:                                              ; preds = %567
  br label %593

571:                                              ; preds = %567
  %572 = load i8, ptr %6, align 1
  %573 = load ptr, ptr %12, align 8
  store i8 %572, ptr %573, align 1
  %574 = load i32, ptr %5, align 4
  %575 = shl i32 %574, 8
  %576 = load i32, ptr %5, align 4
  %577 = lshr i32 %576, 24
  %578 = load i8, ptr %6, align 1
  %579 = zext i8 %578 to i32
  %580 = xor i32 %577, %579
  %581 = zext i32 %580 to i64
  %582 = getelementptr inbounds [256 x i32], ptr @BZ2_crc32Table, i64 0, i64 %581
  %583 = load i32, ptr %582, align 4
  %584 = xor i32 %575, %583
  store i32 %584, ptr %5, align 4
  %585 = load i32, ptr %7, align 4
  %586 = add nsw i32 %585, -1
  store i32 %586, ptr %7, align 4
  %587 = load ptr, ptr %12, align 8
  %588 = getelementptr inbounds i8, ptr %587, i32 1
  store ptr %588, ptr %12, align 8
  %589 = load i32, ptr %13, align 4
  %590 = add i32 %589, -1
  store i32 %590, ptr %13, align 4
  %591 = load i32, ptr %13, align 4
  %592 = icmp eq i32 %591, 0
  br i1 %592, label %._crit_edge2, label %567

593:                                              ; preds = %651, %644, %570
  %594 = load i32, ptr %13, align 4
  %595 = icmp eq i32 %594, 0
  br i1 %595, label %596, label %597

596:                                              ; preds = %593
  store i32 1, ptr %7, align 4
  br label %731

597:                                              ; preds = %593
  %598 = load i8, ptr %6, align 1
  %599 = load ptr, ptr %12, align 8
  store i8 %598, ptr %599, align 1
  %600 = load i32, ptr %5, align 4
  %601 = shl i32 %600, 8
  %602 = load i32, ptr %5, align 4
  %603 = lshr i32 %602, 24
  %604 = load i8, ptr %6, align 1
  %605 = zext i8 %604 to i32
  %606 = xor i32 %603, %605
  %607 = zext i32 %606 to i64
  %608 = getelementptr inbounds [256 x i32], ptr @BZ2_crc32Table, i64 0, i64 %607
  %609 = load i32, ptr %608, align 4
  %610 = xor i32 %601, %609
  store i32 %610, ptr %5, align 4
  %611 = load ptr, ptr %12, align 8
  %612 = getelementptr inbounds i8, ptr %611, i32 1
  store ptr %612, ptr %12, align 8
  %613 = load i32, ptr %13, align 4
  %614 = add i32 %613, -1
  store i32 %614, ptr %13, align 4
  br label %615

615:                                              ; preds = %597, %560
  %616 = load i32, ptr %8, align 4
  %617 = load i32, ptr %15, align 4
  %618 = icmp sgt i32 %616, %617
  br i1 %618, label %619, label %620

619:                                              ; preds = %615
  store i8 1, ptr %2, align 1
  br label %793

620:                                              ; preds = %615
  %621 = load i32, ptr %8, align 4
  %622 = load i32, ptr %15, align 4
  %623 = icmp eq i32 %621, %622
  br i1 %623, label %624, label %625

624:                                              ; preds = %620
  store i32 0, ptr %7, align 4
  br label %731

625:                                              ; preds = %620
  %626 = load i32, ptr %9, align 4
  %627 = trunc i32 %626 to i8
  store i8 %627, ptr %6, align 1
  %628 = load ptr, ptr %10, align 8
  %629 = load i32, ptr %11, align 4
  %630 = zext i32 %629 to i64
  %631 = getelementptr inbounds i32, ptr %628, i64 %630
  %632 = load i32, ptr %631, align 4
  store i32 %632, ptr %11, align 4
  %633 = load i32, ptr %11, align 4
  %634 = and i32 %633, 255
  %635 = trunc i32 %634 to i8
  store i8 %635, ptr %4, align 1
  %636 = load i32, ptr %11, align 4
  %637 = lshr i32 %636, 8
  store i32 %637, ptr %11, align 4
  %638 = load i32, ptr %8, align 4
  %639 = add nsw i32 %638, 1
  store i32 %639, ptr %8, align 4
  %640 = load i8, ptr %4, align 1
  %641 = zext i8 %640 to i32
  %642 = load i32, ptr %9, align 4
  %643 = icmp ne i32 %641, %642
  br i1 %643, label %644, label %647

644:                                              ; preds = %625
  %645 = load i8, ptr %4, align 1
  %646 = zext i8 %645 to i32
  store i32 %646, ptr %9, align 4
  br label %593

647:                                              ; preds = %625
  %648 = load i32, ptr %8, align 4
  %649 = load i32, ptr %15, align 4
  %650 = icmp eq i32 %648, %649
  br i1 %650, label %651, label %652

651:                                              ; preds = %647
  br label %593

652:                                              ; preds = %647
  store i32 2, ptr %7, align 4
  %653 = load ptr, ptr %10, align 8
  %654 = load i32, ptr %11, align 4
  %655 = zext i32 %654 to i64
  %656 = getelementptr inbounds i32, ptr %653, i64 %655
  %657 = load i32, ptr %656, align 4
  store i32 %657, ptr %11, align 4
  %658 = load i32, ptr %11, align 4
  %659 = and i32 %658, 255
  %660 = trunc i32 %659 to i8
  store i8 %660, ptr %4, align 1
  %661 = load i32, ptr %11, align 4
  %662 = lshr i32 %661, 8
  store i32 %662, ptr %11, align 4
  %663 = load i32, ptr %8, align 4
  %664 = add nsw i32 %663, 1
  store i32 %664, ptr %8, align 4
  %665 = load i32, ptr %8, align 4
  %666 = load i32, ptr %15, align 4
  %667 = icmp eq i32 %665, %666
  br i1 %667, label %668, label %669

668:                                              ; preds = %652
  br label %.backedge1

.backedge1:                                       ; preds = %668, %674, %693, %699, %702
  br label %560

669:                                              ; preds = %652
  %670 = load i8, ptr %4, align 1
  %671 = zext i8 %670 to i32
  %672 = load i32, ptr %9, align 4
  %673 = icmp ne i32 %671, %672
  br i1 %673, label %674, label %677

674:                                              ; preds = %669
  %675 = load i8, ptr %4, align 1
  %676 = zext i8 %675 to i32
  store i32 %676, ptr %9, align 4
  br label %.backedge1

677:                                              ; preds = %669
  store i32 3, ptr %7, align 4
  %678 = load ptr, ptr %10, align 8
  %679 = load i32, ptr %11, align 4
  %680 = zext i32 %679 to i64
  %681 = getelementptr inbounds i32, ptr %678, i64 %680
  %682 = load i32, ptr %681, align 4
  store i32 %682, ptr %11, align 4
  %683 = load i32, ptr %11, align 4
  %684 = and i32 %683, 255
  %685 = trunc i32 %684 to i8
  store i8 %685, ptr %4, align 1
  %686 = load i32, ptr %11, align 4
  %687 = lshr i32 %686, 8
  store i32 %687, ptr %11, align 4
  %688 = load i32, ptr %8, align 4
  %689 = add nsw i32 %688, 1
  store i32 %689, ptr %8, align 4
  %690 = load i32, ptr %8, align 4
  %691 = load i32, ptr %15, align 4
  %692 = icmp eq i32 %690, %691
  br i1 %692, label %693, label %694

693:                                              ; preds = %677
  br label %.backedge1

694:                                              ; preds = %677
  %695 = load i8, ptr %4, align 1
  %696 = zext i8 %695 to i32
  %697 = load i32, ptr %9, align 4
  %698 = icmp ne i32 %696, %697
  br i1 %698, label %699, label %702

699:                                              ; preds = %694
  %700 = load i8, ptr %4, align 1
  %701 = zext i8 %700 to i32
  store i32 %701, ptr %9, align 4
  br label %.backedge1

702:                                              ; preds = %694
  %703 = load ptr, ptr %10, align 8
  %704 = load i32, ptr %11, align 4
  %705 = zext i32 %704 to i64
  %706 = getelementptr inbounds i32, ptr %703, i64 %705
  %707 = load i32, ptr %706, align 4
  store i32 %707, ptr %11, align 4
  %708 = load i32, ptr %11, align 4
  %709 = and i32 %708, 255
  %710 = trunc i32 %709 to i8
  store i8 %710, ptr %4, align 1
  %711 = load i32, ptr %11, align 4
  %712 = lshr i32 %711, 8
  store i32 %712, ptr %11, align 4
  %713 = load i32, ptr %8, align 4
  %714 = add nsw i32 %713, 1
  store i32 %714, ptr %8, align 4
  %715 = load i8, ptr %4, align 1
  %716 = zext i8 %715 to i32
  %717 = add nsw i32 %716, 4
  store i32 %717, ptr %7, align 4
  %718 = load ptr, ptr %10, align 8
  %719 = load i32, ptr %11, align 4
  %720 = zext i32 %719 to i64
  %721 = getelementptr inbounds i32, ptr %718, i64 %720
  %722 = load i32, ptr %721, align 4
  store i32 %722, ptr %11, align 4
  %723 = load i32, ptr %11, align 4
  %724 = and i32 %723, 255
  %725 = trunc i32 %724 to i8
  %726 = zext i8 %725 to i32
  store i32 %726, ptr %9, align 4
  %727 = load i32, ptr %11, align 4
  %728 = lshr i32 %727, 8
  store i32 %728, ptr %11, align 4
  %729 = load i32, ptr %8, align 4
  %730 = add nsw i32 %729, 1
  store i32 %730, ptr %8, align 4
  br label %.backedge1

731:                                              ; preds = %624, %596, %566
  %732 = load ptr, ptr %3, align 8
  %733 = getelementptr inbounds %struct.DState, ptr %732, i32 0, i32 0
  %734 = load ptr, ptr %733, align 8
  %735 = getelementptr inbounds %struct.bz_stream, ptr %734, i32 0, i32 6
  %736 = load i32, ptr %735, align 4
  store i32 %736, ptr %16, align 4
  %737 = load i32, ptr %14, align 4
  %738 = load i32, ptr %13, align 4
  %739 = sub i32 %737, %738
  %740 = load ptr, ptr %3, align 8
  %741 = getelementptr inbounds %struct.DState, ptr %740, i32 0, i32 0
  %742 = load ptr, ptr %741, align 8
  %743 = getelementptr inbounds %struct.bz_stream, ptr %742, i32 0, i32 6
  %744 = load i32, ptr %743, align 4
  %745 = add i32 %744, %739
  store i32 %745, ptr %743, align 4
  %746 = load ptr, ptr %3, align 8
  %747 = getelementptr inbounds %struct.DState, ptr %746, i32 0, i32 0
  %748 = load ptr, ptr %747, align 8
  %749 = getelementptr inbounds %struct.bz_stream, ptr %748, i32 0, i32 6
  %750 = load i32, ptr %749, align 4
  %751 = load i32, ptr %16, align 4
  %752 = icmp ult i32 %750, %751
  br i1 %752, label %753, label %760

753:                                              ; preds = %731
  %754 = load ptr, ptr %3, align 8
  %755 = getelementptr inbounds %struct.DState, ptr %754, i32 0, i32 0
  %756 = load ptr, ptr %755, align 8
  %757 = getelementptr inbounds %struct.bz_stream, ptr %756, i32 0, i32 7
  %758 = load i32, ptr %757, align 8
  %759 = add i32 %758, 1
  store i32 %759, ptr %757, align 8
  br label %760

760:                                              ; preds = %753, %731
  %761 = load i32, ptr %5, align 4
  %762 = load ptr, ptr %3, align 8
  %763 = getelementptr inbounds %struct.DState, ptr %762, i32 0, i32 25
  store i32 %761, ptr %763, align 8
  %764 = load i8, ptr %6, align 1
  %765 = load ptr, ptr %3, align 8
  %766 = getelementptr inbounds %struct.DState, ptr %765, i32 0, i32 2
  store i8 %764, ptr %766, align 4
  %767 = load i32, ptr %7, align 4
  %768 = load ptr, ptr %3, align 8
  %769 = getelementptr inbounds %struct.DState, ptr %768, i32 0, i32 3
  store i32 %767, ptr %769, align 8
  %770 = load i32, ptr %8, align 4
  %771 = load ptr, ptr %3, align 8
  %772 = getelementptr inbounds %struct.DState, ptr %771, i32 0, i32 17
  store i32 %770, ptr %772, align 4
  %773 = load i32, ptr %9, align 4
  %774 = load ptr, ptr %3, align 8
  %775 = getelementptr inbounds %struct.DState, ptr %774, i32 0, i32 15
  store i32 %773, ptr %775, align 8
  %776 = load ptr, ptr %10, align 8
  %777 = load ptr, ptr %3, align 8
  %778 = getelementptr inbounds %struct.DState, ptr %777, i32 0, i32 20
  store ptr %776, ptr %778, align 8
  %779 = load i32, ptr %11, align 4
  %780 = load ptr, ptr %3, align 8
  %781 = getelementptr inbounds %struct.DState, ptr %780, i32 0, i32 14
  store i32 %779, ptr %781, align 4
  %782 = load ptr, ptr %12, align 8
  %783 = load ptr, ptr %3, align 8
  %784 = getelementptr inbounds %struct.DState, ptr %783, i32 0, i32 0
  %785 = load ptr, ptr %784, align 8
  %786 = getelementptr inbounds %struct.bz_stream, ptr %785, i32 0, i32 4
  store ptr %782, ptr %786, align 8
  %787 = load i32, ptr %13, align 4
  %788 = load ptr, ptr %3, align 8
  %789 = getelementptr inbounds %struct.DState, ptr %788, i32 0, i32 0
  %790 = load ptr, ptr %789, align 8
  %791 = getelementptr inbounds %struct.bz_stream, ptr %790, i32 0, i32 5
  store i32 %787, ptr %791, align 8
  br label %792

792:                                              ; preds = %760
  store i8 0, ptr %2, align 1
  br label %793

793:                                              ; preds = %792, %619, %115, %105, %27
  %794 = load i8, ptr %2, align 1
  ret i8 %794
}

declare i32 @BZ2_decompress(ptr noundef) #3

; Function Attrs: noinline nounwind ssp uwtable(sync)
define i32 @BZ2_bzDecompressEnd(ptr noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  %5 = load ptr, ptr %3, align 8
  %6 = icmp eq ptr %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %1
  store i32 -2, ptr %2, align 4
  br label %79

8:                                                ; preds = %1
  %9 = load ptr, ptr %3, align 8
  %10 = getelementptr inbounds %struct.bz_stream, ptr %9, i32 0, i32 8
  %11 = load ptr, ptr %10, align 8
  store ptr %11, ptr %4, align 8
  %12 = load ptr, ptr %4, align 8
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %8
  store i32 -2, ptr %2, align 4
  br label %79

15:                                               ; preds = %8
  %16 = load ptr, ptr %4, align 8
  %17 = getelementptr inbounds %struct.DState, ptr %16, i32 0, i32 0
  %18 = load ptr, ptr %17, align 8
  %19 = load ptr, ptr %3, align 8
  %20 = icmp ne ptr %18, %19
  br i1 %20, label %21, label %22

21:                                               ; preds = %15
  store i32 -2, ptr %2, align 4
  br label %79

22:                                               ; preds = %15
  %23 = load ptr, ptr %4, align 8
  %24 = getelementptr inbounds %struct.DState, ptr %23, i32 0, i32 20
  %25 = load ptr, ptr %24, align 8
  %26 = icmp ne ptr %25, null
  br i1 %26, label %27, label %37

27:                                               ; preds = %22
  %28 = load ptr, ptr %3, align 8
  %29 = getelementptr inbounds %struct.bz_stream, ptr %28, i32 0, i32 10
  %30 = load ptr, ptr %29, align 8
  %31 = load ptr, ptr %3, align 8
  %32 = getelementptr inbounds %struct.bz_stream, ptr %31, i32 0, i32 11
  %33 = load ptr, ptr %32, align 8
  %34 = load ptr, ptr %4, align 8
  %35 = getelementptr inbounds %struct.DState, ptr %34, i32 0, i32 20
  %36 = load ptr, ptr %35, align 8
  tail call void %30(ptr noundef %33, ptr noundef %36)
  br label %37

37:                                               ; preds = %27, %22
  %38 = load ptr, ptr %4, align 8
  %39 = getelementptr inbounds %struct.DState, ptr %38, i32 0, i32 21
  %40 = load ptr, ptr %39, align 8
  %41 = icmp ne ptr %40, null
  br i1 %41, label %42, label %52

42:                                               ; preds = %37
  %43 = load ptr, ptr %3, align 8
  %44 = getelementptr inbounds %struct.bz_stream, ptr %43, i32 0, i32 10
  %45 = load ptr, ptr %44, align 8
  %46 = load ptr, ptr %3, align 8
  %47 = getelementptr inbounds %struct.bz_stream, ptr %46, i32 0, i32 11
  %48 = load ptr, ptr %47, align 8
  %49 = load ptr, ptr %4, align 8
  %50 = getelementptr inbounds %struct.DState, ptr %49, i32 0, i32 21
  %51 = load ptr, ptr %50, align 8
  tail call void %45(ptr noundef %48, ptr noundef %51)
  br label %52

52:                                               ; preds = %42, %37
  %53 = load ptr, ptr %4, align 8
  %54 = getelementptr inbounds %struct.DState, ptr %53, i32 0, i32 22
  %55 = load ptr, ptr %54, align 8
  %56 = icmp ne ptr %55, null
  br i1 %56, label %57, label %67

57:                                               ; preds = %52
  %58 = load ptr, ptr %3, align 8
  %59 = getelementptr inbounds %struct.bz_stream, ptr %58, i32 0, i32 10
  %60 = load ptr, ptr %59, align 8
  %61 = load ptr, ptr %3, align 8
  %62 = getelementptr inbounds %struct.bz_stream, ptr %61, i32 0, i32 11
  %63 = load ptr, ptr %62, align 8
  %64 = load ptr, ptr %4, align 8
  %65 = getelementptr inbounds %struct.DState, ptr %64, i32 0, i32 22
  %66 = load ptr, ptr %65, align 8
  tail call void %60(ptr noundef %63, ptr noundef %66)
  br label %67

67:                                               ; preds = %57, %52
  %68 = load ptr, ptr %3, align 8
  %69 = getelementptr inbounds %struct.bz_stream, ptr %68, i32 0, i32 10
  %70 = load ptr, ptr %69, align 8
  %71 = load ptr, ptr %3, align 8
  %72 = getelementptr inbounds %struct.bz_stream, ptr %71, i32 0, i32 11
  %73 = load ptr, ptr %72, align 8
  %74 = load ptr, ptr %3, align 8
  %75 = getelementptr inbounds %struct.bz_stream, ptr %74, i32 0, i32 8
  %76 = load ptr, ptr %75, align 8
  tail call void %70(ptr noundef %73, ptr noundef %76)
  %77 = load ptr, ptr %3, align 8
  %78 = getelementptr inbounds %struct.bz_stream, ptr %77, i32 0, i32 8
  store ptr null, ptr %78, align 8
  store i32 0, ptr %2, align 4
  br label %79

79:                                               ; preds = %67, %21, %14, %7
  %80 = load i32, ptr %2, align 4
  ret i32 %80
}

; Function Attrs: noinline nounwind ssp uwtable(sync)
define ptr @BZ2_bzWriteOpen(ptr noundef %0, ptr noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) #0 {
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca ptr, align 8
  store ptr %0, ptr %7, align 8
  store ptr %1, ptr %8, align 8
  store i32 %2, ptr %9, align 4
  store i32 %3, ptr %10, align 4
  store i32 %4, ptr %11, align 4
  store ptr null, ptr %13, align 8
  %14 = load ptr, ptr %7, align 8
  %15 = icmp ne ptr %14, null
  br i1 %15, label %16, label %18

16:                                               ; preds = %5
  %17 = load ptr, ptr %7, align 8
  store i32 0, ptr %17, align 4
  br label %18

18:                                               ; preds = %16, %5
  %19 = load ptr, ptr %13, align 8
  %20 = icmp ne ptr %19, null
  br i1 %20, label %21, label %24

21:                                               ; preds = %18
  %22 = load ptr, ptr %13, align 8
  %23 = getelementptr inbounds %struct.bzFile, ptr %22, i32 0, i32 5
  store i32 0, ptr %23, align 8
  br label %24

24:                                               ; preds = %21, %18
  %25 = load ptr, ptr %8, align 8
  %26 = icmp eq ptr %25, null
  br i1 %26, label %45, label %27

27:                                               ; preds = %24
  %28 = load i32, ptr %9, align 4
  %29 = icmp slt i32 %28, 1
  br i1 %29, label %45, label %30

30:                                               ; preds = %27
  %31 = load i32, ptr %9, align 4
  %32 = icmp sgt i32 %31, 9
  br i1 %32, label %45, label %33

33:                                               ; preds = %30
  %34 = load i32, ptr %11, align 4
  %35 = icmp slt i32 %34, 0
  br i1 %35, label %45, label %36

36:                                               ; preds = %33
  %37 = load i32, ptr %11, align 4
  %38 = icmp sgt i32 %37, 250
  br i1 %38, label %45, label %39

39:                                               ; preds = %36
  %40 = load i32, ptr %10, align 4
  %41 = icmp slt i32 %40, 0
  br i1 %41, label %45, label %42

42:                                               ; preds = %39
  %43 = load i32, ptr %10, align 4
  %44 = icmp sgt i32 %43, 4
  br i1 %44, label %45, label %57

45:                                               ; preds = %42, %39, %36, %33, %30, %27, %24
  %46 = load ptr, ptr %7, align 8
  %47 = icmp ne ptr %46, null
  br i1 %47, label %48, label %50

48:                                               ; preds = %45
  %49 = load ptr, ptr %7, align 8
  store i32 -2, ptr %49, align 4
  br label %50

50:                                               ; preds = %48, %45
  %51 = load ptr, ptr %13, align 8
  %52 = icmp ne ptr %51, null
  br i1 %52, label %53, label %56

53:                                               ; preds = %50
  %54 = load ptr, ptr %13, align 8
  %55 = getelementptr inbounds %struct.bzFile, ptr %54, i32 0, i32 5
  store i32 -2, ptr %55, align 8
  br label %56

56:                                               ; preds = %53, %50
  store ptr null, ptr %6, align 8
  br label %153

57:                                               ; preds = %42
  %58 = load ptr, ptr %8, align 8
  %59 = tail call i32 @ferror(ptr noundef %58)
  %60 = icmp ne i32 %59, 0
  br i1 %60, label %61, label %73

61:                                               ; preds = %57
  %62 = load ptr, ptr %7, align 8
  %63 = icmp ne ptr %62, null
  br i1 %63, label %64, label %66

64:                                               ; preds = %61
  %65 = load ptr, ptr %7, align 8
  store i32 -6, ptr %65, align 4
  br label %66

66:                                               ; preds = %64, %61
  %67 = load ptr, ptr %13, align 8
  %68 = icmp ne ptr %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %66
  %70 = load ptr, ptr %13, align 8
  %71 = getelementptr inbounds %struct.bzFile, ptr %70, i32 0, i32 5
  store i32 -6, ptr %71, align 8
  br label %72

72:                                               ; preds = %69, %66
  store ptr null, ptr %6, align 8
  br label %153

73:                                               ; preds = %57
  %74 = tail call ptr @malloc(i64 noundef 5104) #9
  store ptr %74, ptr %13, align 8
  %75 = load ptr, ptr %13, align 8
  %76 = icmp eq ptr %75, null
  br i1 %76, label %77, label %89

77:                                               ; preds = %73
  %78 = load ptr, ptr %7, align 8
  %79 = icmp ne ptr %78, null
  br i1 %79, label %80, label %82

80:                                               ; preds = %77
  %81 = load ptr, ptr %7, align 8
  store i32 -3, ptr %81, align 4
  br label %82

82:                                               ; preds = %80, %77
  %83 = load ptr, ptr %13, align 8
  %84 = icmp ne ptr %83, null
  br i1 %84, label %85, label %88

85:                                               ; preds = %82
  %86 = load ptr, ptr %13, align 8
  %87 = getelementptr inbounds %struct.bzFile, ptr %86, i32 0, i32 5
  store i32 -3, ptr %87, align 8
  br label %88

88:                                               ; preds = %85, %82
  store ptr null, ptr %6, align 8
  br label %153

89:                                               ; preds = %73
  %90 = load ptr, ptr %7, align 8
  %91 = icmp ne ptr %90, null
  br i1 %91, label %92, label %94

92:                                               ; preds = %89
  %93 = load ptr, ptr %7, align 8
  store i32 0, ptr %93, align 4
  br label %94

94:                                               ; preds = %92, %89
  %95 = load ptr, ptr %13, align 8
  %96 = icmp ne ptr %95, null
  br i1 %96, label %97, label %100

97:                                               ; preds = %94
  %98 = load ptr, ptr %13, align 8
  %99 = getelementptr inbounds %struct.bzFile, ptr %98, i32 0, i32 5
  store i32 0, ptr %99, align 8
  br label %100

100:                                              ; preds = %97, %94
  %101 = load ptr, ptr %13, align 8
  %102 = getelementptr inbounds %struct.bzFile, ptr %101, i32 0, i32 6
  store i8 0, ptr %102, align 4
  %103 = load ptr, ptr %13, align 8
  %104 = getelementptr inbounds %struct.bzFile, ptr %103, i32 0, i32 2
  store i32 0, ptr %104, align 8
  %105 = load ptr, ptr %8, align 8
  %106 = load ptr, ptr %13, align 8
  %107 = getelementptr inbounds %struct.bzFile, ptr %106, i32 0, i32 0
  store ptr %105, ptr %107, align 8
  %108 = load ptr, ptr %13, align 8
  %109 = getelementptr inbounds %struct.bzFile, ptr %108, i32 0, i32 3
  store i8 1, ptr %109, align 4
  %110 = load ptr, ptr %13, align 8
  %111 = getelementptr inbounds %struct.bzFile, ptr %110, i32 0, i32 4
  %112 = getelementptr inbounds %struct.bz_stream, ptr %111, i32 0, i32 9
  store ptr null, ptr %112, align 8
  %113 = load ptr, ptr %13, align 8
  %114 = getelementptr inbounds %struct.bzFile, ptr %113, i32 0, i32 4
  %115 = getelementptr inbounds %struct.bz_stream, ptr %114, i32 0, i32 10
  store ptr null, ptr %115, align 8
  %116 = load ptr, ptr %13, align 8
  %117 = getelementptr inbounds %struct.bzFile, ptr %116, i32 0, i32 4
  %118 = getelementptr inbounds %struct.bz_stream, ptr %117, i32 0, i32 11
  store ptr null, ptr %118, align 8
  %119 = load i32, ptr %11, align 4
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %100
  store i32 30, ptr %11, align 4
  br label %122

122:                                              ; preds = %121, %100
  %123 = load ptr, ptr %13, align 8
  %124 = getelementptr inbounds %struct.bzFile, ptr %123, i32 0, i32 4
  %125 = load i32, ptr %9, align 4
  %126 = load i32, ptr %10, align 4
  %127 = load i32, ptr %11, align 4
  %128 = tail call i32 @BZ2_bzCompressInit(ptr noundef %124, i32 noundef %125, i32 noundef %126, i32 noundef %127)
  store i32 %128, ptr %12, align 4
  %129 = load i32, ptr %12, align 4
  %130 = icmp ne i32 %129, 0
  br i1 %130, label %131, label %146

131:                                              ; preds = %122
  %132 = load ptr, ptr %7, align 8
  %133 = icmp ne ptr %132, null
  br i1 %133, label %134, label %137

134:                                              ; preds = %131
  %135 = load i32, ptr %12, align 4
  %136 = load ptr, ptr %7, align 8
  store i32 %135, ptr %136, align 4
  br label %137

137:                                              ; preds = %134, %131
  %138 = load ptr, ptr %13, align 8
  %139 = icmp ne ptr %138, null
  br i1 %139, label %140, label %144

140:                                              ; preds = %137
  %141 = load i32, ptr %12, align 4
  %142 = load ptr, ptr %13, align 8
  %143 = getelementptr inbounds %struct.bzFile, ptr %142, i32 0, i32 5
  store i32 %141, ptr %143, align 8
  br label %144

144:                                              ; preds = %140, %137
  %145 = load ptr, ptr %13, align 8
  tail call void @free(ptr noundef %145)
  store ptr null, ptr %6, align 8
  br label %153

146:                                              ; preds = %122
  %147 = load ptr, ptr %13, align 8
  %148 = getelementptr inbounds %struct.bzFile, ptr %147, i32 0, i32 4
  %149 = getelementptr inbounds %struct.bz_stream, ptr %148, i32 0, i32 1
  store i32 0, ptr %149, align 8
  %150 = load ptr, ptr %13, align 8
  %151 = getelementptr inbounds %struct.bzFile, ptr %150, i32 0, i32 6
  store i8 1, ptr %151, align 4
  %152 = load ptr, ptr %13, align 8
  store ptr %152, ptr %6, align 8
  br label %153

153:                                              ; preds = %146, %144, %88, %72, %56
  %154 = load ptr, ptr %6, align 8
  ret ptr %154
}

declare i32 @ferror(ptr noundef) #3

; Function Attrs: allocsize(0)
declare ptr @malloc(i64 noundef) #4

declare void @free(ptr noundef) #3

; Function Attrs: noinline nounwind ssp uwtable(sync)
define void @BZ2_bzWrite(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3) #0 {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca ptr, align 8
  store ptr %0, ptr %5, align 8
  store ptr %1, ptr %6, align 8
  store ptr %2, ptr %7, align 8
  store i32 %3, ptr %8, align 4
  %13 = load ptr, ptr %6, align 8
  store ptr %13, ptr %12, align 8
  %14 = load ptr, ptr %5, align 8
  %15 = icmp ne ptr %14, null
  br i1 %15, label %16, label %18

16:                                               ; preds = %4
  %17 = load ptr, ptr %5, align 8
  store i32 0, ptr %17, align 4
  br label %18

18:                                               ; preds = %16, %4
  %19 = load ptr, ptr %12, align 8
  %20 = icmp ne ptr %19, null
  br i1 %20, label %21, label %24

21:                                               ; preds = %18
  %22 = load ptr, ptr %12, align 8
  %23 = getelementptr inbounds %struct.bzFile, ptr %22, i32 0, i32 5
  store i32 0, ptr %23, align 8
  br label %24

24:                                               ; preds = %21, %18
  %25 = load ptr, ptr %12, align 8
  %26 = icmp eq ptr %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = load ptr, ptr %7, align 8
  %29 = icmp eq ptr %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %27
  %31 = load i32, ptr %8, align 4
  %32 = icmp slt i32 %31, 0
  br i1 %32, label %33, label %45

33:                                               ; preds = %30, %27, %24
  %34 = load ptr, ptr %5, align 8
  %35 = icmp ne ptr %34, null
  br i1 %35, label %36, label %38

36:                                               ; preds = %33
  %37 = load ptr, ptr %5, align 8
  store i32 -2, ptr %37, align 4
  br label %38

38:                                               ; preds = %36, %33
  %39 = load ptr, ptr %12, align 8
  %40 = icmp ne ptr %39, null
  br i1 %40, label %41, label %44

41:                                               ; preds = %38
  %42 = load ptr, ptr %12, align 8
  %43 = getelementptr inbounds %struct.bzFile, ptr %42, i32 0, i32 5
  store i32 -2, ptr %43, align 8
  br label %44

44:                                               ; preds = %41, %38
  br label %204

45:                                               ; preds = %30
  %46 = load ptr, ptr %12, align 8
  %47 = getelementptr inbounds %struct.bzFile, ptr %46, i32 0, i32 3
  %48 = load i8, ptr %47, align 4
  %49 = icmp ne i8 %48, 0
  br i1 %49, label %62, label %50

50:                                               ; preds = %45
  %51 = load ptr, ptr %5, align 8
  %52 = icmp ne ptr %51, null
  br i1 %52, label %53, label %55

53:                                               ; preds = %50
  %54 = load ptr, ptr %5, align 8
  store i32 -1, ptr %54, align 4
  br label %55

55:                                               ; preds = %53, %50
  %56 = load ptr, ptr %12, align 8
  %57 = icmp ne ptr %56, null
  br i1 %57, label %58, label %61

58:                                               ; preds = %55
  %59 = load ptr, ptr %12, align 8
  %60 = getelementptr inbounds %struct.bzFile, ptr %59, i32 0, i32 5
  store i32 -1, ptr %60, align 8
  br label %61

61:                                               ; preds = %58, %55
  br label %204

62:                                               ; preds = %45
  %63 = load ptr, ptr %12, align 8
  %64 = getelementptr inbounds %struct.bzFile, ptr %63, i32 0, i32 0
  %65 = load ptr, ptr %64, align 8
  %66 = tail call i32 @ferror(ptr noundef %65)
  %67 = icmp ne i32 %66, 0
  br i1 %67, label %68, label %80

68:                                               ; preds = %62
  %69 = load ptr, ptr %5, align 8
  %70 = icmp ne ptr %69, null
  br i1 %70, label %71, label %73

71:                                               ; preds = %68
  %72 = load ptr, ptr %5, align 8
  store i32 -6, ptr %72, align 4
  br label %73

73:                                               ; preds = %71, %68
  %74 = load ptr, ptr %12, align 8
  %75 = icmp ne ptr %74, null
  br i1 %75, label %76, label %79

76:                                               ; preds = %73
  %77 = load ptr, ptr %12, align 8
  %78 = getelementptr inbounds %struct.bzFile, ptr %77, i32 0, i32 5
  store i32 -6, ptr %78, align 8
  br label %79

79:                                               ; preds = %76, %73
  br label %204

80:                                               ; preds = %62
  %81 = load i32, ptr %8, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %95

83:                                               ; preds = %80
  %84 = load ptr, ptr %5, align 8
  %85 = icmp ne ptr %84, null
  br i1 %85, label %86, label %88

86:                                               ; preds = %83
  %87 = load ptr, ptr %5, align 8
  store i32 0, ptr %87, align 4
  br label %88

88:                                               ; preds = %86, %83
  %89 = load ptr, ptr %12, align 8
  %90 = icmp ne ptr %89, null
  br i1 %90, label %91, label %94

91:                                               ; preds = %88
  %92 = load ptr, ptr %12, align 8
  %93 = getelementptr inbounds %struct.bzFile, ptr %92, i32 0, i32 5
  store i32 0, ptr %93, align 8
  br label %94

94:                                               ; preds = %91, %88
  br label %204

95:                                               ; preds = %80
  %96 = load i32, ptr %8, align 4
  %97 = load ptr, ptr %12, align 8
  %98 = getelementptr inbounds %struct.bzFile, ptr %97, i32 0, i32 4
  %99 = getelementptr inbounds %struct.bz_stream, ptr %98, i32 0, i32 1
  store i32 %96, ptr %99, align 8
  %100 = load ptr, ptr %7, align 8
  %101 = load ptr, ptr %12, align 8
  %102 = getelementptr inbounds %struct.bzFile, ptr %101, i32 0, i32 4
  %103 = getelementptr inbounds %struct.bz_stream, ptr %102, i32 0, i32 0
  store ptr %100, ptr %103, align 8
  %104 = load ptr, ptr %12, align 8
  %105 = getelementptr inbounds %struct.bzFile, ptr %104, i32 0, i32 4
  %106 = getelementptr inbounds %struct.bz_stream, ptr %105, i32 0, i32 5
  store i32 5000, ptr %106, align 8
  %107 = load ptr, ptr %12, align 8
  %108 = getelementptr inbounds %struct.bzFile, ptr %107, i32 0, i32 1
  %109 = load ptr, ptr %12, align 8
  %110 = getelementptr inbounds %struct.bzFile, ptr %109, i32 0, i32 4
  %111 = getelementptr inbounds %struct.bz_stream, ptr %110, i32 0, i32 4
  store ptr %108, ptr %111, align 8
  %112 = load ptr, ptr %12, align 8
  %113 = getelementptr inbounds %struct.bzFile, ptr %112, i32 0, i32 4
  %114 = tail call i32 @BZ2_bzCompress(ptr noundef %113, i32 noundef 0)
  store i32 %114, ptr %11, align 4
  %115 = load i32, ptr %11, align 4
  %116 = icmp ne i32 %115, 1
  br i1 %116, label %131, label %.lr.ph

.lr.ph:                                           ; preds = %95
  br label %145

117:                                              ; preds = %186
  %118 = load ptr, ptr %12, align 8
  %119 = getelementptr inbounds %struct.bzFile, ptr %118, i32 0, i32 4
  %120 = getelementptr inbounds %struct.bz_stream, ptr %119, i32 0, i32 5
  store i32 5000, ptr %120, align 8
  %121 = load ptr, ptr %12, align 8
  %122 = getelementptr inbounds %struct.bzFile, ptr %121, i32 0, i32 1
  %123 = load ptr, ptr %12, align 8
  %124 = getelementptr inbounds %struct.bzFile, ptr %123, i32 0, i32 4
  %125 = getelementptr inbounds %struct.bz_stream, ptr %124, i32 0, i32 4
  store ptr %122, ptr %125, align 8
  %126 = load ptr, ptr %12, align 8
  %127 = getelementptr inbounds %struct.bzFile, ptr %126, i32 0, i32 4
  %128 = tail call i32 @BZ2_bzCompress(ptr noundef %127, i32 noundef 0)
  store i32 %128, ptr %11, align 4
  %129 = load i32, ptr %11, align 4
  %130 = icmp ne i32 %129, 1
  br i1 %130, label %._crit_edge, label %145

._crit_edge:                                      ; preds = %117
  br label %131

131:                                              ; preds = %._crit_edge, %95
  %132 = load ptr, ptr %5, align 8
  %133 = icmp ne ptr %132, null
  br i1 %133, label %134, label %137

134:                                              ; preds = %131
  %135 = load i32, ptr %11, align 4
  %136 = load ptr, ptr %5, align 8
  store i32 %135, ptr %136, align 4
  br label %137

137:                                              ; preds = %134, %131
  %138 = load ptr, ptr %12, align 8
  %139 = icmp ne ptr %138, null
  br i1 %139, label %140, label %144

140:                                              ; preds = %137
  %141 = load i32, ptr %11, align 4
  %142 = load ptr, ptr %12, align 8
  %143 = getelementptr inbounds %struct.bzFile, ptr %142, i32 0, i32 5
  store i32 %141, ptr %143, align 8
  br label %144

144:                                              ; preds = %140, %137
  br label %204

145:                                              ; preds = %.lr.ph, %117
  %146 = load ptr, ptr %12, align 8
  %147 = getelementptr inbounds %struct.bzFile, ptr %146, i32 0, i32 4
  %148 = getelementptr inbounds %struct.bz_stream, ptr %147, i32 0, i32 5
  %149 = load i32, ptr %148, align 8
  %150 = icmp ult i32 %149, 5000
  br i1 %150, label %151, label %186

151:                                              ; preds = %145
  %152 = load ptr, ptr %12, align 8
  %153 = getelementptr inbounds %struct.bzFile, ptr %152, i32 0, i32 4
  %154 = getelementptr inbounds %struct.bz_stream, ptr %153, i32 0, i32 5
  %155 = load i32, ptr %154, align 8
  %156 = sub i32 5000, %155
  store i32 %156, ptr %9, align 4
  %157 = load ptr, ptr %12, align 8
  %158 = getelementptr inbounds %struct.bzFile, ptr %157, i32 0, i32 1
  %159 = load i32, ptr %9, align 4
  %160 = sext i32 %159 to i64
  %161 = load ptr, ptr %12, align 8
  %162 = load ptr, ptr %161, align 8
  %163 = tail call i64 @"\01_fwrite"(ptr noundef %158, i64 noundef 1, i64 noundef %160, ptr noundef %162)
  %164 = trunc i64 %163 to i32
  store i32 %164, ptr %10, align 4
  %165 = load i32, ptr %9, align 4
  %166 = load i32, ptr %10, align 4
  %167 = icmp ne i32 %165, %166
  br i1 %167, label %173, label %168

168:                                              ; preds = %151
  %169 = load ptr, ptr %12, align 8
  %170 = load ptr, ptr %169, align 8
  %171 = tail call i32 @ferror(ptr noundef %170)
  %172 = icmp ne i32 %171, 0
  br i1 %172, label %173, label %185

173:                                              ; preds = %168, %151
  %174 = load ptr, ptr %5, align 8
  %175 = icmp ne ptr %174, null
  br i1 %175, label %176, label %178

176:                                              ; preds = %173
  %177 = load ptr, ptr %5, align 8
  store i32 -6, ptr %177, align 4
  br label %178

178:                                              ; preds = %176, %173
  %179 = load ptr, ptr %12, align 8
  %180 = icmp ne ptr %179, null
  br i1 %180, label %181, label %184

181:                                              ; preds = %178
  %182 = load ptr, ptr %12, align 8
  %183 = getelementptr inbounds %struct.bzFile, ptr %182, i32 0, i32 5
  store i32 -6, ptr %183, align 8
  br label %184

184:                                              ; preds = %181, %178
  br label %204

185:                                              ; preds = %168
  br label %186

186:                                              ; preds = %185, %145
  %187 = load ptr, ptr %12, align 8
  %188 = getelementptr inbounds %struct.bzFile, ptr %187, i32 0, i32 4
  %189 = getelementptr inbounds %struct.bz_stream, ptr %188, i32 0, i32 1
  %190 = load i32, ptr %189, align 8
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %117

192:                                              ; preds = %186
  %193 = load ptr, ptr %5, align 8
  %194 = icmp ne ptr %193, null
  br i1 %194, label %195, label %197

195:                                              ; preds = %192
  %196 = load ptr, ptr %5, align 8
  store i32 0, ptr %196, align 4
  br label %197

197:                                              ; preds = %195, %192
  %198 = load ptr, ptr %12, align 8
  %199 = icmp ne ptr %198, null
  br i1 %199, label %200, label %203

200:                                              ; preds = %197
  %201 = load ptr, ptr %12, align 8
  %202 = getelementptr inbounds %struct.bzFile, ptr %201, i32 0, i32 5
  store i32 0, ptr %202, align 8
  br label %203

203:                                              ; preds = %200, %197
  br label %204

204:                                              ; preds = %203, %184, %144, %94, %79, %61, %44
  ret void
}

declare i64 @"\01_fwrite"(ptr noundef, i64 noundef, i64 noundef, ptr noundef) #3

; Function Attrs: noinline nounwind ssp uwtable(sync)
define void @BZ2_bzWriteClose(ptr noundef %0, ptr noundef %1, i32 noundef %2, ptr noundef %3, ptr noundef %4) #0 {
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca i32, align 4
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  store ptr %0, ptr %6, align 8
  store ptr %1, ptr %7, align 8
  store i32 %2, ptr %8, align 4
  store ptr %3, ptr %9, align 8
  store ptr %4, ptr %10, align 8
  %11 = load ptr, ptr %6, align 8
  %12 = load ptr, ptr %7, align 8
  %13 = load i32, ptr %8, align 4
  %14 = load ptr, ptr %9, align 8
  %15 = load ptr, ptr %10, align 8
  tail call void @BZ2_bzWriteClose64(ptr noundef %11, ptr noundef %12, i32 noundef %13, ptr noundef %14, ptr noundef null, ptr noundef %15, ptr noundef null)
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable(sync)
define void @BZ2_bzWriteClose64(ptr noundef %0, ptr noundef %1, i32 noundef %2, ptr noundef %3, ptr noundef %4, ptr noundef %5, ptr noundef %6) #0 {
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca i32, align 4
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  %14 = alloca ptr, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca ptr, align 8
  store ptr %0, ptr %8, align 8
  store ptr %1, ptr %9, align 8
  store i32 %2, ptr %10, align 4
  store ptr %3, ptr %11, align 8
  store ptr %4, ptr %12, align 8
  store ptr %5, ptr %13, align 8
  store ptr %6, ptr %14, align 8
  %19 = load ptr, ptr %9, align 8
  store ptr %19, ptr %18, align 8
  %20 = load ptr, ptr %18, align 8
  %21 = icmp eq ptr %20, null
  br i1 %21, label %22, label %34

22:                                               ; preds = %7
  %23 = load ptr, ptr %8, align 8
  %24 = icmp ne ptr %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %22
  %26 = load ptr, ptr %8, align 8
  store i32 0, ptr %26, align 4
  br label %27

27:                                               ; preds = %25, %22
  %28 = load ptr, ptr %18, align 8
  %29 = icmp ne ptr %28, null
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = load ptr, ptr %18, align 8
  %32 = getelementptr inbounds %struct.bzFile, ptr %31, i32 0, i32 5
  store i32 0, ptr %32, align 8
  br label %33

33:                                               ; preds = %30, %27
  br label %259

34:                                               ; preds = %7
  %35 = load ptr, ptr %18, align 8
  %36 = getelementptr inbounds %struct.bzFile, ptr %35, i32 0, i32 3
  %37 = load i8, ptr %36, align 4
  %38 = icmp ne i8 %37, 0
  br i1 %38, label %51, label %39

39:                                               ; preds = %34
  %40 = load ptr, ptr %8, align 8
  %41 = icmp ne ptr %40, null
  br i1 %41, label %42, label %44

42:                                               ; preds = %39
  %43 = load ptr, ptr %8, align 8
  store i32 -1, ptr %43, align 4
  br label %44

44:                                               ; preds = %42, %39
  %45 = load ptr, ptr %18, align 8
  %46 = icmp ne ptr %45, null
  br i1 %46, label %47, label %50

47:                                               ; preds = %44
  %48 = load ptr, ptr %18, align 8
  %49 = getelementptr inbounds %struct.bzFile, ptr %48, i32 0, i32 5
  store i32 -1, ptr %49, align 8
  br label %50

50:                                               ; preds = %47, %44
  br label %259

51:                                               ; preds = %34
  %52 = load ptr, ptr %18, align 8
  %53 = getelementptr inbounds %struct.bzFile, ptr %52, i32 0, i32 0
  %54 = load ptr, ptr %53, align 8
  %55 = tail call i32 @ferror(ptr noundef %54)
  %56 = icmp ne i32 %55, 0
  br i1 %56, label %57, label %69

57:                                               ; preds = %51
  %58 = load ptr, ptr %8, align 8
  %59 = icmp ne ptr %58, null
  br i1 %59, label %60, label %62

60:                                               ; preds = %57
  %61 = load ptr, ptr %8, align 8
  store i32 -6, ptr %61, align 4
  br label %62

62:                                               ; preds = %60, %57
  %63 = load ptr, ptr %18, align 8
  %64 = icmp ne ptr %63, null
  br i1 %64, label %65, label %68

65:                                               ; preds = %62
  %66 = load ptr, ptr %18, align 8
  %67 = getelementptr inbounds %struct.bzFile, ptr %66, i32 0, i32 5
  store i32 -6, ptr %67, align 8
  br label %68

68:                                               ; preds = %65, %62
  br label %259

69:                                               ; preds = %51
  %70 = load ptr, ptr %11, align 8
  %71 = icmp ne ptr %70, null
  br i1 %71, label %72, label %74

72:                                               ; preds = %69
  %73 = load ptr, ptr %11, align 8
  store i32 0, ptr %73, align 4
  br label %74

74:                                               ; preds = %72, %69
  %75 = load ptr, ptr %12, align 8
  %76 = icmp ne ptr %75, null
  br i1 %76, label %77, label %79

77:                                               ; preds = %74
  %78 = load ptr, ptr %12, align 8
  store i32 0, ptr %78, align 4
  br label %79

79:                                               ; preds = %77, %74
  %80 = load ptr, ptr %13, align 8
  %81 = icmp ne ptr %80, null
  br i1 %81, label %82, label %84

82:                                               ; preds = %79
  %83 = load ptr, ptr %13, align 8
  store i32 0, ptr %83, align 4
  br label %84

84:                                               ; preds = %82, %79
  %85 = load ptr, ptr %14, align 8
  %86 = icmp ne ptr %85, null
  br i1 %86, label %87, label %89

87:                                               ; preds = %84
  %88 = load ptr, ptr %14, align 8
  store i32 0, ptr %88, align 4
  br label %89

89:                                               ; preds = %87, %84
  %90 = load i32, ptr %10, align 4
  %91 = icmp ne i32 %90, 0
  br i1 %91, label %175, label %92

92:                                               ; preds = %89
  %93 = load ptr, ptr %18, align 8
  %94 = getelementptr inbounds %struct.bzFile, ptr %93, i32 0, i32 5
  %95 = load i32, ptr %94, align 8
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %175

97:                                               ; preds = %92
  br label %98

98:                                               ; preds = %170, %97
  %99 = load ptr, ptr %18, align 8
  %100 = getelementptr inbounds %struct.bzFile, ptr %99, i32 0, i32 4
  %101 = getelementptr inbounds %struct.bz_stream, ptr %100, i32 0, i32 5
  store i32 5000, ptr %101, align 8
  %102 = load ptr, ptr %18, align 8
  %103 = getelementptr inbounds %struct.bzFile, ptr %102, i32 0, i32 1
  %104 = load ptr, ptr %18, align 8
  %105 = getelementptr inbounds %struct.bzFile, ptr %104, i32 0, i32 4
  %106 = getelementptr inbounds %struct.bz_stream, ptr %105, i32 0, i32 4
  store ptr %103, ptr %106, align 8
  %107 = load ptr, ptr %18, align 8
  %108 = getelementptr inbounds %struct.bzFile, ptr %107, i32 0, i32 4
  %109 = tail call i32 @BZ2_bzCompress(ptr noundef %108, i32 noundef 2)
  store i32 %109, ptr %17, align 4
  %110 = load i32, ptr %17, align 4
  %111 = icmp ne i32 %110, 3
  br i1 %111, label %112, label %129

112:                                              ; preds = %98
  %113 = load i32, ptr %17, align 4
  %114 = icmp ne i32 %113, 4
  br i1 %114, label %115, label %129

115:                                              ; preds = %112
  %116 = load ptr, ptr %8, align 8
  %117 = icmp ne ptr %116, null
  br i1 %117, label %118, label %121

118:                                              ; preds = %115
  %119 = load i32, ptr %17, align 4
  %120 = load ptr, ptr %8, align 8
  store i32 %119, ptr %120, align 4
  br label %121

121:                                              ; preds = %118, %115
  %122 = load ptr, ptr %18, align 8
  %123 = icmp ne ptr %122, null
  br i1 %123, label %124, label %128

124:                                              ; preds = %121
  %125 = load i32, ptr %17, align 4
  %126 = load ptr, ptr %18, align 8
  %127 = getelementptr inbounds %struct.bzFile, ptr %126, i32 0, i32 5
  store i32 %125, ptr %127, align 8
  br label %128

128:                                              ; preds = %124, %121
  br label %259

129:                                              ; preds = %112, %98
  %130 = load ptr, ptr %18, align 8
  %131 = getelementptr inbounds %struct.bzFile, ptr %130, i32 0, i32 4
  %132 = getelementptr inbounds %struct.bz_stream, ptr %131, i32 0, i32 5
  %133 = load i32, ptr %132, align 8
  %134 = icmp ult i32 %133, 5000
  br i1 %134, label %135, label %170

135:                                              ; preds = %129
  %136 = load ptr, ptr %18, align 8
  %137 = getelementptr inbounds %struct.bzFile, ptr %136, i32 0, i32 4
  %138 = getelementptr inbounds %struct.bz_stream, ptr %137, i32 0, i32 5
  %139 = load i32, ptr %138, align 8
  %140 = sub i32 5000, %139
  store i32 %140, ptr %15, align 4
  %141 = load ptr, ptr %18, align 8
  %142 = getelementptr inbounds %struct.bzFile, ptr %141, i32 0, i32 1
  %143 = load i32, ptr %15, align 4
  %144 = sext i32 %143 to i64
  %145 = load ptr, ptr %18, align 8
  %146 = load ptr, ptr %145, align 8
  %147 = tail call i64 @"\01_fwrite"(ptr noundef %142, i64 noundef 1, i64 noundef %144, ptr noundef %146)
  %148 = trunc i64 %147 to i32
  store i32 %148, ptr %16, align 4
  %149 = load i32, ptr %15, align 4
  %150 = load i32, ptr %16, align 4
  %151 = icmp ne i32 %149, %150
  br i1 %151, label %157, label %152

152:                                              ; preds = %135
  %153 = load ptr, ptr %18, align 8
  %154 = load ptr, ptr %153, align 8
  %155 = tail call i32 @ferror(ptr noundef %154)
  %156 = icmp ne i32 %155, 0
  br i1 %156, label %157, label %169

157:                                              ; preds = %152, %135
  %158 = load ptr, ptr %8, align 8
  %159 = icmp ne ptr %158, null
  br i1 %159, label %160, label %162

160:                                              ; preds = %157
  %161 = load ptr, ptr %8, align 8
  store i32 -6, ptr %161, align 4
  br label %162

162:                                              ; preds = %160, %157
  %163 = load ptr, ptr %18, align 8
  %164 = icmp ne ptr %163, null
  br i1 %164, label %165, label %168

165:                                              ; preds = %162
  %166 = load ptr, ptr %18, align 8
  %167 = getelementptr inbounds %struct.bzFile, ptr %166, i32 0, i32 5
  store i32 -6, ptr %167, align 8
  br label %168

168:                                              ; preds = %165, %162
  br label %259

169:                                              ; preds = %152
  br label %170

170:                                              ; preds = %169, %129
  %171 = load i32, ptr %17, align 4
  %172 = icmp eq i32 %171, 4
  br i1 %172, label %173, label %98

173:                                              ; preds = %170
  br label %174

174:                                              ; preds = %173
  br label %175

175:                                              ; preds = %174, %92, %89
  %176 = load i32, ptr %10, align 4
  %177 = icmp ne i32 %176, 0
  br i1 %177, label %207, label %178

178:                                              ; preds = %175
  %179 = load ptr, ptr %18, align 8
  %180 = getelementptr inbounds %struct.bzFile, ptr %179, i32 0, i32 0
  %181 = load ptr, ptr %180, align 8
  %182 = tail call i32 @ferror(ptr noundef %181)
  %183 = icmp ne i32 %182, 0
  br i1 %183, label %207, label %184

184:                                              ; preds = %178
  %185 = load ptr, ptr %18, align 8
  %186 = getelementptr inbounds %struct.bzFile, ptr %185, i32 0, i32 0
  %187 = load ptr, ptr %186, align 8
  %188 = tail call i32 @fflush(ptr noundef %187)
  %189 = load ptr, ptr %18, align 8
  %190 = getelementptr inbounds %struct.bzFile, ptr %189, i32 0, i32 0
  %191 = load ptr, ptr %190, align 8
  %192 = tail call i32 @ferror(ptr noundef %191)
  %193 = icmp ne i32 %192, 0
  br i1 %193, label %194, label %206

194:                                              ; preds = %184
  %195 = load ptr, ptr %8, align 8
  %196 = icmp ne ptr %195, null
  br i1 %196, label %197, label %199

197:                                              ; preds = %194
  %198 = load ptr, ptr %8, align 8
  store i32 -6, ptr %198, align 4
  br label %199

199:                                              ; preds = %197, %194
  %200 = load ptr, ptr %18, align 8
  %201 = icmp ne ptr %200, null
  br i1 %201, label %202, label %205

202:                                              ; preds = %199
  %203 = load ptr, ptr %18, align 8
  %204 = getelementptr inbounds %struct.bzFile, ptr %203, i32 0, i32 5
  store i32 -6, ptr %204, align 8
  br label %205

205:                                              ; preds = %202, %199
  br label %259

206:                                              ; preds = %184
  br label %207

207:                                              ; preds = %206, %178, %175
  %208 = load ptr, ptr %11, align 8
  %209 = icmp ne ptr %208, null
  br i1 %209, label %210, label %216

210:                                              ; preds = %207
  %211 = load ptr, ptr %18, align 8
  %212 = getelementptr inbounds %struct.bzFile, ptr %211, i32 0, i32 4
  %213 = getelementptr inbounds %struct.bz_stream, ptr %212, i32 0, i32 2
  %214 = load i32, ptr %213, align 4
  %215 = load ptr, ptr %11, align 8
  store i32 %214, ptr %215, align 4
  br label %216

216:                                              ; preds = %210, %207
  %217 = load ptr, ptr %12, align 8
  %218 = icmp ne ptr %217, null
  br i1 %218, label %219, label %225

219:                                              ; preds = %216
  %220 = load ptr, ptr %18, align 8
  %221 = getelementptr inbounds %struct.bzFile, ptr %220, i32 0, i32 4
  %222 = getelementptr inbounds %struct.bz_stream, ptr %221, i32 0, i32 3
  %223 = load i32, ptr %222, align 8
  %224 = load ptr, ptr %12, align 8
  store i32 %223, ptr %224, align 4
  br label %225

225:                                              ; preds = %219, %216
  %226 = load ptr, ptr %13, align 8
  %227 = icmp ne ptr %226, null
  br i1 %227, label %228, label %234

228:                                              ; preds = %225
  %229 = load ptr, ptr %18, align 8
  %230 = getelementptr inbounds %struct.bzFile, ptr %229, i32 0, i32 4
  %231 = getelementptr inbounds %struct.bz_stream, ptr %230, i32 0, i32 6
  %232 = load i32, ptr %231, align 4
  %233 = load ptr, ptr %13, align 8
  store i32 %232, ptr %233, align 4
  br label %234

234:                                              ; preds = %228, %225
  %235 = load ptr, ptr %14, align 8
  %236 = icmp ne ptr %235, null
  br i1 %236, label %237, label %243

237:                                              ; preds = %234
  %238 = load ptr, ptr %18, align 8
  %239 = getelementptr inbounds %struct.bzFile, ptr %238, i32 0, i32 4
  %240 = getelementptr inbounds %struct.bz_stream, ptr %239, i32 0, i32 7
  %241 = load i32, ptr %240, align 8
  %242 = load ptr, ptr %14, align 8
  store i32 %241, ptr %242, align 4
  br label %243

243:                                              ; preds = %237, %234
  %244 = load ptr, ptr %8, align 8
  %245 = icmp ne ptr %244, null
  br i1 %245, label %246, label %248

246:                                              ; preds = %243
  %247 = load ptr, ptr %8, align 8
  store i32 0, ptr %247, align 4
  br label %248

248:                                              ; preds = %246, %243
  %249 = load ptr, ptr %18, align 8
  %250 = icmp ne ptr %249, null
  br i1 %250, label %251, label %254

251:                                              ; preds = %248
  %252 = load ptr, ptr %18, align 8
  %253 = getelementptr inbounds %struct.bzFile, ptr %252, i32 0, i32 5
  store i32 0, ptr %253, align 8
  br label %254

254:                                              ; preds = %251, %248
  %255 = load ptr, ptr %18, align 8
  %256 = getelementptr inbounds %struct.bzFile, ptr %255, i32 0, i32 4
  %257 = tail call i32 @BZ2_bzCompressEnd(ptr noundef %256)
  %258 = load ptr, ptr %18, align 8
  tail call void @free(ptr noundef %258)
  br label %259

259:                                              ; preds = %254, %205, %168, %128, %68, %50, %33
  ret void
}

declare i32 @fflush(ptr noundef) #3

; Function Attrs: noinline nounwind ssp uwtable(sync)
define ptr @BZ2_bzReadOpen(ptr noundef %0, ptr noundef %1, i32 noundef %2, i32 noundef %3, ptr noundef %4, i32 noundef %5) #0 {
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca ptr, align 8
  %13 = alloca i32, align 4
  %14 = alloca ptr, align 8
  %15 = alloca i32, align 4
  store ptr %0, ptr %8, align 8
  store ptr %1, ptr %9, align 8
  store i32 %2, ptr %10, align 4
  store i32 %3, ptr %11, align 4
  store ptr %4, ptr %12, align 8
  store i32 %5, ptr %13, align 4
  store ptr null, ptr %14, align 8
  %16 = load ptr, ptr %8, align 8
  %17 = icmp ne ptr %16, null
  br i1 %17, label %18, label %20

18:                                               ; preds = %6
  %19 = load ptr, ptr %8, align 8
  store i32 0, ptr %19, align 4
  br label %20

20:                                               ; preds = %18, %6
  %21 = load ptr, ptr %14, align 8
  %22 = icmp ne ptr %21, null
  br i1 %22, label %23, label %26

23:                                               ; preds = %20
  %24 = load ptr, ptr %14, align 8
  %25 = getelementptr inbounds %struct.bzFile, ptr %24, i32 0, i32 5
  store i32 0, ptr %25, align 8
  br label %26

26:                                               ; preds = %23, %20
  %27 = load ptr, ptr %9, align 8
  %28 = icmp eq ptr %27, null
  br i1 %28, label %56, label %29

29:                                               ; preds = %26
  %30 = load i32, ptr %11, align 4
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %29
  %33 = load i32, ptr %11, align 4
  %34 = icmp ne i32 %33, 1
  br i1 %34, label %56, label %35

35:                                               ; preds = %32, %29
  %36 = load i32, ptr %10, align 4
  %37 = icmp slt i32 %36, 0
  br i1 %37, label %56, label %38

38:                                               ; preds = %35
  %39 = load i32, ptr %10, align 4
  %40 = icmp sgt i32 %39, 4
  br i1 %40, label %56, label %41

41:                                               ; preds = %38
  %42 = load ptr, ptr %12, align 8
  %43 = icmp eq ptr %42, null
  br i1 %43, label %44, label %47

44:                                               ; preds = %41
  %45 = load i32, ptr %13, align 4
  %46 = icmp ne i32 %45, 0
  br i1 %46, label %56, label %47

47:                                               ; preds = %44, %41
  %48 = load ptr, ptr %12, align 8
  %49 = icmp ne ptr %48, null
  br i1 %49, label %50, label %68

50:                                               ; preds = %47
  %51 = load i32, ptr %13, align 4
  %52 = icmp slt i32 %51, 0
  br i1 %52, label %56, label %53

53:                                               ; preds = %50
  %54 = load i32, ptr %13, align 4
  %55 = icmp sgt i32 %54, 5000
  br i1 %55, label %56, label %68

56:                                               ; preds = %53, %50, %44, %38, %35, %32, %26
  %57 = load ptr, ptr %8, align 8
  %58 = icmp ne ptr %57, null
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = load ptr, ptr %8, align 8
  store i32 -2, ptr %60, align 4
  br label %61

61:                                               ; preds = %59, %56
  %62 = load ptr, ptr %14, align 8
  %63 = icmp ne ptr %62, null
  br i1 %63, label %64, label %67

64:                                               ; preds = %61
  %65 = load ptr, ptr %14, align 8
  %66 = getelementptr inbounds %struct.bzFile, ptr %65, i32 0, i32 5
  store i32 -2, ptr %66, align 8
  br label %67

67:                                               ; preds = %64, %61
  store ptr null, ptr %7, align 8
  br label %191

68:                                               ; preds = %53, %47
  %69 = load ptr, ptr %9, align 8
  %70 = tail call i32 @ferror(ptr noundef %69)
  %71 = icmp ne i32 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %68
  %73 = load ptr, ptr %8, align 8
  %74 = icmp ne ptr %73, null
  br i1 %74, label %75, label %77

75:                                               ; preds = %72
  %76 = load ptr, ptr %8, align 8
  store i32 -6, ptr %76, align 4
  br label %77

77:                                               ; preds = %75, %72
  %78 = load ptr, ptr %14, align 8
  %79 = icmp ne ptr %78, null
  br i1 %79, label %80, label %83

80:                                               ; preds = %77
  %81 = load ptr, ptr %14, align 8
  %82 = getelementptr inbounds %struct.bzFile, ptr %81, i32 0, i32 5
  store i32 -6, ptr %82, align 8
  br label %83

83:                                               ; preds = %80, %77
  store ptr null, ptr %7, align 8
  br label %191

84:                                               ; preds = %68
  %85 = tail call ptr @malloc(i64 noundef 5104) #9
  store ptr %85, ptr %14, align 8
  %86 = load ptr, ptr %14, align 8
  %87 = icmp eq ptr %86, null
  br i1 %87, label %88, label %100

88:                                               ; preds = %84
  %89 = load ptr, ptr %8, align 8
  %90 = icmp ne ptr %89, null
  br i1 %90, label %91, label %93

91:                                               ; preds = %88
  %92 = load ptr, ptr %8, align 8
  store i32 -3, ptr %92, align 4
  br label %93

93:                                               ; preds = %91, %88
  %94 = load ptr, ptr %14, align 8
  %95 = icmp ne ptr %94, null
  br i1 %95, label %96, label %99

96:                                               ; preds = %93
  %97 = load ptr, ptr %14, align 8
  %98 = getelementptr inbounds %struct.bzFile, ptr %97, i32 0, i32 5
  store i32 -3, ptr %98, align 8
  br label %99

99:                                               ; preds = %96, %93
  store ptr null, ptr %7, align 8
  br label %191

100:                                              ; preds = %84
  %101 = load ptr, ptr %8, align 8
  %102 = icmp ne ptr %101, null
  br i1 %102, label %103, label %105

103:                                              ; preds = %100
  %104 = load ptr, ptr %8, align 8
  store i32 0, ptr %104, align 4
  br label %105

105:                                              ; preds = %103, %100
  %106 = load ptr, ptr %14, align 8
  %107 = icmp ne ptr %106, null
  br i1 %107, label %108, label %111

108:                                              ; preds = %105
  %109 = load ptr, ptr %14, align 8
  %110 = getelementptr inbounds %struct.bzFile, ptr %109, i32 0, i32 5
  store i32 0, ptr %110, align 8
  br label %111

111:                                              ; preds = %108, %105
  %112 = load ptr, ptr %14, align 8
  %113 = getelementptr inbounds %struct.bzFile, ptr %112, i32 0, i32 6
  store i8 0, ptr %113, align 4
  %114 = load ptr, ptr %9, align 8
  %115 = load ptr, ptr %14, align 8
  %116 = getelementptr inbounds %struct.bzFile, ptr %115, i32 0, i32 0
  store ptr %114, ptr %116, align 8
  %117 = load ptr, ptr %14, align 8
  %118 = getelementptr inbounds %struct.bzFile, ptr %117, i32 0, i32 2
  store i32 0, ptr %118, align 8
  %119 = load ptr, ptr %14, align 8
  %120 = getelementptr inbounds %struct.bzFile, ptr %119, i32 0, i32 3
  store i8 0, ptr %120, align 4
  %121 = load ptr, ptr %14, align 8
  %122 = getelementptr inbounds %struct.bzFile, ptr %121, i32 0, i32 4
  %123 = getelementptr inbounds %struct.bz_stream, ptr %122, i32 0, i32 9
  store ptr null, ptr %123, align 8
  %124 = load ptr, ptr %14, align 8
  %125 = getelementptr inbounds %struct.bzFile, ptr %124, i32 0, i32 4
  %126 = getelementptr inbounds %struct.bz_stream, ptr %125, i32 0, i32 10
  store ptr null, ptr %126, align 8
  %127 = load ptr, ptr %14, align 8
  %128 = getelementptr inbounds %struct.bzFile, ptr %127, i32 0, i32 4
  %129 = getelementptr inbounds %struct.bz_stream, ptr %128, i32 0, i32 11
  store ptr null, ptr %129, align 8
  %130 = load i32, ptr %13, align 4
  %131 = icmp sgt i32 %130, 0
  br i1 %131, label %.lr.ph, label %152

.lr.ph:                                           ; preds = %111
  br label %132

132:                                              ; preds = %.lr.ph, %132
  %133 = load ptr, ptr %12, align 8
  %134 = load i8, ptr %133, align 1
  %135 = load ptr, ptr %14, align 8
  %136 = getelementptr inbounds %struct.bzFile, ptr %135, i32 0, i32 1
  %137 = load ptr, ptr %14, align 8
  %138 = getelementptr inbounds %struct.bzFile, ptr %137, i32 0, i32 2
  %139 = load i32, ptr %138, align 8
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds [5000 x i8], ptr %136, i64 0, i64 %140
  store i8 %134, ptr %141, align 1
  %142 = load ptr, ptr %14, align 8
  %143 = getelementptr inbounds %struct.bzFile, ptr %142, i32 0, i32 2
  %144 = load i32, ptr %143, align 8
  %145 = add nsw i32 %144, 1
  store i32 %145, ptr %143, align 8
  %146 = load ptr, ptr %12, align 8
  %147 = getelementptr inbounds i8, ptr %146, i64 1
  store ptr %147, ptr %12, align 8
  %148 = load i32, ptr %13, align 4
  %149 = add nsw i32 %148, -1
  store i32 %149, ptr %13, align 4
  %150 = load i32, ptr %13, align 4
  %151 = icmp sgt i32 %150, 0
  br i1 %151, label %132, label %._crit_edge, !llvm.loop !8

._crit_edge:                                      ; preds = %132
  br label %152

152:                                              ; preds = %._crit_edge, %111
  %153 = load ptr, ptr %14, align 8
  %154 = getelementptr inbounds %struct.bzFile, ptr %153, i32 0, i32 4
  %155 = load i32, ptr %10, align 4
  %156 = load i32, ptr %11, align 4
  %157 = tail call i32 @BZ2_bzDecompressInit(ptr noundef %154, i32 noundef %155, i32 noundef %156)
  store i32 %157, ptr %15, align 4
  %158 = load i32, ptr %15, align 4
  %159 = icmp ne i32 %158, 0
  br i1 %159, label %160, label %175

160:                                              ; preds = %152
  %161 = load ptr, ptr %8, align 8
  %162 = icmp ne ptr %161, null
  br i1 %162, label %163, label %166

163:                                              ; preds = %160
  %164 = load i32, ptr %15, align 4
  %165 = load ptr, ptr %8, align 8
  store i32 %164, ptr %165, align 4
  br label %166

166:                                              ; preds = %163, %160
  %167 = load ptr, ptr %14, align 8
  %168 = icmp ne ptr %167, null
  br i1 %168, label %169, label %173

169:                                              ; preds = %166
  %170 = load i32, ptr %15, align 4
  %171 = load ptr, ptr %14, align 8
  %172 = getelementptr inbounds %struct.bzFile, ptr %171, i32 0, i32 5
  store i32 %170, ptr %172, align 8
  br label %173

173:                                              ; preds = %169, %166
  %174 = load ptr, ptr %14, align 8
  tail call void @free(ptr noundef %174)
  store ptr null, ptr %7, align 8
  br label %191

175:                                              ; preds = %152
  %176 = load ptr, ptr %14, align 8
  %177 = getelementptr inbounds %struct.bzFile, ptr %176, i32 0, i32 2
  %178 = load i32, ptr %177, align 8
  %179 = load ptr, ptr %14, align 8
  %180 = getelementptr inbounds %struct.bzFile, ptr %179, i32 0, i32 4
  %181 = getelementptr inbounds %struct.bz_stream, ptr %180, i32 0, i32 1
  store i32 %178, ptr %181, align 8
  %182 = load ptr, ptr %14, align 8
  %183 = getelementptr inbounds %struct.bzFile, ptr %182, i32 0, i32 1
  %184 = getelementptr inbounds [5000 x i8], ptr %183, i64 0, i64 0
  %185 = load ptr, ptr %14, align 8
  %186 = getelementptr inbounds %struct.bzFile, ptr %185, i32 0, i32 4
  %187 = getelementptr inbounds %struct.bz_stream, ptr %186, i32 0, i32 0
  store ptr %184, ptr %187, align 8
  %188 = load ptr, ptr %14, align 8
  %189 = getelementptr inbounds %struct.bzFile, ptr %188, i32 0, i32 6
  store i8 1, ptr %189, align 4
  %190 = load ptr, ptr %14, align 8
  store ptr %190, ptr %7, align 8
  br label %191

191:                                              ; preds = %175, %173, %99, %83, %67
  %192 = load ptr, ptr %7, align 8
  ret ptr %192
}

; Function Attrs: noinline nounwind ssp uwtable(sync)
define void @BZ2_bzReadClose(ptr noundef %0, ptr noundef %1) #0 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  store ptr %1, ptr %4, align 8
  %6 = load ptr, ptr %4, align 8
  store ptr %6, ptr %5, align 8
  %7 = load ptr, ptr %3, align 8
  %8 = icmp ne ptr %7, null
  br i1 %8, label %9, label %11

9:                                                ; preds = %2
  %10 = load ptr, ptr %3, align 8
  store i32 0, ptr %10, align 4
  br label %11

11:                                               ; preds = %9, %2
  %12 = load ptr, ptr %5, align 8
  %13 = icmp ne ptr %12, null
  br i1 %13, label %14, label %17

14:                                               ; preds = %11
  %15 = load ptr, ptr %5, align 8
  %16 = getelementptr inbounds %struct.bzFile, ptr %15, i32 0, i32 5
  store i32 0, ptr %16, align 8
  br label %17

17:                                               ; preds = %14, %11
  %18 = load ptr, ptr %5, align 8
  %19 = icmp eq ptr %18, null
  br i1 %19, label %20, label %32

20:                                               ; preds = %17
  %21 = load ptr, ptr %3, align 8
  %22 = icmp ne ptr %21, null
  br i1 %22, label %23, label %25

23:                                               ; preds = %20
  %24 = load ptr, ptr %3, align 8
  store i32 0, ptr %24, align 4
  br label %25

25:                                               ; preds = %23, %20
  %26 = load ptr, ptr %5, align 8
  %27 = icmp ne ptr %26, null
  br i1 %27, label %28, label %31

28:                                               ; preds = %25
  %29 = load ptr, ptr %5, align 8
  %30 = getelementptr inbounds %struct.bzFile, ptr %29, i32 0, i32 5
  store i32 0, ptr %30, align 8
  br label %31

31:                                               ; preds = %28, %25
  br label %60

32:                                               ; preds = %17
  %33 = load ptr, ptr %5, align 8
  %34 = getelementptr inbounds %struct.bzFile, ptr %33, i32 0, i32 3
  %35 = load i8, ptr %34, align 4
  %36 = icmp ne i8 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %32
  %38 = load ptr, ptr %3, align 8
  %39 = icmp ne ptr %38, null
  br i1 %39, label %40, label %42

40:                                               ; preds = %37
  %41 = load ptr, ptr %3, align 8
  store i32 -1, ptr %41, align 4
  br label %42

42:                                               ; preds = %40, %37
  %43 = load ptr, ptr %5, align 8
  %44 = icmp ne ptr %43, null
  br i1 %44, label %45, label %48

45:                                               ; preds = %42
  %46 = load ptr, ptr %5, align 8
  %47 = getelementptr inbounds %struct.bzFile, ptr %46, i32 0, i32 5
  store i32 -1, ptr %47, align 8
  br label %48

48:                                               ; preds = %45, %42
  br label %60

49:                                               ; preds = %32
  %50 = load ptr, ptr %5, align 8
  %51 = getelementptr inbounds %struct.bzFile, ptr %50, i32 0, i32 6
  %52 = load i8, ptr %51, align 4
  %53 = icmp ne i8 %52, 0
  br i1 %53, label %54, label %58

54:                                               ; preds = %49
  %55 = load ptr, ptr %5, align 8
  %56 = getelementptr inbounds %struct.bzFile, ptr %55, i32 0, i32 4
  %57 = tail call i32 @BZ2_bzDecompressEnd(ptr noundef %56)
  br label %58

58:                                               ; preds = %54, %49
  %59 = load ptr, ptr %5, align 8
  tail call void @free(ptr noundef %59)
  br label %60

60:                                               ; preds = %58, %48, %31
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable(sync)
define i32 @BZ2_bzRead(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca ptr, align 8
  store ptr %0, ptr %6, align 8
  store ptr %1, ptr %7, align 8
  store ptr %2, ptr %8, align 8
  store i32 %3, ptr %9, align 4
  %13 = load ptr, ptr %7, align 8
  store ptr %13, ptr %12, align 8
  %14 = load ptr, ptr %6, align 8
  %15 = icmp ne ptr %14, null
  br i1 %15, label %16, label %18

16:                                               ; preds = %4
  %17 = load ptr, ptr %6, align 8
  store i32 0, ptr %17, align 4
  br label %18

18:                                               ; preds = %16, %4
  %19 = load ptr, ptr %12, align 8
  %20 = icmp ne ptr %19, null
  br i1 %20, label %21, label %24

21:                                               ; preds = %18
  %22 = load ptr, ptr %12, align 8
  %23 = getelementptr inbounds %struct.bzFile, ptr %22, i32 0, i32 5
  store i32 0, ptr %23, align 8
  br label %24

24:                                               ; preds = %21, %18
  %25 = load ptr, ptr %12, align 8
  %26 = icmp eq ptr %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = load ptr, ptr %8, align 8
  %29 = icmp eq ptr %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %27
  %31 = load i32, ptr %9, align 4
  %32 = icmp slt i32 %31, 0
  br i1 %32, label %33, label %45

33:                                               ; preds = %30, %27, %24
  %34 = load ptr, ptr %6, align 8
  %35 = icmp ne ptr %34, null
  br i1 %35, label %36, label %38

36:                                               ; preds = %33
  %37 = load ptr, ptr %6, align 8
  store i32 -2, ptr %37, align 4
  br label %38

38:                                               ; preds = %36, %33
  %39 = load ptr, ptr %12, align 8
  %40 = icmp ne ptr %39, null
  br i1 %40, label %41, label %44

41:                                               ; preds = %38
  %42 = load ptr, ptr %12, align 8
  %43 = getelementptr inbounds %struct.bzFile, ptr %42, i32 0, i32 5
  store i32 -2, ptr %43, align 8
  br label %44

44:                                               ; preds = %41, %38
  store i32 0, ptr %5, align 4
  br label %251

45:                                               ; preds = %30
  %46 = load ptr, ptr %12, align 8
  %47 = getelementptr inbounds %struct.bzFile, ptr %46, i32 0, i32 3
  %48 = load i8, ptr %47, align 4
  %49 = icmp ne i8 %48, 0
  br i1 %49, label %50, label %62

50:                                               ; preds = %45
  %51 = load ptr, ptr %6, align 8
  %52 = icmp ne ptr %51, null
  br i1 %52, label %53, label %55

53:                                               ; preds = %50
  %54 = load ptr, ptr %6, align 8
  store i32 -1, ptr %54, align 4
  br label %55

55:                                               ; preds = %53, %50
  %56 = load ptr, ptr %12, align 8
  %57 = icmp ne ptr %56, null
  br i1 %57, label %58, label %61

58:                                               ; preds = %55
  %59 = load ptr, ptr %12, align 8
  %60 = getelementptr inbounds %struct.bzFile, ptr %59, i32 0, i32 5
  store i32 -1, ptr %60, align 8
  br label %61

61:                                               ; preds = %58, %55
  store i32 0, ptr %5, align 4
  br label %251

62:                                               ; preds = %45
  %63 = load i32, ptr %9, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %77

65:                                               ; preds = %62
  %66 = load ptr, ptr %6, align 8
  %67 = icmp ne ptr %66, null
  br i1 %67, label %68, label %70

68:                                               ; preds = %65
  %69 = load ptr, ptr %6, align 8
  store i32 0, ptr %69, align 4
  br label %70

70:                                               ; preds = %68, %65
  %71 = load ptr, ptr %12, align 8
  %72 = icmp ne ptr %71, null
  br i1 %72, label %73, label %76

73:                                               ; preds = %70
  %74 = load ptr, ptr %12, align 8
  %75 = getelementptr inbounds %struct.bzFile, ptr %74, i32 0, i32 5
  store i32 0, ptr %75, align 8
  br label %76

76:                                               ; preds = %73, %70
  store i32 0, ptr %5, align 4
  br label %251

77:                                               ; preds = %62
  %78 = load i32, ptr %9, align 4
  %79 = load ptr, ptr %12, align 8
  %80 = getelementptr inbounds %struct.bzFile, ptr %79, i32 0, i32 4
  %81 = getelementptr inbounds %struct.bz_stream, ptr %80, i32 0, i32 5
  store i32 %78, ptr %81, align 8
  %82 = load ptr, ptr %8, align 8
  %83 = load ptr, ptr %12, align 8
  %84 = getelementptr inbounds %struct.bzFile, ptr %83, i32 0, i32 4
  %85 = getelementptr inbounds %struct.bz_stream, ptr %84, i32 0, i32 4
  store ptr %82, ptr %85, align 8
  %86 = load ptr, ptr %12, align 8
  %87 = load ptr, ptr %86, align 8
  %88 = tail call i32 @ferror(ptr noundef %87)
  %89 = icmp ne i32 %88, 0
  br i1 %89, label %95, label %.lr.ph

.lr.ph:                                           ; preds = %77
  br label %107

90:                                               ; preds = %232
  %91 = load ptr, ptr %12, align 8
  %92 = load ptr, ptr %91, align 8
  %93 = tail call i32 @ferror(ptr noundef %92)
  %94 = icmp ne i32 %93, 0
  br i1 %94, label %._crit_edge, label %107

._crit_edge:                                      ; preds = %90
  br label %95

95:                                               ; preds = %._crit_edge, %77
  %96 = load ptr, ptr %6, align 8
  %97 = icmp ne ptr %96, null
  br i1 %97, label %98, label %100

98:                                               ; preds = %95
  %99 = load ptr, ptr %6, align 8
  store i32 -6, ptr %99, align 4
  br label %100

100:                                              ; preds = %98, %95
  %101 = load ptr, ptr %12, align 8
  %102 = icmp ne ptr %101, null
  br i1 %102, label %103, label %106

103:                                              ; preds = %100
  %104 = load ptr, ptr %12, align 8
  %105 = getelementptr inbounds %struct.bzFile, ptr %104, i32 0, i32 5
  store i32 -6, ptr %105, align 8
  br label %106

106:                                              ; preds = %103, %100
  store i32 0, ptr %5, align 4
  br label %251

107:                                              ; preds = %.lr.ph, %90
  %108 = load ptr, ptr %12, align 8
  %109 = getelementptr inbounds %struct.bzFile, ptr %108, i32 0, i32 4
  %110 = getelementptr inbounds %struct.bz_stream, ptr %109, i32 0, i32 1
  %111 = load i32, ptr %110, align 8
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %155

113:                                              ; preds = %107
  %114 = load ptr, ptr %12, align 8
  %115 = load ptr, ptr %114, align 8
  %116 = tail call zeroext i8 @myfeof(ptr noundef %115)
  %117 = icmp ne i8 %116, 0
  br i1 %117, label %155, label %118

118:                                              ; preds = %113
  %119 = load ptr, ptr %12, align 8
  %120 = getelementptr inbounds %struct.bzFile, ptr %119, i32 0, i32 1
  %121 = load ptr, ptr %12, align 8
  %122 = load ptr, ptr %121, align 8
  %123 = tail call i64 @fread(ptr noundef %120, i64 noundef 1, i64 noundef 5000, ptr noundef %122)
  %124 = trunc i64 %123 to i32
  store i32 %124, ptr %10, align 4
  %125 = load ptr, ptr %12, align 8
  %126 = load ptr, ptr %125, align 8
  %127 = tail call i32 @ferror(ptr noundef %126)
  %128 = icmp ne i32 %127, 0
  br i1 %128, label %129, label %141

129:                                              ; preds = %118
  %130 = load ptr, ptr %6, align 8
  %131 = icmp ne ptr %130, null
  br i1 %131, label %132, label %134

132:                                              ; preds = %129
  %133 = load ptr, ptr %6, align 8
  store i32 -6, ptr %133, align 4
  br label %134

134:                                              ; preds = %132, %129
  %135 = load ptr, ptr %12, align 8
  %136 = icmp ne ptr %135, null
  br i1 %136, label %137, label %140

137:                                              ; preds = %134
  %138 = load ptr, ptr %12, align 8
  %139 = getelementptr inbounds %struct.bzFile, ptr %138, i32 0, i32 5
  store i32 -6, ptr %139, align 8
  br label %140

140:                                              ; preds = %137, %134
  store i32 0, ptr %5, align 4
  br label %251

141:                                              ; preds = %118
  %142 = load i32, ptr %10, align 4
  %143 = load ptr, ptr %12, align 8
  %144 = getelementptr inbounds %struct.bzFile, ptr %143, i32 0, i32 2
  store i32 %142, ptr %144, align 8
  %145 = load ptr, ptr %12, align 8
  %146 = getelementptr inbounds %struct.bzFile, ptr %145, i32 0, i32 2
  %147 = load i32, ptr %146, align 8
  %148 = load ptr, ptr %12, align 8
  %149 = getelementptr inbounds %struct.bzFile, ptr %148, i32 0, i32 4
  %150 = getelementptr inbounds %struct.bz_stream, ptr %149, i32 0, i32 1
  store i32 %147, ptr %150, align 8
  %151 = load ptr, ptr %12, align 8
  %152 = getelementptr inbounds %struct.bzFile, ptr %151, i32 0, i32 1
  %153 = load ptr, ptr %12, align 8
  %154 = getelementptr inbounds %struct.bzFile, ptr %153, i32 0, i32 4
  store ptr %152, ptr %154, align 8
  br label %155

155:                                              ; preds = %141, %113, %107
  %156 = load ptr, ptr %12, align 8
  %157 = getelementptr inbounds %struct.bzFile, ptr %156, i32 0, i32 4
  %158 = tail call i32 @BZ2_bzDecompress(ptr noundef %157)
  store i32 %158, ptr %11, align 4
  %159 = load i32, ptr %11, align 4
  %160 = icmp ne i32 %159, 0
  br i1 %160, label %161, label %178

161:                                              ; preds = %155
  %162 = load i32, ptr %11, align 4
  %163 = icmp ne i32 %162, 4
  br i1 %163, label %164, label %178

164:                                              ; preds = %161
  %165 = load ptr, ptr %6, align 8
  %166 = icmp ne ptr %165, null
  br i1 %166, label %167, label %170

167:                                              ; preds = %164
  %168 = load i32, ptr %11, align 4
  %169 = load ptr, ptr %6, align 8
  store i32 %168, ptr %169, align 4
  br label %170

170:                                              ; preds = %167, %164
  %171 = load ptr, ptr %12, align 8
  %172 = icmp ne ptr %171, null
  br i1 %172, label %173, label %177

173:                                              ; preds = %170
  %174 = load i32, ptr %11, align 4
  %175 = load ptr, ptr %12, align 8
  %176 = getelementptr inbounds %struct.bzFile, ptr %175, i32 0, i32 5
  store i32 %174, ptr %176, align 8
  br label %177

177:                                              ; preds = %173, %170
  store i32 0, ptr %5, align 4
  br label %251

178:                                              ; preds = %161, %155
  %179 = load i32, ptr %11, align 4
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %211

181:                                              ; preds = %178
  %182 = load ptr, ptr %12, align 8
  %183 = load ptr, ptr %182, align 8
  %184 = tail call zeroext i8 @myfeof(ptr noundef %183)
  %185 = zext i8 %184 to i32
  %186 = icmp ne i32 %185, 0
  br i1 %186, label %187, label %211

187:                                              ; preds = %181
  %188 = load ptr, ptr %12, align 8
  %189 = getelementptr inbounds %struct.bzFile, ptr %188, i32 0, i32 4
  %190 = getelementptr inbounds %struct.bz_stream, ptr %189, i32 0, i32 1
  %191 = load i32, ptr %190, align 8
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %193, label %211

193:                                              ; preds = %187
  %194 = load ptr, ptr %12, align 8
  %195 = getelementptr inbounds %struct.bzFile, ptr %194, i32 0, i32 4
  %196 = getelementptr inbounds %struct.bz_stream, ptr %195, i32 0, i32 5
  %197 = load i32, ptr %196, align 8
  %198 = icmp ugt i32 %197, 0
  br i1 %198, label %199, label %211

199:                                              ; preds = %193
  %200 = load ptr, ptr %6, align 8
  %201 = icmp ne ptr %200, null
  br i1 %201, label %202, label %204

202:                                              ; preds = %199
  %203 = load ptr, ptr %6, align 8
  store i32 -7, ptr %203, align 4
  br label %204

204:                                              ; preds = %202, %199
  %205 = load ptr, ptr %12, align 8
  %206 = icmp ne ptr %205, null
  br i1 %206, label %207, label %210

207:                                              ; preds = %204
  %208 = load ptr, ptr %12, align 8
  %209 = getelementptr inbounds %struct.bzFile, ptr %208, i32 0, i32 5
  store i32 -7, ptr %209, align 8
  br label %210

210:                                              ; preds = %207, %204
  store i32 0, ptr %5, align 4
  br label %251

211:                                              ; preds = %193, %187, %181, %178
  %212 = load i32, ptr %11, align 4
  %213 = icmp eq i32 %212, 4
  br i1 %213, label %214, label %232

214:                                              ; preds = %211
  %215 = load ptr, ptr %6, align 8
  %216 = icmp ne ptr %215, null
  br i1 %216, label %217, label %219

217:                                              ; preds = %214
  %218 = load ptr, ptr %6, align 8
  store i32 4, ptr %218, align 4
  br label %219

219:                                              ; preds = %217, %214
  %220 = load ptr, ptr %12, align 8
  %221 = icmp ne ptr %220, null
  br i1 %221, label %222, label %225

222:                                              ; preds = %219
  %223 = load ptr, ptr %12, align 8
  %224 = getelementptr inbounds %struct.bzFile, ptr %223, i32 0, i32 5
  store i32 4, ptr %224, align 8
  br label %225

225:                                              ; preds = %222, %219
  %226 = load i32, ptr %9, align 4
  %227 = load ptr, ptr %12, align 8
  %228 = getelementptr inbounds %struct.bzFile, ptr %227, i32 0, i32 4
  %229 = getelementptr inbounds %struct.bz_stream, ptr %228, i32 0, i32 5
  %230 = load i32, ptr %229, align 8
  %231 = sub i32 %226, %230
  store i32 %231, ptr %5, align 4
  br label %251

232:                                              ; preds = %211
  %233 = load ptr, ptr %12, align 8
  %234 = getelementptr inbounds %struct.bzFile, ptr %233, i32 0, i32 4
  %235 = getelementptr inbounds %struct.bz_stream, ptr %234, i32 0, i32 5
  %236 = load i32, ptr %235, align 8
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %238, label %90

238:                                              ; preds = %232
  %239 = load ptr, ptr %6, align 8
  %240 = icmp ne ptr %239, null
  br i1 %240, label %241, label %243

241:                                              ; preds = %238
  %242 = load ptr, ptr %6, align 8
  store i32 0, ptr %242, align 4
  br label %243

243:                                              ; preds = %241, %238
  %244 = load ptr, ptr %12, align 8
  %245 = icmp ne ptr %244, null
  br i1 %245, label %246, label %249

246:                                              ; preds = %243
  %247 = load ptr, ptr %12, align 8
  %248 = getelementptr inbounds %struct.bzFile, ptr %247, i32 0, i32 5
  store i32 0, ptr %248, align 8
  br label %249

249:                                              ; preds = %246, %243
  %250 = load i32, ptr %9, align 4
  store i32 %250, ptr %5, align 4
  br label %251

251:                                              ; preds = %249, %225, %210, %177, %140, %106, %76, %61, %44
  %252 = load i32, ptr %5, align 4
  ret i32 %252
}

; Function Attrs: noinline nounwind ssp uwtable(sync)
define internal zeroext i8 @myfeof(ptr noundef %0) #0 {
  %2 = alloca i8, align 1
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  store ptr %0, ptr %3, align 8
  %5 = load ptr, ptr %3, align 8
  %6 = tail call i32 @fgetc(ptr noundef %5)
  store i32 %6, ptr %4, align 4
  %7 = load i32, ptr %4, align 4
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %9, label %10

9:                                                ; preds = %1
  store i8 1, ptr %2, align 1
  br label %14

10:                                               ; preds = %1
  %11 = load i32, ptr %4, align 4
  %12 = load ptr, ptr %3, align 8
  %13 = tail call i32 @ungetc(i32 noundef %11, ptr noundef %12)
  store i8 0, ptr %2, align 1
  br label %14

14:                                               ; preds = %10, %9
  %15 = load i8, ptr %2, align 1
  ret i8 %15
}

declare i64 @fread(ptr noundef, i64 noundef, i64 noundef, ptr noundef) #3

; Function Attrs: noinline nounwind ssp uwtable(sync)
define void @BZ2_bzReadGetUnused(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) #0 {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  store ptr %0, ptr %5, align 8
  store ptr %1, ptr %6, align 8
  store ptr %2, ptr %7, align 8
  store ptr %3, ptr %8, align 8
  %10 = load ptr, ptr %6, align 8
  store ptr %10, ptr %9, align 8
  %11 = load ptr, ptr %9, align 8
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %25

13:                                               ; preds = %4
  %14 = load ptr, ptr %5, align 8
  %15 = icmp ne ptr %14, null
  br i1 %15, label %16, label %18

16:                                               ; preds = %13
  %17 = load ptr, ptr %5, align 8
  store i32 -2, ptr %17, align 4
  br label %18

18:                                               ; preds = %16, %13
  %19 = load ptr, ptr %9, align 8
  %20 = icmp ne ptr %19, null
  br i1 %20, label %21, label %24

21:                                               ; preds = %18
  %22 = load ptr, ptr %9, align 8
  %23 = getelementptr inbounds %struct.bzFile, ptr %22, i32 0, i32 5
  store i32 -2, ptr %23, align 8
  br label %24

24:                                               ; preds = %21, %18
  br label %82

25:                                               ; preds = %4
  %26 = load ptr, ptr %9, align 8
  %27 = getelementptr inbounds %struct.bzFile, ptr %26, i32 0, i32 5
  %28 = load i32, ptr %27, align 8
  %29 = icmp ne i32 %28, 4
  br i1 %29, label %30, label %42

30:                                               ; preds = %25
  %31 = load ptr, ptr %5, align 8
  %32 = icmp ne ptr %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %30
  %34 = load ptr, ptr %5, align 8
  store i32 -1, ptr %34, align 4
  br label %35

35:                                               ; preds = %33, %30
  %36 = load ptr, ptr %9, align 8
  %37 = icmp ne ptr %36, null
  br i1 %37, label %38, label %41

38:                                               ; preds = %35
  %39 = load ptr, ptr %9, align 8
  %40 = getelementptr inbounds %struct.bzFile, ptr %39, i32 0, i32 5
  store i32 -1, ptr %40, align 8
  br label %41

41:                                               ; preds = %38, %35
  br label %82

42:                                               ; preds = %25
  %43 = load ptr, ptr %7, align 8
  %44 = icmp eq ptr %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %42
  %46 = load ptr, ptr %8, align 8
  %47 = icmp eq ptr %46, null
  br i1 %47, label %48, label %60

48:                                               ; preds = %45, %42
  %49 = load ptr, ptr %5, align 8
  %50 = icmp ne ptr %49, null
  br i1 %50, label %51, label %53

51:                                               ; preds = %48
  %52 = load ptr, ptr %5, align 8
  store i32 -2, ptr %52, align 4
  br label %53

53:                                               ; preds = %51, %48
  %54 = load ptr, ptr %9, align 8
  %55 = icmp ne ptr %54, null
  br i1 %55, label %56, label %59

56:                                               ; preds = %53
  %57 = load ptr, ptr %9, align 8
  %58 = getelementptr inbounds %struct.bzFile, ptr %57, i32 0, i32 5
  store i32 -2, ptr %58, align 8
  br label %59

59:                                               ; preds = %56, %53
  br label %82

60:                                               ; preds = %45
  %61 = load ptr, ptr %5, align 8
  %62 = icmp ne ptr %61, null
  br i1 %62, label %63, label %65

63:                                               ; preds = %60
  %64 = load ptr, ptr %5, align 8
  store i32 0, ptr %64, align 4
  br label %65

65:                                               ; preds = %63, %60
  %66 = load ptr, ptr %9, align 8
  %67 = icmp ne ptr %66, null
  br i1 %67, label %68, label %71

68:                                               ; preds = %65
  %69 = load ptr, ptr %9, align 8
  %70 = getelementptr inbounds %struct.bzFile, ptr %69, i32 0, i32 5
  store i32 0, ptr %70, align 8
  br label %71

71:                                               ; preds = %68, %65
  %72 = load ptr, ptr %9, align 8
  %73 = getelementptr inbounds %struct.bzFile, ptr %72, i32 0, i32 4
  %74 = getelementptr inbounds %struct.bz_stream, ptr %73, i32 0, i32 1
  %75 = load i32, ptr %74, align 8
  %76 = load ptr, ptr %8, align 8
  store i32 %75, ptr %76, align 4
  %77 = load ptr, ptr %9, align 8
  %78 = getelementptr inbounds %struct.bzFile, ptr %77, i32 0, i32 4
  %79 = getelementptr inbounds %struct.bz_stream, ptr %78, i32 0, i32 0
  %80 = load ptr, ptr %79, align 8
  %81 = load ptr, ptr %7, align 8
  store ptr %80, ptr %81, align 8
  br label %82

82:                                               ; preds = %71, %59, %41, %24
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable(sync)
define i32 @BZ2_bzBuffToBuffCompress(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5, i32 noundef %6) #0 {
  %8 = alloca i32, align 4
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca %struct.bz_stream, align 8
  %17 = alloca i32, align 4
  store ptr %0, ptr %9, align 8
  store ptr %1, ptr %10, align 8
  store ptr %2, ptr %11, align 8
  store i32 %3, ptr %12, align 4
  store i32 %4, ptr %13, align 4
  store i32 %5, ptr %14, align 4
  store i32 %6, ptr %15, align 4
  %18 = load ptr, ptr %9, align 8
  %19 = icmp eq ptr %18, null
  br i1 %19, label %44, label %20

20:                                               ; preds = %7
  %21 = load ptr, ptr %10, align 8
  %22 = icmp eq ptr %21, null
  br i1 %22, label %44, label %23

23:                                               ; preds = %20
  %24 = load ptr, ptr %11, align 8
  %25 = icmp eq ptr %24, null
  br i1 %25, label %44, label %26

26:                                               ; preds = %23
  %27 = load i32, ptr %13, align 4
  %28 = icmp slt i32 %27, 1
  br i1 %28, label %44, label %29

29:                                               ; preds = %26
  %30 = load i32, ptr %13, align 4
  %31 = icmp sgt i32 %30, 9
  br i1 %31, label %44, label %32

32:                                               ; preds = %29
  %33 = load i32, ptr %14, align 4
  %34 = icmp slt i32 %33, 0
  br i1 %34, label %44, label %35

35:                                               ; preds = %32
  %36 = load i32, ptr %14, align 4
  %37 = icmp sgt i32 %36, 4
  br i1 %37, label %44, label %38

38:                                               ; preds = %35
  %39 = load i32, ptr %15, align 4
  %40 = icmp slt i32 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %38
  %42 = load i32, ptr %15, align 4
  %43 = icmp sgt i32 %42, 250
  br i1 %43, label %44, label %45

44:                                               ; preds = %41, %38, %35, %32, %29, %26, %23, %20, %7
  store i32 -2, ptr %8, align 4
  br label %91

45:                                               ; preds = %41
  %46 = load i32, ptr %15, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  store i32 30, ptr %15, align 4
  br label %49

49:                                               ; preds = %48, %45
  %50 = getelementptr inbounds %struct.bz_stream, ptr %16, i32 0, i32 9
  store ptr null, ptr %50, align 8
  %51 = getelementptr inbounds %struct.bz_stream, ptr %16, i32 0, i32 10
  store ptr null, ptr %51, align 8
  %52 = getelementptr inbounds %struct.bz_stream, ptr %16, i32 0, i32 11
  store ptr null, ptr %52, align 8
  %53 = load i32, ptr %13, align 4
  %54 = load i32, ptr %14, align 4
  %55 = load i32, ptr %15, align 4
  %56 = call i32 @BZ2_bzCompressInit(ptr noundef %16, i32 noundef %53, i32 noundef %54, i32 noundef %55)
  store i32 %56, ptr %17, align 4
  %57 = load i32, ptr %17, align 4
  %58 = icmp ne i32 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %49
  %60 = load i32, ptr %17, align 4
  store i32 %60, ptr %8, align 4
  br label %91

61:                                               ; preds = %49
  %62 = load ptr, ptr %11, align 8
  %63 = getelementptr inbounds %struct.bz_stream, ptr %16, i32 0, i32 0
  store ptr %62, ptr %63, align 8
  %64 = load ptr, ptr %9, align 8
  %65 = getelementptr inbounds %struct.bz_stream, ptr %16, i32 0, i32 4
  store ptr %64, ptr %65, align 8
  %66 = load i32, ptr %12, align 4
  %67 = getelementptr inbounds %struct.bz_stream, ptr %16, i32 0, i32 1
  store i32 %66, ptr %67, align 8
  %68 = load ptr, ptr %10, align 8
  %69 = load i32, ptr %68, align 4
  %70 = getelementptr inbounds %struct.bz_stream, ptr %16, i32 0, i32 5
  store i32 %69, ptr %70, align 8
  %71 = call i32 @BZ2_bzCompress(ptr noundef %16, i32 noundef 2)
  store i32 %71, ptr %17, align 4
  %72 = load i32, ptr %17, align 4
  %73 = icmp eq i32 %72, 3
  br i1 %73, label %74, label %75

74:                                               ; preds = %61
  br label %86

75:                                               ; preds = %61
  %76 = load i32, ptr %17, align 4
  %77 = icmp ne i32 %76, 4
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  br label %88

79:                                               ; preds = %75
  %80 = getelementptr inbounds %struct.bz_stream, ptr %16, i32 0, i32 5
  %81 = load i32, ptr %80, align 8
  %82 = load ptr, ptr %10, align 8
  %83 = load i32, ptr %82, align 4
  %84 = sub i32 %83, %81
  store i32 %84, ptr %82, align 4
  %85 = call i32 @BZ2_bzCompressEnd(ptr noundef %16)
  store i32 0, ptr %8, align 4
  br label %91

86:                                               ; preds = %74
  %87 = call i32 @BZ2_bzCompressEnd(ptr noundef %16)
  store i32 -8, ptr %8, align 4
  br label %91

88:                                               ; preds = %78
  %89 = call i32 @BZ2_bzCompressEnd(ptr noundef %16)
  %90 = load i32, ptr %17, align 4
  store i32 %90, ptr %8, align 4
  br label %91

91:                                               ; preds = %88, %86, %79, %59, %44
  %92 = load i32, ptr %8, align 4
  ret i32 %92
}

; Function Attrs: noinline nounwind ssp uwtable(sync)
define i32 @BZ2_bzBuffToBuffDecompress(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5) #0 {
  %7 = alloca i32, align 4
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %struct.bz_stream, align 8
  %15 = alloca i32, align 4
  store ptr %0, ptr %8, align 8
  store ptr %1, ptr %9, align 8
  store ptr %2, ptr %10, align 8
  store i32 %3, ptr %11, align 4
  store i32 %4, ptr %12, align 4
  store i32 %5, ptr %13, align 4
  %16 = load ptr, ptr %8, align 8
  %17 = icmp eq ptr %16, null
  br i1 %17, label %36, label %18

18:                                               ; preds = %6
  %19 = load ptr, ptr %9, align 8
  %20 = icmp eq ptr %19, null
  br i1 %20, label %36, label %21

21:                                               ; preds = %18
  %22 = load ptr, ptr %10, align 8
  %23 = icmp eq ptr %22, null
  br i1 %23, label %36, label %24

24:                                               ; preds = %21
  %25 = load i32, ptr %12, align 4
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %24
  %28 = load i32, ptr %12, align 4
  %29 = icmp ne i32 %28, 1
  br i1 %29, label %36, label %30

30:                                               ; preds = %27, %24
  %31 = load i32, ptr %13, align 4
  %32 = icmp slt i32 %31, 0
  br i1 %32, label %36, label %33

33:                                               ; preds = %30
  %34 = load i32, ptr %13, align 4
  %35 = icmp sgt i32 %34, 4
  br i1 %35, label %36, label %37

36:                                               ; preds = %33, %30, %27, %21, %18, %6
  store i32 -2, ptr %7, align 4
  br label %84

37:                                               ; preds = %33
  %38 = getelementptr inbounds %struct.bz_stream, ptr %14, i32 0, i32 9
  store ptr null, ptr %38, align 8
  %39 = getelementptr inbounds %struct.bz_stream, ptr %14, i32 0, i32 10
  store ptr null, ptr %39, align 8
  %40 = getelementptr inbounds %struct.bz_stream, ptr %14, i32 0, i32 11
  store ptr null, ptr %40, align 8
  %41 = load i32, ptr %13, align 4
  %42 = load i32, ptr %12, align 4
  %43 = call i32 @BZ2_bzDecompressInit(ptr noundef %14, i32 noundef %41, i32 noundef %42)
  store i32 %43, ptr %15, align 4
  %44 = load i32, ptr %15, align 4
  %45 = icmp ne i32 %44, 0
  br i1 %45, label %46, label %48

46:                                               ; preds = %37
  %47 = load i32, ptr %15, align 4
  store i32 %47, ptr %7, align 4
  br label %84

48:                                               ; preds = %37
  %49 = load ptr, ptr %10, align 8
  %50 = getelementptr inbounds %struct.bz_stream, ptr %14, i32 0, i32 0
  store ptr %49, ptr %50, align 8
  %51 = load ptr, ptr %8, align 8
  %52 = getelementptr inbounds %struct.bz_stream, ptr %14, i32 0, i32 4
  store ptr %51, ptr %52, align 8
  %53 = load i32, ptr %11, align 4
  %54 = getelementptr inbounds %struct.bz_stream, ptr %14, i32 0, i32 1
  store i32 %53, ptr %54, align 8
  %55 = load ptr, ptr %9, align 8
  %56 = load i32, ptr %55, align 4
  %57 = getelementptr inbounds %struct.bz_stream, ptr %14, i32 0, i32 5
  store i32 %56, ptr %57, align 8
  %58 = call i32 @BZ2_bzDecompress(ptr noundef %14)
  store i32 %58, ptr %15, align 4
  %59 = load i32, ptr %15, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %48
  br label %73

62:                                               ; preds = %48
  %63 = load i32, ptr %15, align 4
  %64 = icmp ne i32 %63, 4
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  br label %81

66:                                               ; preds = %62
  %67 = getelementptr inbounds %struct.bz_stream, ptr %14, i32 0, i32 5
  %68 = load i32, ptr %67, align 8
  %69 = load ptr, ptr %9, align 8
  %70 = load i32, ptr %69, align 4
  %71 = sub i32 %70, %68
  store i32 %71, ptr %69, align 4
  %72 = call i32 @BZ2_bzDecompressEnd(ptr noundef %14)
  store i32 0, ptr %7, align 4
  br label %84

73:                                               ; preds = %61
  %74 = getelementptr inbounds %struct.bz_stream, ptr %14, i32 0, i32 5
  %75 = load i32, ptr %74, align 8
  %76 = icmp ugt i32 %75, 0
  br i1 %76, label %77, label %79

77:                                               ; preds = %73
  %78 = call i32 @BZ2_bzDecompressEnd(ptr noundef %14)
  store i32 -7, ptr %7, align 4
  br label %84

79:                                               ; preds = %73
  %80 = call i32 @BZ2_bzDecompressEnd(ptr noundef %14)
  store i32 -8, ptr %7, align 4
  br label %84

81:                                               ; preds = %65
  %82 = call i32 @BZ2_bzDecompressEnd(ptr noundef %14)
  %83 = load i32, ptr %15, align 4
  store i32 %83, ptr %7, align 4
  br label %84

84:                                               ; preds = %81, %79, %77, %66, %46, %36
  %85 = load i32, ptr %7, align 4
  ret i32 %85
}

; Function Attrs: noinline nounwind ssp uwtable(sync)
define ptr @BZ2_bzopen(ptr noundef %0, ptr noundef %1) #0 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  store ptr %1, ptr %4, align 8
  %5 = load ptr, ptr %3, align 8
  %6 = load ptr, ptr %4, align 8
  %7 = tail call ptr @bzopen_or_bzdopen(ptr noundef %5, i32 noundef -1, ptr noundef %6, i32 noundef 0)
  ret ptr %7
}

; Function Attrs: noinline nounwind ssp uwtable(sync)
define internal ptr @bzopen_or_bzdopen(ptr noundef %0, i32 noundef %1, ptr noundef %2, i32 noundef %3) #0 {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca ptr, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca [5000 x i8], align 1
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca [10 x i8], align 1
  %15 = alloca ptr, align 8
  %16 = alloca ptr, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  store ptr %0, ptr %6, align 8
  store i32 %1, ptr %7, align 4
  store ptr %2, ptr %8, align 8
  store i32 %3, ptr %9, align 4
  store i32 9, ptr %12, align 4
  store i32 0, ptr %13, align 4
  call void @llvm.memset.p0.i64(ptr align 1 %14, i8 0, i64 10, i1 false)
  store ptr null, ptr %15, align 8
  store ptr null, ptr %16, align 8
  store i32 0, ptr %17, align 4
  store i32 30, ptr %18, align 4
  store i32 0, ptr %19, align 4
  store i32 0, ptr %20, align 4
  %21 = load ptr, ptr %8, align 8
  %22 = icmp eq ptr %21, null
  br i1 %22, label %23, label %24

23:                                               ; preds = %4
  store ptr null, ptr %5, align 8
  br label %134

24:                                               ; preds = %4
  %25 = load ptr, ptr %8, align 8
  %26 = load i8, ptr %25, align 1
  %27 = icmp ne i8 %26, 0
  br i1 %27, label %.lr.ph, label %53

.lr.ph:                                           ; preds = %24
  br label %28

28:                                               ; preds = %.lr.ph, %47
  %29 = load ptr, ptr %8, align 8
  %30 = load i8, ptr %29, align 1
  %31 = sext i8 %30 to i32
  switch i32 %31, label %35 [
    i32 114, label %32
    i32 119, label %33
    i32 115, label %34
  ]

32:                                               ; preds = %28
  store i32 0, ptr %13, align 4
  br label %47

33:                                               ; preds = %28
  store i32 1, ptr %13, align 4
  br label %47

34:                                               ; preds = %28
  store i32 1, ptr %19, align 4
  br label %47

35:                                               ; preds = %28
  %36 = load ptr, ptr %8, align 8
  %37 = load i8, ptr %36, align 1
  %38 = sext i8 %37 to i32
  %39 = tail call i32 @isdigit(i32 noundef %38) #10
  %40 = icmp ne i32 %39, 0
  br i1 %40, label %41, label %46

41:                                               ; preds = %35
  %42 = load ptr, ptr %8, align 8
  %43 = load i8, ptr %42, align 1
  %44 = sext i8 %43 to i32
  %45 = sub nsw i32 %44, 48
  store i32 %45, ptr %12, align 4
  br label %46

46:                                               ; preds = %41, %35
  br label %47

47:                                               ; preds = %46, %34, %33, %32
  %48 = load ptr, ptr %8, align 8
  %49 = getelementptr inbounds i8, ptr %48, i32 1
  store ptr %49, ptr %8, align 8
  %50 = load ptr, ptr %8, align 8
  %51 = load i8, ptr %50, align 1
  %52 = icmp ne i8 %51, 0
  br i1 %52, label %28, label %._crit_edge, !llvm.loop !9

._crit_edge:                                      ; preds = %47
  br label %53

53:                                               ; preds = %._crit_edge, %24
  %54 = getelementptr inbounds [10 x i8], ptr %14, i64 0, i64 0
  %55 = load i32, ptr %13, align 4
  %56 = icmp ne i32 %55, 0
  %57 = zext i1 %56 to i64
  %58 = select i1 %56, ptr @.str.6, ptr @.str.7
  %59 = call ptr @__strcat_chk(ptr noundef %54, ptr noundef %58, i64 noundef 10) #7
  %60 = getelementptr inbounds [10 x i8], ptr %14, i64 0, i64 0
  %61 = call ptr @__strcat_chk(ptr noundef %60, ptr noundef @.str.8, i64 noundef 10) #7
  %62 = load i32, ptr %9, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %85

64:                                               ; preds = %53
  %65 = load ptr, ptr %6, align 8
  %66 = icmp eq ptr %65, null
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = load ptr, ptr %6, align 8
  %69 = call i32 @strcmp(ptr noundef %68, ptr noundef @.str.9) #7
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %80

71:                                               ; preds = %67, %64
  %72 = load i32, ptr %13, align 4
  %73 = icmp ne i32 %72, 0
  br i1 %73, label %74, label %76

74:                                               ; preds = %71
  %75 = load ptr, ptr @__stdoutp, align 8
  br label %78

76:                                               ; preds = %71
  %77 = load ptr, ptr @__stdinp, align 8
  br label %78

78:                                               ; preds = %76, %74
  %79 = phi ptr [ %75, %74 ], [ %77, %76 ]
  store ptr %79, ptr %15, align 8
  br label %84

80:                                               ; preds = %67
  %81 = load ptr, ptr %6, align 8
  %82 = getelementptr inbounds [10 x i8], ptr %14, i64 0, i64 0
  %83 = call ptr @"\01_fopen"(ptr noundef %81, ptr noundef %82)
  store ptr %83, ptr %15, align 8
  br label %84

84:                                               ; preds = %80, %78
  br label %89

85:                                               ; preds = %53
  %86 = load i32, ptr %7, align 4
  %87 = getelementptr inbounds [10 x i8], ptr %14, i64 0, i64 0
  %88 = call ptr @"\01_fdopen"(i32 noundef %86, ptr noundef %87)
  store ptr %88, ptr %15, align 8
  br label %89

89:                                               ; preds = %85, %84
  %90 = load ptr, ptr %15, align 8
  %91 = icmp eq ptr %90, null
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  store ptr null, ptr %5, align 8
  br label %134

93:                                               ; preds = %89
  %94 = load i32, ptr %13, align 4
  %95 = icmp ne i32 %94, 0
  br i1 %95, label %96, label %110

96:                                               ; preds = %93
  %97 = load i32, ptr %12, align 4
  %98 = icmp slt i32 %97, 1
  br i1 %98, label %99, label %100

99:                                               ; preds = %96
  store i32 1, ptr %12, align 4
  br label %100

100:                                              ; preds = %99, %96
  %101 = load i32, ptr %12, align 4
  %102 = icmp sgt i32 %101, 9
  br i1 %102, label %103, label %104

103:                                              ; preds = %100
  store i32 9, ptr %12, align 4
  br label %104

104:                                              ; preds = %103, %100
  %105 = load ptr, ptr %15, align 8
  %106 = load i32, ptr %12, align 4
  %107 = load i32, ptr %17, align 4
  %108 = load i32, ptr %18, align 4
  %109 = call ptr @BZ2_bzWriteOpen(ptr noundef %10, ptr noundef %105, i32 noundef %106, i32 noundef %107, i32 noundef %108)
  store ptr %109, ptr %16, align 8
  br label %117

110:                                              ; preds = %93
  %111 = load ptr, ptr %15, align 8
  %112 = load i32, ptr %17, align 4
  %113 = load i32, ptr %19, align 4
  %114 = getelementptr inbounds [5000 x i8], ptr %11, i64 0, i64 0
  %115 = load i32, ptr %20, align 4
  %116 = call ptr @BZ2_bzReadOpen(ptr noundef %10, ptr noundef %111, i32 noundef %112, i32 noundef %113, ptr noundef %114, i32 noundef %115)
  store ptr %116, ptr %16, align 8
  br label %117

117:                                              ; preds = %110, %104
  %118 = load ptr, ptr %16, align 8
  %119 = icmp eq ptr %118, null
  br i1 %119, label %120, label %132

120:                                              ; preds = %117
  %121 = load ptr, ptr %15, align 8
  %122 = load ptr, ptr @__stdinp, align 8
  %123 = icmp ne ptr %121, %122
  br i1 %123, label %124, label %131

124:                                              ; preds = %120
  %125 = load ptr, ptr %15, align 8
  %126 = load ptr, ptr @__stdoutp, align 8
  %127 = icmp ne ptr %125, %126
  br i1 %127, label %128, label %131

128:                                              ; preds = %124
  %129 = load ptr, ptr %15, align 8
  %130 = call i32 @fclose(ptr noundef %129)
  br label %131

131:                                              ; preds = %128, %124, %120
  store ptr null, ptr %5, align 8
  br label %134

132:                                              ; preds = %117
  %133 = load ptr, ptr %16, align 8
  store ptr %133, ptr %5, align 8
  br label %134

134:                                              ; preds = %132, %131, %92, %23
  %135 = load ptr, ptr %5, align 8
  ret ptr %135
}

; Function Attrs: noinline nounwind ssp uwtable(sync)
define ptr @BZ2_bzdopen(i32 noundef %0, ptr noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca ptr, align 8
  store i32 %0, ptr %3, align 4
  store ptr %1, ptr %4, align 8
  %5 = load i32, ptr %3, align 4
  %6 = load ptr, ptr %4, align 8
  %7 = tail call ptr @bzopen_or_bzdopen(ptr noundef null, i32 noundef %5, ptr noundef %6, i32 noundef 1)
  ret ptr %7
}

; Function Attrs: noinline nounwind ssp uwtable(sync)
define i32 @BZ2_bzread(ptr noundef %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store ptr %0, ptr %5, align 8
  store ptr %1, ptr %6, align 8
  store i32 %2, ptr %7, align 4
  %10 = load ptr, ptr %5, align 8
  %11 = getelementptr inbounds %struct.bzFile, ptr %10, i32 0, i32 5
  %12 = load i32, ptr %11, align 8
  %13 = icmp eq i32 %12, 4
  br i1 %13, label %14, label %15

14:                                               ; preds = %3
  store i32 0, ptr %4, align 4
  br label %28

15:                                               ; preds = %3
  %16 = load ptr, ptr %5, align 8
  %17 = load ptr, ptr %6, align 8
  %18 = load i32, ptr %7, align 4
  %19 = call i32 @BZ2_bzRead(ptr noundef %8, ptr noundef %16, ptr noundef %17, i32 noundef %18)
  store i32 %19, ptr %9, align 4
  %20 = load i32, ptr %8, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %15
  %23 = load i32, ptr %8, align 4
  %24 = icmp eq i32 %23, 4
  br i1 %24, label %25, label %27

25:                                               ; preds = %22, %15
  %26 = load i32, ptr %9, align 4
  store i32 %26, ptr %4, align 4
  br label %28

27:                                               ; preds = %22
  store i32 -1, ptr %4, align 4
  br label %28

28:                                               ; preds = %27, %25, %14
  %29 = load i32, ptr %4, align 4
  ret i32 %29
}

; Function Attrs: noinline nounwind ssp uwtable(sync)
define i32 @BZ2_bzwrite(ptr noundef %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store ptr %0, ptr %5, align 8
  store ptr %1, ptr %6, align 8
  store i32 %2, ptr %7, align 4
  %9 = load ptr, ptr %5, align 8
  %10 = load ptr, ptr %6, align 8
  %11 = load i32, ptr %7, align 4
  call void @BZ2_bzWrite(ptr noundef %8, ptr noundef %9, ptr noundef %10, i32 noundef %11)
  %12 = load i32, ptr %8, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %3
  %15 = load i32, ptr %7, align 4
  store i32 %15, ptr %4, align 4
  br label %17

16:                                               ; preds = %3
  store i32 -1, ptr %4, align 4
  br label %17

17:                                               ; preds = %16, %14
  %18 = load i32, ptr %4, align 4
  ret i32 %18
}

; Function Attrs: noinline nounwind ssp uwtable(sync)
define i32 @BZ2_bzflush(ptr noundef %0) #0 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  ret i32 0
}

; Function Attrs: noinline nounwind ssp uwtable(sync)
define void @BZ2_bzclose(ptr noundef %0) #0 {
  %2 = alloca ptr, align 8
  %3 = alloca i32, align 4
  %4 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  %5 = load ptr, ptr %2, align 8
  %6 = icmp eq ptr %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %1
  br label %36

8:                                                ; preds = %1
  %9 = load ptr, ptr %2, align 8
  %10 = getelementptr inbounds %struct.bzFile, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  store ptr %11, ptr %4, align 8
  %12 = load ptr, ptr %2, align 8
  %13 = getelementptr inbounds %struct.bzFile, ptr %12, i32 0, i32 3
  %14 = load i8, ptr %13, align 4
  %15 = icmp ne i8 %14, 0
  br i1 %15, label %16, label %23

16:                                               ; preds = %8
  %17 = load ptr, ptr %2, align 8
  call void @BZ2_bzWriteClose(ptr noundef %3, ptr noundef %17, i32 noundef 0, ptr noundef null, ptr noundef null)
  %18 = load i32, ptr %3, align 4
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %16
  %21 = load ptr, ptr %2, align 8
  call void @BZ2_bzWriteClose(ptr noundef null, ptr noundef %21, i32 noundef 1, ptr noundef null, ptr noundef null)
  br label %22

22:                                               ; preds = %20, %16
  br label %25

23:                                               ; preds = %8
  %24 = load ptr, ptr %2, align 8
  call void @BZ2_bzReadClose(ptr noundef %3, ptr noundef %24)
  br label %25

25:                                               ; preds = %23, %22
  %26 = load ptr, ptr %4, align 8
  %27 = load ptr, ptr @__stdinp, align 8
  %28 = icmp ne ptr %26, %27
  br i1 %28, label %29, label %36

29:                                               ; preds = %25
  %30 = load ptr, ptr %4, align 8
  %31 = load ptr, ptr @__stdoutp, align 8
  %32 = icmp ne ptr %30, %31
  br i1 %32, label %33, label %36

33:                                               ; preds = %29
  %34 = load ptr, ptr %4, align 8
  %35 = call i32 @fclose(ptr noundef %34)
  br label %36

36:                                               ; preds = %33, %29, %25, %7
  ret void
}

declare i32 @fclose(ptr noundef) #3

; Function Attrs: noinline nounwind ssp uwtable(sync)
define ptr @BZ2_bzerror(ptr noundef %0, ptr noundef %1) #0 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  store ptr %0, ptr %3, align 8
  store ptr %1, ptr %4, align 8
  %6 = load ptr, ptr %3, align 8
  %7 = getelementptr inbounds %struct.bzFile, ptr %6, i32 0, i32 5
  %8 = load i32, ptr %7, align 8
  store i32 %8, ptr %5, align 4
  %9 = load i32, ptr %5, align 4
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %2
  store i32 0, ptr %5, align 4
  br label %12

12:                                               ; preds = %11, %2
  %13 = load i32, ptr %5, align 4
  %14 = load ptr, ptr %4, align 8
  store i32 %13, ptr %14, align 4
  %15 = load i32, ptr %5, align 4
  %16 = mul nsw i32 %15, -1
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds [16 x ptr], ptr @bzerrorstrings, i64 0, i64 %17
  %19 = load ptr, ptr %18, align 8
  ret ptr %19
}

; Function Attrs: noinline nounwind ssp uwtable(sync)
define internal zeroext i8 @copy_output_until_stop(ptr noundef %0) #0 {
  %2 = alloca ptr, align 8
  %3 = alloca i8, align 1
  store ptr %0, ptr %2, align 8
  store i8 0, ptr %3, align 1
  %4 = load ptr, ptr %2, align 8
  %5 = load ptr, ptr %4, align 8
  %6 = getelementptr inbounds %struct.bz_stream, ptr %5, i32 0, i32 5
  %7 = load i32, ptr %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %.lr.ph

.lr.ph:                                           ; preds = %1
  br label %10

._crit_edge:                                      ; preds = %63
  br label %9

9:                                                ; preds = %._crit_edge, %1
  br label %69

10:                                               ; preds = %.lr.ph, %63
  %11 = load ptr, ptr %2, align 8
  %12 = getelementptr inbounds %struct.EState, ptr %11, i32 0, i32 20
  %13 = load i32, ptr %12, align 8
  %14 = load ptr, ptr %2, align 8
  %15 = getelementptr inbounds %struct.EState, ptr %14, i32 0, i32 19
  %16 = load i32, ptr %15, align 4
  %17 = icmp sge i32 %13, %16
  br i1 %17, label %18, label %19

18:                                               ; preds = %10
  br label %69

19:                                               ; preds = %10
  store i8 1, ptr %3, align 1
  %20 = load ptr, ptr %2, align 8
  %21 = getelementptr inbounds %struct.EState, ptr %20, i32 0, i32 11
  %22 = load ptr, ptr %21, align 8
  %23 = load ptr, ptr %2, align 8
  %24 = getelementptr inbounds %struct.EState, ptr %23, i32 0, i32 20
  %25 = load i32, ptr %24, align 8
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i8, ptr %22, i64 %26
  %28 = load i8, ptr %27, align 1
  %29 = load ptr, ptr %2, align 8
  %30 = load ptr, ptr %29, align 8
  %31 = getelementptr inbounds %struct.bz_stream, ptr %30, i32 0, i32 4
  %32 = load ptr, ptr %31, align 8
  store i8 %28, ptr %32, align 1
  %33 = load ptr, ptr %2, align 8
  %34 = getelementptr inbounds %struct.EState, ptr %33, i32 0, i32 20
  %35 = load i32, ptr %34, align 8
  %36 = add nsw i32 %35, 1
  store i32 %36, ptr %34, align 8
  %37 = load ptr, ptr %2, align 8
  %38 = load ptr, ptr %37, align 8
  %39 = getelementptr inbounds %struct.bz_stream, ptr %38, i32 0, i32 5
  %40 = load i32, ptr %39, align 8
  %41 = add i32 %40, -1
  store i32 %41, ptr %39, align 8
  %42 = load ptr, ptr %2, align 8
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %struct.bz_stream, ptr %43, i32 0, i32 4
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds i8, ptr %45, i32 1
  store ptr %46, ptr %44, align 8
  %47 = load ptr, ptr %2, align 8
  %48 = load ptr, ptr %47, align 8
  %49 = getelementptr inbounds %struct.bz_stream, ptr %48, i32 0, i32 6
  %50 = load i32, ptr %49, align 4
  %51 = add i32 %50, 1
  store i32 %51, ptr %49, align 4
  %52 = load ptr, ptr %2, align 8
  %53 = load ptr, ptr %52, align 8
  %54 = getelementptr inbounds %struct.bz_stream, ptr %53, i32 0, i32 6
  %55 = load i32, ptr %54, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %63

57:                                               ; preds = %19
  %58 = load ptr, ptr %2, align 8
  %59 = load ptr, ptr %58, align 8
  %60 = getelementptr inbounds %struct.bz_stream, ptr %59, i32 0, i32 7
  %61 = load i32, ptr %60, align 8
  %62 = add i32 %61, 1
  store i32 %62, ptr %60, align 8
  br label %63

63:                                               ; preds = %57, %19
  %64 = load ptr, ptr %2, align 8
  %65 = load ptr, ptr %64, align 8
  %66 = getelementptr inbounds %struct.bz_stream, ptr %65, i32 0, i32 5
  %67 = load i32, ptr %66, align 8
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %._crit_edge, label %10

69:                                               ; preds = %18, %9
  %70 = load i8, ptr %3, align 1
  ret i8 %70
}

; Function Attrs: noinline nounwind ssp uwtable(sync)
define internal zeroext i8 @copy_input_until_stop(ptr noundef %0) #0 {
  %2 = alloca ptr, align 8
  %3 = alloca i8, align 1
  %4 = alloca i32, align 4
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca i8, align 1
  store ptr %0, ptr %2, align 8
  store i8 0, ptr %3, align 1
  %8 = load ptr, ptr %2, align 8
  %9 = getelementptr inbounds %struct.EState, ptr %8, i32 0, i32 1
  %10 = load i32, ptr %9, align 8
  %11 = icmp eq i32 %10, 2
  br i1 %11, label %12, label %154

12:                                               ; preds = %1
  %13 = load ptr, ptr %2, align 8
  %14 = getelementptr inbounds %struct.EState, ptr %13, i32 0, i32 17
  %15 = load i32, ptr %14, align 4
  %16 = load ptr, ptr %2, align 8
  %17 = getelementptr inbounds %struct.EState, ptr %16, i32 0, i32 18
  %18 = load i32, ptr %17, align 8
  %19 = icmp sge i32 %15, %18
  br i1 %19, label %20, label %.lr.ph2

.lr.ph2:                                          ; preds = %12
  br label %21

._crit_edge3:                                     ; preds = %145
  br label %20

20:                                               ; preds = %._crit_edge3, %12
  br label %153

21:                                               ; preds = %.lr.ph2, %145
  %22 = load ptr, ptr %2, align 8
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds %struct.bz_stream, ptr %23, i32 0, i32 1
  %25 = load i32, ptr %24, align 8
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %21
  br label %153

28:                                               ; preds = %21
  store i8 1, ptr %3, align 1
  %29 = load ptr, ptr %2, align 8
  %30 = load ptr, ptr %29, align 8
  %31 = load ptr, ptr %30, align 8
  %32 = load i8, ptr %31, align 1
  %33 = zext i8 %32 to i32
  store i32 %33, ptr %4, align 4
  %34 = load i32, ptr %4, align 4
  %35 = load ptr, ptr %2, align 8
  %36 = getelementptr inbounds %struct.EState, ptr %35, i32 0, i32 13
  %37 = load i32, ptr %36, align 4
  %38 = icmp ne i32 %34, %37
  br i1 %38, label %39, label %89

39:                                               ; preds = %28
  %40 = load ptr, ptr %2, align 8
  %41 = getelementptr inbounds %struct.EState, ptr %40, i32 0, i32 14
  %42 = load i32, ptr %41, align 8
  %43 = icmp eq i32 %42, 1
  br i1 %43, label %44, label %89

44:                                               ; preds = %39
  %45 = load ptr, ptr %2, align 8
  %46 = getelementptr inbounds %struct.EState, ptr %45, i32 0, i32 13
  %47 = load i32, ptr %46, align 4
  %48 = trunc i32 %47 to i8
  store i8 %48, ptr %5, align 1
  %49 = load ptr, ptr %2, align 8
  %50 = getelementptr inbounds %struct.EState, ptr %49, i32 0, i32 26
  %51 = load i32, ptr %50, align 8
  %52 = shl i32 %51, 8
  %53 = load ptr, ptr %2, align 8
  %54 = getelementptr inbounds %struct.EState, ptr %53, i32 0, i32 26
  %55 = load i32, ptr %54, align 8
  %56 = lshr i32 %55, 24
  %57 = load i8, ptr %5, align 1
  %58 = zext i8 %57 to i32
  %59 = xor i32 %56, %58
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds [256 x i32], ptr @BZ2_crc32Table, i64 0, i64 %60
  %62 = load i32, ptr %61, align 4
  %63 = xor i32 %52, %62
  %64 = load ptr, ptr %2, align 8
  %65 = getelementptr inbounds %struct.EState, ptr %64, i32 0, i32 26
  store i32 %63, ptr %65, align 8
  %66 = load ptr, ptr %2, align 8
  %67 = getelementptr inbounds %struct.EState, ptr %66, i32 0, i32 22
  %68 = load ptr, ptr %2, align 8
  %69 = getelementptr inbounds %struct.EState, ptr %68, i32 0, i32 13
  %70 = load i32, ptr %69, align 4
  %71 = zext i32 %70 to i64
  %72 = getelementptr inbounds [256 x i8], ptr %67, i64 0, i64 %71
  store i8 1, ptr %72, align 1
  %73 = load i8, ptr %5, align 1
  %74 = load ptr, ptr %2, align 8
  %75 = getelementptr inbounds %struct.EState, ptr %74, i32 0, i32 9
  %76 = load ptr, ptr %75, align 8
  %77 = load ptr, ptr %2, align 8
  %78 = getelementptr inbounds %struct.EState, ptr %77, i32 0, i32 17
  %79 = load i32, ptr %78, align 4
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds i8, ptr %76, i64 %80
  store i8 %73, ptr %81, align 1
  %82 = load ptr, ptr %2, align 8
  %83 = getelementptr inbounds %struct.EState, ptr %82, i32 0, i32 17
  %84 = load i32, ptr %83, align 4
  %85 = add nsw i32 %84, 1
  store i32 %85, ptr %83, align 4
  %86 = load i32, ptr %4, align 4
  %87 = load ptr, ptr %2, align 8
  %88 = getelementptr inbounds %struct.EState, ptr %87, i32 0, i32 13
  store i32 %86, ptr %88, align 4
  br label %119

89:                                               ; preds = %39, %28
  %90 = load i32, ptr %4, align 4
  %91 = load ptr, ptr %2, align 8
  %92 = getelementptr inbounds %struct.EState, ptr %91, i32 0, i32 13
  %93 = load i32, ptr %92, align 4
  %94 = icmp ne i32 %90, %93
  br i1 %94, label %100, label %95

95:                                               ; preds = %89
  %96 = load ptr, ptr %2, align 8
  %97 = getelementptr inbounds %struct.EState, ptr %96, i32 0, i32 14
  %98 = load i32, ptr %97, align 8
  %99 = icmp eq i32 %98, 255
  br i1 %99, label %100, label %113

100:                                              ; preds = %95, %89
  %101 = load ptr, ptr %2, align 8
  %102 = getelementptr inbounds %struct.EState, ptr %101, i32 0, i32 13
  %103 = load i32, ptr %102, align 4
  %104 = icmp ult i32 %103, 256
  br i1 %104, label %105, label %107

105:                                              ; preds = %100
  %106 = load ptr, ptr %2, align 8
  tail call void @add_pair_to_block(ptr noundef %106)
  br label %107

107:                                              ; preds = %105, %100
  %108 = load i32, ptr %4, align 4
  %109 = load ptr, ptr %2, align 8
  %110 = getelementptr inbounds %struct.EState, ptr %109, i32 0, i32 13
  store i32 %108, ptr %110, align 4
  %111 = load ptr, ptr %2, align 8
  %112 = getelementptr inbounds %struct.EState, ptr %111, i32 0, i32 14
  store i32 1, ptr %112, align 8
  br label %118

113:                                              ; preds = %95
  %114 = load ptr, ptr %2, align 8
  %115 = getelementptr inbounds %struct.EState, ptr %114, i32 0, i32 14
  %116 = load i32, ptr %115, align 8
  %117 = add nsw i32 %116, 1
  store i32 %117, ptr %115, align 8
  br label %118

118:                                              ; preds = %113, %107
  br label %119

119:                                              ; preds = %118, %44
  %120 = load ptr, ptr %2, align 8
  %121 = load ptr, ptr %120, align 8
  %122 = load ptr, ptr %121, align 8
  %123 = getelementptr inbounds i8, ptr %122, i32 1
  store ptr %123, ptr %121, align 8
  %124 = load ptr, ptr %2, align 8
  %125 = load ptr, ptr %124, align 8
  %126 = getelementptr inbounds %struct.bz_stream, ptr %125, i32 0, i32 1
  %127 = load i32, ptr %126, align 8
  %128 = add i32 %127, -1
  store i32 %128, ptr %126, align 8
  %129 = load ptr, ptr %2, align 8
  %130 = load ptr, ptr %129, align 8
  %131 = getelementptr inbounds %struct.bz_stream, ptr %130, i32 0, i32 2
  %132 = load i32, ptr %131, align 4
  %133 = add i32 %132, 1
  store i32 %133, ptr %131, align 4
  %134 = load ptr, ptr %2, align 8
  %135 = load ptr, ptr %134, align 8
  %136 = getelementptr inbounds %struct.bz_stream, ptr %135, i32 0, i32 2
  %137 = load i32, ptr %136, align 4
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %145

139:                                              ; preds = %119
  %140 = load ptr, ptr %2, align 8
  %141 = load ptr, ptr %140, align 8
  %142 = getelementptr inbounds %struct.bz_stream, ptr %141, i32 0, i32 3
  %143 = load i32, ptr %142, align 8
  %144 = add i32 %143, 1
  store i32 %144, ptr %142, align 8
  br label %145

145:                                              ; preds = %139, %119
  %146 = load ptr, ptr %2, align 8
  %147 = getelementptr inbounds %struct.EState, ptr %146, i32 0, i32 17
  %148 = load i32, ptr %147, align 4
  %149 = load ptr, ptr %2, align 8
  %150 = getelementptr inbounds %struct.EState, ptr %149, i32 0, i32 18
  %151 = load i32, ptr %150, align 8
  %152 = icmp sge i32 %148, %151
  br i1 %152, label %._crit_edge3, label %21

153:                                              ; preds = %27, %20
  br label %306

154:                                              ; preds = %1
  %155 = load ptr, ptr %2, align 8
  %156 = getelementptr inbounds %struct.EState, ptr %155, i32 0, i32 17
  %157 = load i32, ptr %156, align 4
  %158 = load ptr, ptr %2, align 8
  %159 = getelementptr inbounds %struct.EState, ptr %158, i32 0, i32 18
  %160 = load i32, ptr %159, align 8
  %161 = icmp sge i32 %157, %160
  br i1 %161, label %162, label %.lr.ph

.lr.ph:                                           ; preds = %154
  br label %163

._crit_edge:                                      ; preds = %293
  br label %162

162:                                              ; preds = %._crit_edge, %154
  br label %305

163:                                              ; preds = %.lr.ph, %293
  %164 = load ptr, ptr %2, align 8
  %165 = load ptr, ptr %164, align 8
  %166 = getelementptr inbounds %struct.bz_stream, ptr %165, i32 0, i32 1
  %167 = load i32, ptr %166, align 8
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %170

169:                                              ; preds = %163
  br label %305

170:                                              ; preds = %163
  %171 = load ptr, ptr %2, align 8
  %172 = getelementptr inbounds %struct.EState, ptr %171, i32 0, i32 3
  %173 = load i32, ptr %172, align 8
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %176

175:                                              ; preds = %170
  br label %305

176:                                              ; preds = %170
  store i8 1, ptr %3, align 1
  %177 = load ptr, ptr %2, align 8
  %178 = load ptr, ptr %177, align 8
  %179 = load ptr, ptr %178, align 8
  %180 = load i8, ptr %179, align 1
  %181 = zext i8 %180 to i32
  store i32 %181, ptr %6, align 4
  %182 = load i32, ptr %6, align 4
  %183 = load ptr, ptr %2, align 8
  %184 = getelementptr inbounds %struct.EState, ptr %183, i32 0, i32 13
  %185 = load i32, ptr %184, align 4
  %186 = icmp ne i32 %182, %185
  br i1 %186, label %187, label %237

187:                                              ; preds = %176
  %188 = load ptr, ptr %2, align 8
  %189 = getelementptr inbounds %struct.EState, ptr %188, i32 0, i32 14
  %190 = load i32, ptr %189, align 8
  %191 = icmp eq i32 %190, 1
  br i1 %191, label %192, label %237

192:                                              ; preds = %187
  %193 = load ptr, ptr %2, align 8
  %194 = getelementptr inbounds %struct.EState, ptr %193, i32 0, i32 13
  %195 = load i32, ptr %194, align 4
  %196 = trunc i32 %195 to i8
  store i8 %196, ptr %7, align 1
  %197 = load ptr, ptr %2, align 8
  %198 = getelementptr inbounds %struct.EState, ptr %197, i32 0, i32 26
  %199 = load i32, ptr %198, align 8
  %200 = shl i32 %199, 8
  %201 = load ptr, ptr %2, align 8
  %202 = getelementptr inbounds %struct.EState, ptr %201, i32 0, i32 26
  %203 = load i32, ptr %202, align 8
  %204 = lshr i32 %203, 24
  %205 = load i8, ptr %7, align 1
  %206 = zext i8 %205 to i32
  %207 = xor i32 %204, %206
  %208 = zext i32 %207 to i64
  %209 = getelementptr inbounds [256 x i32], ptr @BZ2_crc32Table, i64 0, i64 %208
  %210 = load i32, ptr %209, align 4
  %211 = xor i32 %200, %210
  %212 = load ptr, ptr %2, align 8
  %213 = getelementptr inbounds %struct.EState, ptr %212, i32 0, i32 26
  store i32 %211, ptr %213, align 8
  %214 = load ptr, ptr %2, align 8
  %215 = getelementptr inbounds %struct.EState, ptr %214, i32 0, i32 22
  %216 = load ptr, ptr %2, align 8
  %217 = getelementptr inbounds %struct.EState, ptr %216, i32 0, i32 13
  %218 = load i32, ptr %217, align 4
  %219 = zext i32 %218 to i64
  %220 = getelementptr inbounds [256 x i8], ptr %215, i64 0, i64 %219
  store i8 1, ptr %220, align 1
  %221 = load i8, ptr %7, align 1
  %222 = load ptr, ptr %2, align 8
  %223 = getelementptr inbounds %struct.EState, ptr %222, i32 0, i32 9
  %224 = load ptr, ptr %223, align 8
  %225 = load ptr, ptr %2, align 8
  %226 = getelementptr inbounds %struct.EState, ptr %225, i32 0, i32 17
  %227 = load i32, ptr %226, align 4
  %228 = sext i32 %227 to i64
  %229 = getelementptr inbounds i8, ptr %224, i64 %228
  store i8 %221, ptr %229, align 1
  %230 = load ptr, ptr %2, align 8
  %231 = getelementptr inbounds %struct.EState, ptr %230, i32 0, i32 17
  %232 = load i32, ptr %231, align 4
  %233 = add nsw i32 %232, 1
  store i32 %233, ptr %231, align 4
  %234 = load i32, ptr %6, align 4
  %235 = load ptr, ptr %2, align 8
  %236 = getelementptr inbounds %struct.EState, ptr %235, i32 0, i32 13
  store i32 %234, ptr %236, align 4
  br label %267

237:                                              ; preds = %187, %176
  %238 = load i32, ptr %6, align 4
  %239 = load ptr, ptr %2, align 8
  %240 = getelementptr inbounds %struct.EState, ptr %239, i32 0, i32 13
  %241 = load i32, ptr %240, align 4
  %242 = icmp ne i32 %238, %241
  br i1 %242, label %248, label %243

243:                                              ; preds = %237
  %244 = load ptr, ptr %2, align 8
  %245 = getelementptr inbounds %struct.EState, ptr %244, i32 0, i32 14
  %246 = load i32, ptr %245, align 8
  %247 = icmp eq i32 %246, 255
  br i1 %247, label %248, label %261

248:                                              ; preds = %243, %237
  %249 = load ptr, ptr %2, align 8
  %250 = getelementptr inbounds %struct.EState, ptr %249, i32 0, i32 13
  %251 = load i32, ptr %250, align 4
  %252 = icmp ult i32 %251, 256
  br i1 %252, label %253, label %255

253:                                              ; preds = %248
  %254 = load ptr, ptr %2, align 8
  tail call void @add_pair_to_block(ptr noundef %254)
  br label %255

255:                                              ; preds = %253, %248
  %256 = load i32, ptr %6, align 4
  %257 = load ptr, ptr %2, align 8
  %258 = getelementptr inbounds %struct.EState, ptr %257, i32 0, i32 13
  store i32 %256, ptr %258, align 4
  %259 = load ptr, ptr %2, align 8
  %260 = getelementptr inbounds %struct.EState, ptr %259, i32 0, i32 14
  store i32 1, ptr %260, align 8
  br label %266

261:                                              ; preds = %243
  %262 = load ptr, ptr %2, align 8
  %263 = getelementptr inbounds %struct.EState, ptr %262, i32 0, i32 14
  %264 = load i32, ptr %263, align 8
  %265 = add nsw i32 %264, 1
  store i32 %265, ptr %263, align 8
  br label %266

266:                                              ; preds = %261, %255
  br label %267

267:                                              ; preds = %266, %192
  %268 = load ptr, ptr %2, align 8
  %269 = load ptr, ptr %268, align 8
  %270 = load ptr, ptr %269, align 8
  %271 = getelementptr inbounds i8, ptr %270, i32 1
  store ptr %271, ptr %269, align 8
  %272 = load ptr, ptr %2, align 8
  %273 = load ptr, ptr %272, align 8
  %274 = getelementptr inbounds %struct.bz_stream, ptr %273, i32 0, i32 1
  %275 = load i32, ptr %274, align 8
  %276 = add i32 %275, -1
  store i32 %276, ptr %274, align 8
  %277 = load ptr, ptr %2, align 8
  %278 = load ptr, ptr %277, align 8
  %279 = getelementptr inbounds %struct.bz_stream, ptr %278, i32 0, i32 2
  %280 = load i32, ptr %279, align 4
  %281 = add i32 %280, 1
  store i32 %281, ptr %279, align 4
  %282 = load ptr, ptr %2, align 8
  %283 = load ptr, ptr %282, align 8
  %284 = getelementptr inbounds %struct.bz_stream, ptr %283, i32 0, i32 2
  %285 = load i32, ptr %284, align 4
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %287, label %293

287:                                              ; preds = %267
  %288 = load ptr, ptr %2, align 8
  %289 = load ptr, ptr %288, align 8
  %290 = getelementptr inbounds %struct.bz_stream, ptr %289, i32 0, i32 3
  %291 = load i32, ptr %290, align 8
  %292 = add i32 %291, 1
  store i32 %292, ptr %290, align 8
  br label %293

293:                                              ; preds = %287, %267
  %294 = load ptr, ptr %2, align 8
  %295 = getelementptr inbounds %struct.EState, ptr %294, i32 0, i32 3
  %296 = load i32, ptr %295, align 8
  %297 = add i32 %296, -1
  store i32 %297, ptr %295, align 8
  %298 = load ptr, ptr %2, align 8
  %299 = getelementptr inbounds %struct.EState, ptr %298, i32 0, i32 17
  %300 = load i32, ptr %299, align 4
  %301 = load ptr, ptr %2, align 8
  %302 = getelementptr inbounds %struct.EState, ptr %301, i32 0, i32 18
  %303 = load i32, ptr %302, align 8
  %304 = icmp sge i32 %300, %303
  br i1 %304, label %._crit_edge, label %163

305:                                              ; preds = %175, %169, %162
  br label %306

306:                                              ; preds = %305, %153
  %307 = load i8, ptr %3, align 1
  ret i8 %307
}

; Function Attrs: noinline nounwind ssp uwtable(sync)
define internal void @flush_RL(ptr noundef %0) #0 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds %struct.EState, ptr %3, i32 0, i32 13
  %5 = load i32, ptr %4, align 4
  %6 = icmp ult i32 %5, 256
  br i1 %6, label %7, label %9

7:                                                ; preds = %1
  %8 = load ptr, ptr %2, align 8
  tail call void @add_pair_to_block(ptr noundef %8)
  br label %9

9:                                                ; preds = %7, %1
  %10 = load ptr, ptr %2, align 8
  tail call void @init_RL(ptr noundef %10)
  ret void
}

declare void @BZ2_compressBlock(ptr noundef, i8 noundef zeroext) #3

; Function Attrs: noinline nounwind ssp uwtable(sync)
define internal void @add_pair_to_block(ptr noundef %0) #0 {
  %2 = alloca ptr, align 8
  %3 = alloca i32, align 4
  %4 = alloca i8, align 1
  store ptr %0, ptr %2, align 8
  %5 = load ptr, ptr %2, align 8
  %6 = getelementptr inbounds %struct.EState, ptr %5, i32 0, i32 13
  %7 = load i32, ptr %6, align 4
  %8 = trunc i32 %7 to i8
  store i8 %8, ptr %4, align 1
  store i32 0, ptr %3, align 4
  %9 = load i32, ptr %3, align 4
  %10 = load ptr, ptr %2, align 8
  %11 = getelementptr inbounds %struct.EState, ptr %10, i32 0, i32 14
  %12 = load i32, ptr %11, align 8
  %13 = icmp slt i32 %9, %12
  br i1 %13, label %.lr.ph, label %39

.lr.ph:                                           ; preds = %1
  br label %14

14:                                               ; preds = %.lr.ph, %14
  %15 = load ptr, ptr %2, align 8
  %16 = getelementptr inbounds %struct.EState, ptr %15, i32 0, i32 26
  %17 = load i32, ptr %16, align 8
  %18 = shl i32 %17, 8
  %19 = load ptr, ptr %2, align 8
  %20 = getelementptr inbounds %struct.EState, ptr %19, i32 0, i32 26
  %21 = load i32, ptr %20, align 8
  %22 = lshr i32 %21, 24
  %23 = load i8, ptr %4, align 1
  %24 = zext i8 %23 to i32
  %25 = xor i32 %22, %24
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds [256 x i32], ptr @BZ2_crc32Table, i64 0, i64 %26
  %28 = load i32, ptr %27, align 4
  %29 = xor i32 %18, %28
  %30 = load ptr, ptr %2, align 8
  %31 = getelementptr inbounds %struct.EState, ptr %30, i32 0, i32 26
  store i32 %29, ptr %31, align 8
  %32 = load i32, ptr %3, align 4
  %33 = add nsw i32 %32, 1
  store i32 %33, ptr %3, align 4
  %34 = load i32, ptr %3, align 4
  %35 = load ptr, ptr %2, align 8
  %36 = getelementptr inbounds %struct.EState, ptr %35, i32 0, i32 14
  %37 = load i32, ptr %36, align 8
  %38 = icmp slt i32 %34, %37
  br i1 %38, label %14, label %._crit_edge, !llvm.loop !10

._crit_edge:                                      ; preds = %14
  br label %39

39:                                               ; preds = %._crit_edge, %1
  %40 = load ptr, ptr %2, align 8
  %41 = getelementptr inbounds %struct.EState, ptr %40, i32 0, i32 22
  %42 = load ptr, ptr %2, align 8
  %43 = getelementptr inbounds %struct.EState, ptr %42, i32 0, i32 13
  %44 = load i32, ptr %43, align 4
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds [256 x i8], ptr %41, i64 0, i64 %45
  store i8 1, ptr %46, align 1
  %47 = load ptr, ptr %2, align 8
  %48 = getelementptr inbounds %struct.EState, ptr %47, i32 0, i32 14
  %49 = load i32, ptr %48, align 8
  switch i32 %49, label %131 [
    i32 1, label %50
    i32 2, label %64
    i32 3, label %91
  ]

50:                                               ; preds = %39
  %51 = load i8, ptr %4, align 1
  %52 = load ptr, ptr %2, align 8
  %53 = getelementptr inbounds %struct.EState, ptr %52, i32 0, i32 9
  %54 = load ptr, ptr %53, align 8
  %55 = load ptr, ptr %2, align 8
  %56 = getelementptr inbounds %struct.EState, ptr %55, i32 0, i32 17
  %57 = load i32, ptr %56, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds i8, ptr %54, i64 %58
  store i8 %51, ptr %59, align 1
  %60 = load ptr, ptr %2, align 8
  %61 = getelementptr inbounds %struct.EState, ptr %60, i32 0, i32 17
  %62 = load i32, ptr %61, align 4
  %63 = add nsw i32 %62, 1
  store i32 %63, ptr %61, align 4
  br label %209

64:                                               ; preds = %39
  %65 = load i8, ptr %4, align 1
  %66 = load ptr, ptr %2, align 8
  %67 = getelementptr inbounds %struct.EState, ptr %66, i32 0, i32 9
  %68 = load ptr, ptr %67, align 8
  %69 = load ptr, ptr %2, align 8
  %70 = getelementptr inbounds %struct.EState, ptr %69, i32 0, i32 17
  %71 = load i32, ptr %70, align 4
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds i8, ptr %68, i64 %72
  store i8 %65, ptr %73, align 1
  %74 = load ptr, ptr %2, align 8
  %75 = getelementptr inbounds %struct.EState, ptr %74, i32 0, i32 17
  %76 = load i32, ptr %75, align 4
  %77 = add nsw i32 %76, 1
  store i32 %77, ptr %75, align 4
  %78 = load i8, ptr %4, align 1
  %79 = load ptr, ptr %2, align 8
  %80 = getelementptr inbounds %struct.EState, ptr %79, i32 0, i32 9
  %81 = load ptr, ptr %80, align 8
  %82 = load ptr, ptr %2, align 8
  %83 = getelementptr inbounds %struct.EState, ptr %82, i32 0, i32 17
  %84 = load i32, ptr %83, align 4
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds i8, ptr %81, i64 %85
  store i8 %78, ptr %86, align 1
  %87 = load ptr, ptr %2, align 8
  %88 = getelementptr inbounds %struct.EState, ptr %87, i32 0, i32 17
  %89 = load i32, ptr %88, align 4
  %90 = add nsw i32 %89, 1
  store i32 %90, ptr %88, align 4
  br label %209

91:                                               ; preds = %39
  %92 = load i8, ptr %4, align 1
  %93 = load ptr, ptr %2, align 8
  %94 = getelementptr inbounds %struct.EState, ptr %93, i32 0, i32 9
  %95 = load ptr, ptr %94, align 8
  %96 = load ptr, ptr %2, align 8
  %97 = getelementptr inbounds %struct.EState, ptr %96, i32 0, i32 17
  %98 = load i32, ptr %97, align 4
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds i8, ptr %95, i64 %99
  store i8 %92, ptr %100, align 1
  %101 = load ptr, ptr %2, align 8
  %102 = getelementptr inbounds %struct.EState, ptr %101, i32 0, i32 17
  %103 = load i32, ptr %102, align 4
  %104 = add nsw i32 %103, 1
  store i32 %104, ptr %102, align 4
  %105 = load i8, ptr %4, align 1
  %106 = load ptr, ptr %2, align 8
  %107 = getelementptr inbounds %struct.EState, ptr %106, i32 0, i32 9
  %108 = load ptr, ptr %107, align 8
  %109 = load ptr, ptr %2, align 8
  %110 = getelementptr inbounds %struct.EState, ptr %109, i32 0, i32 17
  %111 = load i32, ptr %110, align 4
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds i8, ptr %108, i64 %112
  store i8 %105, ptr %113, align 1
  %114 = load ptr, ptr %2, align 8
  %115 = getelementptr inbounds %struct.EState, ptr %114, i32 0, i32 17
  %116 = load i32, ptr %115, align 4
  %117 = add nsw i32 %116, 1
  store i32 %117, ptr %115, align 4
  %118 = load i8, ptr %4, align 1
  %119 = load ptr, ptr %2, align 8
  %120 = getelementptr inbounds %struct.EState, ptr %119, i32 0, i32 9
  %121 = load ptr, ptr %120, align 8
  %122 = load ptr, ptr %2, align 8
  %123 = getelementptr inbounds %struct.EState, ptr %122, i32 0, i32 17
  %124 = load i32, ptr %123, align 4
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds i8, ptr %121, i64 %125
  store i8 %118, ptr %126, align 1
  %127 = load ptr, ptr %2, align 8
  %128 = getelementptr inbounds %struct.EState, ptr %127, i32 0, i32 17
  %129 = load i32, ptr %128, align 4
  %130 = add nsw i32 %129, 1
  store i32 %130, ptr %128, align 4
  br label %209

131:                                              ; preds = %39
  %132 = load ptr, ptr %2, align 8
  %133 = getelementptr inbounds %struct.EState, ptr %132, i32 0, i32 22
  %134 = load ptr, ptr %2, align 8
  %135 = getelementptr inbounds %struct.EState, ptr %134, i32 0, i32 14
  %136 = load i32, ptr %135, align 8
  %137 = sext i32 %136 to i64
  %138 = getelementptr [256 x i8], ptr %133, i64 0, i64 %137
  %139 = getelementptr inbounds i8, ptr %138, i64 -4
  store i8 1, ptr %139, align 1
  %140 = load i8, ptr %4, align 1
  %141 = load ptr, ptr %2, align 8
  %142 = getelementptr inbounds %struct.EState, ptr %141, i32 0, i32 9
  %143 = load ptr, ptr %142, align 8
  %144 = load ptr, ptr %2, align 8
  %145 = getelementptr inbounds %struct.EState, ptr %144, i32 0, i32 17
  %146 = load i32, ptr %145, align 4
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds i8, ptr %143, i64 %147
  store i8 %140, ptr %148, align 1
  %149 = load ptr, ptr %2, align 8
  %150 = getelementptr inbounds %struct.EState, ptr %149, i32 0, i32 17
  %151 = load i32, ptr %150, align 4
  %152 = add nsw i32 %151, 1
  store i32 %152, ptr %150, align 4
  %153 = load i8, ptr %4, align 1
  %154 = load ptr, ptr %2, align 8
  %155 = getelementptr inbounds %struct.EState, ptr %154, i32 0, i32 9
  %156 = load ptr, ptr %155, align 8
  %157 = load ptr, ptr %2, align 8
  %158 = getelementptr inbounds %struct.EState, ptr %157, i32 0, i32 17
  %159 = load i32, ptr %158, align 4
  %160 = sext i32 %159 to i64
  %161 = getelementptr inbounds i8, ptr %156, i64 %160
  store i8 %153, ptr %161, align 1
  %162 = load ptr, ptr %2, align 8
  %163 = getelementptr inbounds %struct.EState, ptr %162, i32 0, i32 17
  %164 = load i32, ptr %163, align 4
  %165 = add nsw i32 %164, 1
  store i32 %165, ptr %163, align 4
  %166 = load i8, ptr %4, align 1
  %167 = load ptr, ptr %2, align 8
  %168 = getelementptr inbounds %struct.EState, ptr %167, i32 0, i32 9
  %169 = load ptr, ptr %168, align 8
  %170 = load ptr, ptr %2, align 8
  %171 = getelementptr inbounds %struct.EState, ptr %170, i32 0, i32 17
  %172 = load i32, ptr %171, align 4
  %173 = sext i32 %172 to i64
  %174 = getelementptr inbounds i8, ptr %169, i64 %173
  store i8 %166, ptr %174, align 1
  %175 = load ptr, ptr %2, align 8
  %176 = getelementptr inbounds %struct.EState, ptr %175, i32 0, i32 17
  %177 = load i32, ptr %176, align 4
  %178 = add nsw i32 %177, 1
  store i32 %178, ptr %176, align 4
  %179 = load i8, ptr %4, align 1
  %180 = load ptr, ptr %2, align 8
  %181 = getelementptr inbounds %struct.EState, ptr %180, i32 0, i32 9
  %182 = load ptr, ptr %181, align 8
  %183 = load ptr, ptr %2, align 8
  %184 = getelementptr inbounds %struct.EState, ptr %183, i32 0, i32 17
  %185 = load i32, ptr %184, align 4
  %186 = sext i32 %185 to i64
  %187 = getelementptr inbounds i8, ptr %182, i64 %186
  store i8 %179, ptr %187, align 1
  %188 = load ptr, ptr %2, align 8
  %189 = getelementptr inbounds %struct.EState, ptr %188, i32 0, i32 17
  %190 = load i32, ptr %189, align 4
  %191 = add nsw i32 %190, 1
  store i32 %191, ptr %189, align 4
  %192 = load ptr, ptr %2, align 8
  %193 = getelementptr inbounds %struct.EState, ptr %192, i32 0, i32 14
  %194 = load i32, ptr %193, align 8
  %195 = sub nsw i32 %194, 4
  %196 = trunc i32 %195 to i8
  %197 = load ptr, ptr %2, align 8
  %198 = getelementptr inbounds %struct.EState, ptr %197, i32 0, i32 9
  %199 = load ptr, ptr %198, align 8
  %200 = load ptr, ptr %2, align 8
  %201 = getelementptr inbounds %struct.EState, ptr %200, i32 0, i32 17
  %202 = load i32, ptr %201, align 4
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds i8, ptr %199, i64 %203
  store i8 %196, ptr %204, align 1
  %205 = load ptr, ptr %2, align 8
  %206 = getelementptr inbounds %struct.EState, ptr %205, i32 0, i32 17
  %207 = load i32, ptr %206, align 4
  %208 = add nsw i32 %207, 1
  store i32 %208, ptr %206, align 4
  br label %209

209:                                              ; preds = %131, %91, %64, %50
  ret void
}

declare i32 @fgetc(ptr noundef) #3

declare i32 @ungetc(i32 noundef, ptr noundef) #3

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: nounwind willreturn memory(read)
declare i32 @isdigit(i32 noundef) #6

; Function Attrs: nounwind
declare ptr @__strcat_chk(ptr noundef, ptr noundef, i64 noundef) #1

; Function Attrs: nounwind
declare i32 @strcmp(ptr noundef, ptr noundef) #1

declare ptr @"\01_fopen"(ptr noundef, ptr noundef) #3

declare ptr @"\01_fdopen"(i32 noundef, ptr noundef) #3

attributes #0 = { noinline nounwind ssp uwtable(sync) "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+altnzcv,+ccdp,+ccidx,+complxnum,+crc,+dit,+dotprod,+flagm,+fp-armv8,+fp16fml,+fptoint,+fullfp16,+jsconv,+lse,+neon,+pauth,+perfmon,+predres,+ras,+rcpc,+rdm,+sb,+sha2,+sha3,+specrestrict,+ssbs,+v8.1a,+v8.2a,+v8.3a,+v8.4a,+v8a,+zcm,+zcz" }
attributes #1 = { nounwind "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+altnzcv,+ccdp,+ccidx,+complxnum,+crc,+dit,+dotprod,+flagm,+fp-armv8,+fp16fml,+fptoint,+fullfp16,+jsconv,+lse,+neon,+pauth,+perfmon,+predres,+ras,+rcpc,+rdm,+sb,+sha2,+sha3,+specrestrict,+ssbs,+v8.1a,+v8.2a,+v8.3a,+v8.4a,+v8a,+zcm,+zcz" }
attributes #2 = { noreturn "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+altnzcv,+ccdp,+ccidx,+complxnum,+crc,+dit,+dotprod,+flagm,+fp-armv8,+fp16fml,+fptoint,+fullfp16,+jsconv,+lse,+neon,+pauth,+perfmon,+predres,+ras,+rcpc,+rdm,+sb,+sha2,+sha3,+specrestrict,+ssbs,+v8.1a,+v8.2a,+v8.3a,+v8.4a,+v8a,+zcm,+zcz" }
attributes #3 = { "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+altnzcv,+ccdp,+ccidx,+complxnum,+crc,+dit,+dotprod,+flagm,+fp-armv8,+fp16fml,+fptoint,+fullfp16,+jsconv,+lse,+neon,+pauth,+perfmon,+predres,+ras,+rcpc,+rdm,+sb,+sha2,+sha3,+specrestrict,+ssbs,+v8.1a,+v8.2a,+v8.3a,+v8.4a,+v8a,+zcm,+zcz" }
attributes #4 = { allocsize(0) "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+altnzcv,+ccdp,+ccidx,+complxnum,+crc,+dit,+dotprod,+flagm,+fp-armv8,+fp16fml,+fptoint,+fullfp16,+jsconv,+lse,+neon,+pauth,+perfmon,+predres,+ras,+rcpc,+rdm,+sb,+sha2,+sha3,+specrestrict,+ssbs,+v8.1a,+v8.2a,+v8.3a,+v8.4a,+v8a,+zcm,+zcz" }
attributes #5 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #6 = { nounwind willreturn memory(read) "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+altnzcv,+ccdp,+ccidx,+complxnum,+crc,+dit,+dotprod,+flagm,+fp-armv8,+fp16fml,+fptoint,+fullfp16,+jsconv,+lse,+neon,+pauth,+perfmon,+predres,+ras,+rcpc,+rdm,+sb,+sha2,+sha3,+specrestrict,+ssbs,+v8.1a,+v8.2a,+v8.3a,+v8.4a,+v8a,+zcm,+zcz" }
attributes #7 = { nounwind }
attributes #8 = { noreturn }
attributes #9 = { allocsize(0) }
attributes #10 = { nounwind willreturn memory(read) }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"uwtable", i32 1}
!3 = !{i32 7, !"frame-pointer", i32 1}
!4 = !{!"Homebrew clang version 19.1.6"}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.mustprogress"}
!7 = distinct !{!7, !6}
!8 = distinct !{!8, !6}
!9 = distinct !{!9, !6}
!10 = distinct !{!10, !6}
